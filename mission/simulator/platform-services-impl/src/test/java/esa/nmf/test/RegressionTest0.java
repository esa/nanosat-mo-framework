package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        shortList3.trimToSize();
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList3.listIterator();
        shortList3.ensureCapacity((int) ' ');
        boolean boolean10 = shortList3.contains((java.lang.Object) (-1.0f));
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray11 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList12, uRIArray11);
        boolean boolean15 = uRIList12.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray20 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList21 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList21, doubleArray20);
        java.lang.Short[] shortArray26 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList27 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList27, shortArray26);
        java.lang.Byte[] byteArray30 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList31 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList31, byteArray30);
        java.lang.Float[] floatArray36 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList37 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList37, floatArray36);
        boolean boolean39 = byteList31.containsAll((java.util.Collection<java.lang.Float>) floatList37);
        boolean boolean40 = shortList27.containsAll((java.util.Collection<java.lang.Float>) floatList37);
        boolean boolean41 = doubleList21.contains((java.lang.Object) shortList27);
        doubleList21.trimToSize();
        int int43 = uRIList12.indexOf((java.lang.Object) doubleList21);
        opssat.simulator.main.ESASimulator eSASimulator44 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter45 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator44);
        boolean boolean46 = doubleList21.remove((java.lang.Object) autonomousADCSSoftSimAdapter45);
        opssat.simulator.main.ESASimulator eSASimulator47 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter48 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator47);
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode51 = autonomousADCSSoftSimAdapter50.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode52 = null;
        java.lang.String str53 = autonomousADCSSoftSimAdapter50.validateAttitudeDescriptor(attitudeMode52);
        boolean boolean54 = autonomousADCSSoftSimAdapter50.isUnitAvailable();
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter[] autonomousADCSSoftSimAdapterArray55 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter[] { autonomousADCSSoftSimAdapter45, autonomousADCSSoftSimAdapter48, autonomousADCSSoftSimAdapter50 };
        try {
            esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter[] autonomousADCSSoftSimAdapterArray56 = shortList3.toArray(autonomousADCSSoftSimAdapterArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uRIArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(shortArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(floatArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNull(attitudeMode51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(autonomousADCSSoftSimAdapterArray55);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        doubleList10.ensureCapacity((-15));
        try {
            java.util.ListIterator<java.lang.Double> doubleItor39 = doubleList10.listIterator((-9));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -9");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList2 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList2, shortArray1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long6 = uRI5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        int int8 = shortList2.indexOf((java.lang.Object) uRI5);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long15 = uRI14.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uRI14.getServiceNumber();
        int int17 = shortList11.indexOf((java.lang.Object) uRI14);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = uRI14.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray19 = new org.ccsds.moims.mo.mal.structures.URI[] { uRI5, uRI14 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList20, uRIArray19);
        java.lang.Integer[] intArray32 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList33 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList33, intArray32);
        int int35 = intList33.size();
        java.util.Spliterator<java.lang.Integer> intSpliterator36 = intList33.spliterator();
        java.lang.String[] strArray41 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Iterator<java.lang.String> strItor44 = strList42.iterator();
        java.lang.String str46 = strList42.remove((int) (byte) 0);
        java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
        java.lang.Float[] floatArray54 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList55 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList55, floatArray54);
        boolean boolean57 = byteList49.containsAll((java.util.Collection<java.lang.Float>) floatList55);
        java.lang.Float[] floatArray61 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList62 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList62, floatArray61);
        int int64 = floatList62.size();
        boolean boolean65 = floatList55.containsAll((java.util.Collection<java.lang.Float>) floatList62);
        boolean boolean66 = strList42.containsAll((java.util.Collection<java.lang.Float>) floatList55);
        boolean boolean67 = intList33.containsAll((java.util.Collection<java.lang.Float>) floatList55);
        boolean boolean68 = uRIList20.contains((java.lang.Object) boolean67);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator69 = uRIList20.spliterator();
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream70 = uRIList20.stream();
        opssat.simulator.main.ESASimulator eSASimulator71 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter72 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator71);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode73 = autonomousADCSSoftSimAdapter72.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode74 = null;
        java.lang.String str75 = autonomousADCSSoftSimAdapter72.validateAttitudeDescriptor(attitudeMode74);
        boolean boolean76 = autonomousADCSSoftSimAdapter72.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode77 = autonomousADCSSoftSimAdapter72.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode78 = null;
        java.lang.String str79 = autonomousADCSSoftSimAdapter72.validateAttitudeDescriptor(attitudeMode78);
        boolean boolean80 = uRIList20.contains((java.lang.Object) attitudeMode78);
        org.ccsds.moims.mo.mal.structures.URI uRI83 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.String str84 = uRI83.getValue();
        java.lang.String str85 = uRI83.toString();
        java.lang.Long long86 = uRI83.getShortForm();
        try {
            uRIList20.add(4, uRI83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 4, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487890L + "'", long6.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487890L + "'", long15.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertNotNull(uRIArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(intSpliterator36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertNotNull(strItor44);
        org.junit.Assert.assertTrue("'" + str46 + "' != '" + "[true, true]" + "'", str46.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(floatArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(floatArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(uRISpliterator69);
        org.junit.Assert.assertNotNull(uRIStream70);
        org.junit.Assert.assertNull(attitudeMode73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNull(attitudeMode77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + str84 + "' != '" + "[, [1], [true, true], ]" + "'", str84.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "[, [1], [true, true], ]" + "'", str85.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 281474993487890L + "'", long86.equals(281474993487890L));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.util.Spliterator<java.lang.Double> doubleSpliterator36 = doubleList10.spliterator();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(doubleSpliterator36);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position2 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.lang.Long[] longArray3 = new java.lang.Long[] { (-1L), 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList4 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList4, longArray3);
        java.util.ListIterator<java.lang.Long> longItor7 = longList4.listIterator(3);
        java.lang.String str8 = longList4.toString();
        java.util.stream.Stream<java.lang.Long> longStream9 = longList4.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator10);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator12);
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator14);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator16);
        opssat.simulator.main.ESASimulator eSASimulator18 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter19 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator18);
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter[] gPSSoftSimAdapterArray20 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter[] { gPSSoftSimAdapter11, gPSSoftSimAdapter13, gPSSoftSimAdapter15, gPSSoftSimAdapter17, gPSSoftSimAdapter19 };
        try {
            esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter[] gPSSoftSimAdapterArray21 = longList4.toArray(gPSSoftSimAdapterArray20);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(longArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(longItor7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[-1, 10, 100]" + "'", str8.equals("[-1, 10, 100]"));
        org.junit.Assert.assertNotNull(longStream9);
        org.junit.Assert.assertNotNull(gPSSoftSimAdapterArray20);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList2 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.lang.String[] strArray4 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.Iterator<java.lang.String> strItor7 = strList5.iterator();
        int int9 = strList5.lastIndexOf((java.lang.Object) "hi!");
        org.ccsds.moims.mo.mal.structures.StringList stringList11 = new org.ccsds.moims.mo.mal.structures.StringList((int) '4');
        boolean boolean13 = stringList11.add("hi!");
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = stringList11.getAreaNumber();
        int int15 = strList5.lastIndexOf((java.lang.Object) stringList11);
        java.util.Spliterator<java.lang.String> strSpliterator16 = strList5.spliterator();
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator17);
        org.ccsds.moims.mo.mal.structures.Duration duration19 = cameraSoftSimAdapter18.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList20 = cameraSoftSimAdapter18.getAvailableResolutions();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator21);
        java.lang.String str23 = cameraSoftSimAdapter22.getExtraInfo();
        opssat.simulator.main.ESASimulator eSASimulator24 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter25 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator24);
        org.ccsds.moims.mo.mal.structures.Duration duration26 = cameraSoftSimAdapter25.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList27 = cameraSoftSimAdapter25.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration28 = cameraSoftSimAdapter25.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList29 = cameraSoftSimAdapter25.getAvailableResolutions();
        java.lang.String str30 = cameraSoftSimAdapter25.getExtraInfo();
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] cameraSoftSimAdapterArray31 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] { cameraSoftSimAdapter18, cameraSoftSimAdapter22, cameraSoftSimAdapter25 };
        try {
            esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] cameraSoftSimAdapterArray32 = strList5.toArray(cameraSoftSimAdapterArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(strSpliterator16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(pixelResolutionList20);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str23.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration26);
        org.junit.Assert.assertNotNull(pixelResolutionList27);
        org.junit.Assert.assertNotNull(duration28);
        org.junit.Assert.assertNotNull(pixelResolutionList29);
        org.junit.Assert.assertTrue("'" + str30 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str30.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(cameraSoftSimAdapterArray31);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position3 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.lang.Short[] shortArray5 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10, (short) 1, (short) -1 };
        java.util.ArrayList<java.lang.Short> shortList6 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList6, shortArray5);
        int int9 = shortList6.lastIndexOf((java.lang.Object) (byte) 1);
        java.lang.String str10 = shortList6.toString();
        java.lang.Integer[] intArray21 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList22 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList22, intArray21);
        int int24 = intList22.size();
        java.util.Spliterator<java.lang.Integer> intSpliterator25 = intList22.spliterator();
        org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList(10);
        boolean boolean28 = intList22.contains((java.lang.Object) octetList27);
        java.lang.String[] strArray33 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Iterator<java.lang.String> strItor36 = strList34.iterator();
        java.lang.String str38 = strList34.remove((int) (byte) 0);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        boolean boolean49 = byteList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Float[] floatArray53 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
        int int56 = floatList54.size();
        boolean boolean57 = floatList47.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean58 = strList34.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean59 = intList22.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean60 = shortList6.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        opssat.simulator.main.ESASimulator eSASimulator61 = null;
        esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter powerControlSoftSimAdapter62 = new esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter(eSASimulator61);
        opssat.simulator.main.ESASimulator eSASimulator63 = null;
        esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter powerControlSoftSimAdapter64 = new esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter(eSASimulator63);
        opssat.simulator.main.ESASimulator eSASimulator65 = null;
        esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter powerControlSoftSimAdapter66 = new esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter(eSASimulator65);
        opssat.simulator.main.ESASimulator eSASimulator67 = null;
        esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter powerControlSoftSimAdapter68 = new esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter(eSASimulator67);
        java.util.Map<org.ccsds.moims.mo.mal.structures.Identifier, org.ccsds.moims.mo.platform.powercontrol.structures.Device> identifierMap69 = powerControlSoftSimAdapter68.getDeviceMap();
        esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter[] powerControlSoftSimAdapterArray70 = new esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter[] { powerControlSoftSimAdapter62, powerControlSoftSimAdapter64, powerControlSoftSimAdapter66, powerControlSoftSimAdapter68 };
        try {
            esa.mo.platform.impl.provider.softsim.PowerControlSoftSimAdapter[] powerControlSoftSimAdapterArray71 = shortList6.toArray(powerControlSoftSimAdapterArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[1, -1, 10, 1, -1]" + "'", str10.equals("[1, -1, 10, 1, -1]"));
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertNotNull(intSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(identifierMap69);
        org.junit.Assert.assertNotNull(powerControlSoftSimAdapterArray70);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PictureFormatList pictureFormatList6 = cameraSoftSimAdapter1.getAvailableFormats();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(pictureFormatList6);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        java.lang.Class<?> wildcardClass1 = uShort0.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = new org.ccsds.moims.mo.mal.structures.UShort(3);
        byte[] byteArray5 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        int int7 = blob6.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = blob6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort0, uShort2, uShort4, uShort8, uShort9, uShort10, uShort11 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList13, uShortArray12);
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList19 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList19, doubleArray18);
        java.lang.Float[] floatArray24 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList25 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList25, floatArray24);
        int int27 = floatList25.size();
        boolean boolean28 = doubleList19.containsAll((java.util.Collection<java.lang.Float>) floatList25);
        boolean boolean29 = uShortList13.equals((java.lang.Object) doubleList19);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList31 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = booleanList31.getAreaNumber();
        int int33 = uShortList13.lastIndexOf((java.lang.Object) booleanList31);
        java.lang.String str34 = uShortList13.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = uShortList13.remove((int) (byte) 0);
        uShortList13.ensureCapacity(1);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = uShort39.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList42 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        boolean boolean43 = uShort40.equals((java.lang.Object) 2);
        int int44 = uShortList13.lastIndexOf((java.lang.Object) boolean43);
        opssat.simulator.main.ESASimulator eSASimulator45 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter46 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator45);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode47 = autonomousADCSSoftSimAdapter46.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode48 = null;
        java.lang.String str49 = autonomousADCSSoftSimAdapter46.validateAttitudeDescriptor(attitudeMode48);
        boolean boolean50 = autonomousADCSSoftSimAdapter46.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode51 = autonomousADCSSoftSimAdapter46.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode52 = null;
        java.lang.String str53 = autonomousADCSSoftSimAdapter46.validateAttitudeDescriptor(attitudeMode52);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode54 = null;
        autonomousADCSSoftSimAdapter46.setDesiredAttitude(attitudeMode54);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode56 = null;
        autonomousADCSSoftSimAdapter46.setDesiredAttitude(attitudeMode56);
        boolean boolean58 = uShortList13.contains((java.lang.Object) attitudeMode56);
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + str34 + "' != '" + "[0, 0, 3, 1, 0, 1, 1]" + "'", str34.equals("[0, 0, 3, 1, 0, 1, 1]"));
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(attitudeMode47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNull(attitudeMode51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str9 = duration8.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "10.0" + "'", str9.equals("10.0"));
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList3 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = integerList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = integerList0.createElement();
        integerList0.clear();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator4);
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter5.isUnitAvailable();
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter5.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = integerList0.contains((java.lang.Object) true);
        try {
            java.lang.Integer int11 = integerList0.remove((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList6 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.lang.Short[] shortArray4 = new java.lang.Short[] { (short) 10, (short) 10, (short) 1, (short) 0 };
        java.util.ArrayList<java.lang.Short> shortList5 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList5, shortArray4);
        java.lang.Object obj7 = shortList5.clone();
        boolean boolean8 = shortList5.isEmpty();
        java.util.Iterator<java.lang.Short> shortItor9 = shortList5.iterator();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator10);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray12 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter11 };
        opssat.simulator.main.ESASimulator eSASimulator13 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter14 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator13);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray15 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter14 };
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator16);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray18 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter17 };
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[][] gPSAdapterInterfaceArray19 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[][] { gPSAdapterInterfaceArray12, gPSAdapterInterfaceArray15, gPSAdapterInterfaceArray18 };
        try {
            esa.mo.platform.impl.provider.gen.GPSAdapterInterface[][] gPSAdapterInterfaceArray20 = shortList5.toArray(gPSAdapterInterfaceArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(obj7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray12);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray15);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray18);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray19);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "[1]", "[true, true]", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray14 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort13 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15, uShortArray14);
        java.lang.String str17 = uShortList15.toString();
        boolean boolean19 = uShortList15.remove((java.lang.Object) (-1));
        int int20 = strList11.indexOf((java.lang.Object) boolean19);
        java.lang.String str21 = strList11.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        java.lang.Class<?> wildcardClass23 = uShort22.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = new org.ccsds.moims.mo.mal.structures.UShort(3);
        byte[] byteArray27 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray27);
        int int29 = blob28.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort22, uShort24, uShort26, uShort30, uShort31, uShort32, uShort33 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList41 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList41, doubleArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = doubleList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = uShortList35.equals((java.lang.Object) doubleList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList53 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = booleanList53.getAreaNumber();
        int int55 = uShortList35.lastIndexOf((java.lang.Object) booleanList53);
        java.lang.Integer int56 = booleanList53.getTypeShortForm();
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        java.lang.Float[] floatArray64 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList65 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList65, floatArray64);
        boolean boolean67 = byteList59.containsAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean68 = floatList65.isEmpty();
        boolean boolean69 = booleanList53.retainAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean70 = strList11.removeAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean71 = duration2.equals((java.lang.Object) strList11);
        org.ccsds.moims.mo.mal.structures.LongList longList73 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor74 = longList73.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet75 = longList73.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = longList73.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList77 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.Element element78 = longList77.createElement();
        int int79 = longList73.lastIndexOf((java.lang.Object) longList77);
        java.lang.Object[] objArray80 = longList73.toArray();
        boolean boolean81 = strList11.equals((java.lang.Object) objArray80);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[1]" + "'", str17.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[, [1], [true, true], ]" + "'", str21.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-2) + "'", int56.equals((-2)));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(longItor74);
        org.junit.Assert.assertNotNull(uOctet75);
        org.junit.Assert.assertNotNull(uOctet76);
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", !boolean81);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position6 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort0 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        java.lang.String str4 = uShortList2.toString();
        boolean boolean6 = uShortList2.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList8 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean9 = uShortList2.remove((java.lang.Object) stringList8);
        uShortList2.ensureCapacity(13);
        org.ccsds.moims.mo.mal.structures.Duration duration12 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str13 = duration12.toString();
        double double14 = duration12.getValue();
        boolean boolean15 = uShortList2.contains((java.lang.Object) duration12);
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19, booleanArray18);
        java.lang.String str21 = booleanList19.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream22 = booleanList19.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean25 = booleanList19.remove((java.lang.Object) stringList24);
        java.util.stream.Stream<java.lang.Boolean> booleanStream26 = booleanList19.parallelStream();
        java.lang.Boolean[] booleanArray29 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList30 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList30, booleanArray29);
        java.lang.String str32 = booleanList30.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream33 = booleanList30.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList35 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean36 = booleanList30.remove((java.lang.Object) stringList35);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        int int43 = floatList41.size();
        boolean boolean44 = booleanList30.removeAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean45 = booleanList19.removeAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean46 = uShortList2.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        java.lang.Integer[] intArray57 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList58 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
        int int60 = intList58.size();
        boolean boolean61 = uShortList2.remove((java.lang.Object) int60);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream62 = uShortList2.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator63 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter64 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator63);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode65 = null;
        autonomousADCSSoftSimAdapter64.setDesiredAttitude(attitudeMode65);
        boolean boolean67 = autonomousADCSSoftSimAdapter64.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator68 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter69 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator68);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode70 = null;
        autonomousADCSSoftSimAdapter69.setDesiredAttitude(attitudeMode70);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode72 = autonomousADCSSoftSimAdapter69.getActiveAttitudeMode();
        opssat.simulator.main.ESASimulator eSASimulator73 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter74 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator73);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode75 = null;
        autonomousADCSSoftSimAdapter74.setDesiredAttitude(attitudeMode75);
        opssat.simulator.main.ESASimulator eSASimulator77 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter78 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator77);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode79 = null;
        autonomousADCSSoftSimAdapter78.setDesiredAttitude(attitudeMode79);
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray81 = new esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] { autonomousADCSSoftSimAdapter64, autonomousADCSSoftSimAdapter69, autonomousADCSSoftSimAdapter74, autonomousADCSSoftSimAdapter78 };
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray82 = uShortList2.toArray(autonomousADCSAdapterInterfaceArray81);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor83 = uShortList2.iterator();
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[1]" + "'", str4.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "0.0" + "'", str13.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[true, true]" + "'", str21.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(booleanStream26);
        org.junit.Assert.assertNotNull(booleanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[true, true]" + "'", str32.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
        org.junit.Assert.assertNotNull(uShortStream62);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNull(attitudeMode72);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray81);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray82);
        org.junit.Assert.assertNotNull(uShortItor83);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        shortList3.trimToSize();
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList3.listIterator();
        boolean boolean8 = shortList3.remove((java.lang.Object) (-1L));
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator9);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration14 = null;
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter10.setConfiguration(sDRConfiguration14);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator16);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter17.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter17.enableSDR((java.lang.Boolean) false);
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        boolean boolean23 = softwareDefinedRadioSoftSimAdapter22.isUnitAvailable();
        boolean boolean24 = softwareDefinedRadioSoftSimAdapter22.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration25 = null;
        boolean boolean26 = softwareDefinedRadioSoftSimAdapter22.setConfiguration(sDRConfiguration25);
        boolean boolean28 = softwareDefinedRadioSoftSimAdapter22.enableSDR((java.lang.Boolean) true);
        boolean boolean30 = softwareDefinedRadioSoftSimAdapter22.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration31 = null;
        boolean boolean32 = softwareDefinedRadioSoftSimAdapter22.setConfiguration(sDRConfiguration31);
        boolean boolean34 = softwareDefinedRadioSoftSimAdapter22.enableSDR((java.lang.Boolean) false);
        opssat.simulator.main.ESASimulator eSASimulator35 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter36 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator35);
        boolean boolean37 = softwareDefinedRadioSoftSimAdapter36.isUnitAvailable();
        boolean boolean38 = softwareDefinedRadioSoftSimAdapter36.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration39 = null;
        boolean boolean40 = softwareDefinedRadioSoftSimAdapter36.setConfiguration(sDRConfiguration39);
        boolean boolean42 = softwareDefinedRadioSoftSimAdapter36.enableSDR((java.lang.Boolean) true);
        boolean boolean43 = softwareDefinedRadioSoftSimAdapter36.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator44 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter45 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator44);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration46 = null;
        boolean boolean47 = softwareDefinedRadioSoftSimAdapter45.setConfiguration(sDRConfiguration46);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration48 = null;
        boolean boolean49 = softwareDefinedRadioSoftSimAdapter45.setConfiguration(sDRConfiguration48);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration50 = null;
        boolean boolean51 = softwareDefinedRadioSoftSimAdapter45.setConfiguration(sDRConfiguration50);
        opssat.simulator.main.ESASimulator eSASimulator52 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter53 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator52);
        boolean boolean54 = softwareDefinedRadioSoftSimAdapter53.isUnitAvailable();
        boolean boolean55 = softwareDefinedRadioSoftSimAdapter53.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration56 = null;
        boolean boolean57 = softwareDefinedRadioSoftSimAdapter53.setConfiguration(sDRConfiguration56);
        boolean boolean59 = softwareDefinedRadioSoftSimAdapter53.enableSDR((java.lang.Boolean) true);
        boolean boolean61 = softwareDefinedRadioSoftSimAdapter53.enableSDR((java.lang.Boolean) false);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray62 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter10, softwareDefinedRadioSoftSimAdapter17, softwareDefinedRadioSoftSimAdapter22, softwareDefinedRadioSoftSimAdapter36, softwareDefinedRadioSoftSimAdapter45, softwareDefinedRadioSoftSimAdapter53 };
        try {
            esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray63 = shortList3.toArray(softwareDefinedRadioAdapterInterfaceArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray62);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PictureFormatList pictureFormatList6 = cameraSoftSimAdapter1.getAvailableFormats();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(pictureFormatList6);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList2 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList2, shortArray1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long6 = uRI5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        int int8 = shortList2.indexOf((java.lang.Object) uRI5);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = doubleList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element11 = doubleList9.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList9.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = doubleList9.getServiceNumber();
        boolean boolean14 = uRI5.equals((java.lang.Object) doubleList9);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        longList18.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray22 = longList18.toArray();
        boolean boolean24 = longList18.remove((java.lang.Object) '#');
        boolean boolean25 = longList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        boolean boolean28 = longList18.retainAll((java.util.Collection<java.lang.Float>) floatList27);
        boolean boolean29 = doubleList9.containsAll((java.util.Collection<java.lang.Float>) floatList27);
        opssat.simulator.main.ESASimulator eSASimulator30 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter31 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator30);
        org.ccsds.moims.mo.mal.structures.Duration duration32 = cameraSoftSimAdapter31.getMinimumPeriod();
        java.lang.String str33 = cameraSoftSimAdapter31.getExtraInfo();
        boolean boolean34 = cameraSoftSimAdapter31.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration35 = cameraSoftSimAdapter31.getMinimumPeriod();
        boolean boolean36 = doubleList9.equals((java.lang.Object) cameraSoftSimAdapter31);
        java.lang.String str37 = doubleList9.toString();
        java.lang.Long long38 = doubleList9.getShortForm();
        try {
            java.lang.Double double40 = doubleList9.remove(2);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487890L + "'", long6.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str33.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]" + "'", str37.equals("[]"));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 281475010265083L + "'", long38.equals(281475010265083L));
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.String[] strArray8 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Iterator<java.lang.String> strItor11 = strList9.iterator();
        java.lang.String str13 = strList9.remove((int) (byte) 0);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        java.lang.Float[] floatArray21 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList22 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList22, floatArray21);
        boolean boolean24 = byteList16.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        java.lang.Float[] floatArray28 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList29 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList29, floatArray28);
        int int31 = floatList29.size();
        boolean boolean32 = floatList22.containsAll((java.util.Collection<java.lang.Float>) floatList29);
        boolean boolean33 = strList9.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        boolean boolean34 = doubleList2.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray36 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort35 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37, uShortArray36);
        java.lang.String str39 = uShortList37.toString();
        int int40 = floatList22.lastIndexOf((java.lang.Object) str39);
        opssat.simulator.main.ESASimulator eSASimulator41 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter42 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator41);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode43 = autonomousADCSSoftSimAdapter42.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode44 = null;
        java.lang.String str45 = autonomousADCSSoftSimAdapter42.validateAttitudeDescriptor(attitudeMode44);
        boolean boolean46 = autonomousADCSSoftSimAdapter42.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode47 = null;
        java.lang.String str48 = autonomousADCSSoftSimAdapter42.validateAttitudeDescriptor(attitudeMode47);
        boolean boolean49 = floatList22.contains((java.lang.Object) attitudeMode47);
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[true, true]" + "'", str13.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertNotNull(uShortArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[1]" + "'", str39.equals("[1]"));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(attitudeMode43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration6);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration8 = null;
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration8);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position5 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList2 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList2, shortArray1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long6 = uRI5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        int int8 = shortList2.indexOf((java.lang.Object) uRI5);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = doubleList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element11 = doubleList9.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList9.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = doubleList9.getServiceNumber();
        boolean boolean14 = uRI5.equals((java.lang.Object) doubleList9);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        longList18.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray22 = longList18.toArray();
        boolean boolean24 = longList18.remove((java.lang.Object) '#');
        boolean boolean25 = longList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        boolean boolean28 = longList18.retainAll((java.util.Collection<java.lang.Float>) floatList27);
        boolean boolean29 = doubleList9.containsAll((java.util.Collection<java.lang.Float>) floatList27);
        opssat.simulator.main.ESASimulator eSASimulator30 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter31 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator30);
        org.ccsds.moims.mo.mal.structures.Duration duration32 = cameraSoftSimAdapter31.getMinimumPeriod();
        java.lang.String str33 = cameraSoftSimAdapter31.getExtraInfo();
        boolean boolean34 = cameraSoftSimAdapter31.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration35 = cameraSoftSimAdapter31.getMinimumPeriod();
        boolean boolean36 = doubleList9.equals((java.lang.Object) cameraSoftSimAdapter31);
        java.lang.String str37 = doubleList9.toString();
        try {
            java.util.List<java.lang.Double> doubleList40 = doubleList9.subList((-10), (-18));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487890L + "'", long6.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str33.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]" + "'", str37.equals("[]"));
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        boolean boolean10 = uRIList7.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        java.lang.Float[] floatArray31 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList32 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList32, floatArray31);
        boolean boolean34 = byteList26.containsAll((java.util.Collection<java.lang.Float>) floatList32);
        boolean boolean35 = shortList22.containsAll((java.util.Collection<java.lang.Float>) floatList32);
        boolean boolean36 = doubleList16.contains((java.lang.Object) shortList22);
        doubleList16.trimToSize();
        int int38 = uRIList7.indexOf((java.lang.Object) doubleList16);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        boolean boolean49 = byteList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean50 = doubleList16.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        int int51 = doubleList16.size();
        boolean boolean53 = doubleList16.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList16.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator55 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter56 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator55);
        org.ccsds.moims.mo.mal.structures.Duration duration57 = cameraSoftSimAdapter56.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration58 = cameraSoftSimAdapter56.getMinimumPeriod();
        int int59 = doubleList16.lastIndexOf((java.lang.Object) duration58);
        boolean boolean60 = uShort5.equals((java.lang.Object) doubleList16);
        java.util.stream.Stream<java.lang.Double> doubleStream61 = doubleList16.parallelStream();
        try {
            java.util.ListIterator<java.lang.Double> doubleItor63 = doubleList16.listIterator((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 100");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(doubleStream61);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode2);
        boolean boolean4 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        java.lang.String str6 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(attitudeMode7);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        boolean boolean8 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode9);
        boolean boolean11 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean12 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.lang.Integer[] intArray10 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList11 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList11, intArray10);
        int int13 = intList11.size();
        java.util.Spliterator<java.lang.Integer> intSpliterator14 = intList11.spliterator();
        org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList(10);
        boolean boolean17 = intList11.contains((java.lang.Object) octetList16);
        java.lang.Integer int18 = octetList16.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor19 = octetList16.iterator();
        opssat.simulator.main.ESASimulator eSASimulator20 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter21 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator20);
        org.ccsds.moims.mo.mal.structures.Duration duration22 = cameraSoftSimAdapter21.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration23 = cameraSoftSimAdapter21.getMinimumPeriod();
        java.lang.String str24 = cameraSoftSimAdapter21.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration25 = cameraSoftSimAdapter21.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList26 = cameraSoftSimAdapter21.getAvailableResolutions();
        opssat.simulator.main.ESASimulator eSASimulator27 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter28 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator27);
        org.ccsds.moims.mo.mal.structures.Duration duration29 = cameraSoftSimAdapter28.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration30 = cameraSoftSimAdapter28.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList31 = cameraSoftSimAdapter28.getAvailableResolutions();
        opssat.simulator.main.ESASimulator eSASimulator32 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter33 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator32);
        org.ccsds.moims.mo.mal.structures.Duration duration34 = cameraSoftSimAdapter33.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration35 = cameraSoftSimAdapter33.getMinimumPeriod();
        java.lang.String str36 = cameraSoftSimAdapter33.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList37 = cameraSoftSimAdapter33.getAvailableResolutions();
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] cameraSoftSimAdapterArray38 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] { cameraSoftSimAdapter21, cameraSoftSimAdapter28, cameraSoftSimAdapter33 };
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter[] cameraSoftSimAdapterArray39 = octetList16.toArray(cameraSoftSimAdapterArray38);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(intSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-7) + "'", int18.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor19);
        org.junit.Assert.assertNotNull(duration22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str24.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration25);
        org.junit.Assert.assertNotNull(pixelResolutionList26);
        org.junit.Assert.assertNotNull(duration29);
        org.junit.Assert.assertNotNull(duration30);
        org.junit.Assert.assertNotNull(pixelResolutionList31);
        org.junit.Assert.assertNotNull(duration34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + str36 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str36.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList37);
        org.junit.Assert.assertNotNull(cameraSoftSimAdapterArray38);
        org.junit.Assert.assertNotNull(cameraSoftSimAdapterArray39);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList8 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(pixelResolutionList8);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        java.lang.String[] strArray4 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.Iterator<java.lang.String> strItor7 = strList5.iterator();
        java.lang.String str9 = strList5.remove((int) (byte) 0);
        java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
        java.lang.Float[] floatArray17 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList18 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList18, floatArray17);
        boolean boolean20 = byteList12.containsAll((java.util.Collection<java.lang.Float>) floatList18);
        java.lang.Float[] floatArray24 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList25 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList25, floatArray24);
        int int27 = floatList25.size();
        boolean boolean28 = floatList18.containsAll((java.util.Collection<java.lang.Float>) floatList25);
        boolean boolean29 = strList5.removeAll((java.util.Collection<java.lang.Float>) floatList25);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = new org.ccsds.moims.mo.mal.structures.UOctet();
        int int31 = strList5.lastIndexOf((java.lang.Object) uOctet30);
        opssat.simulator.main.ESASimulator eSASimulator32 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter33 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator32);
        boolean boolean34 = softwareDefinedRadioSoftSimAdapter33.isUnitAvailable();
        boolean boolean35 = softwareDefinedRadioSoftSimAdapter33.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration36 = null;
        boolean boolean37 = softwareDefinedRadioSoftSimAdapter33.setConfiguration(sDRConfiguration36);
        boolean boolean38 = uOctet30.equals((java.lang.Object) boolean37);
        java.lang.Long long39 = uOctet30.getShortForm();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[true, true]" + "'", str9.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(floatArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(floatArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487880L + "'", long39.equals(281474993487880L));
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList3 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList3, longArray2);
        longList3.ensureCapacity((int) (byte) 100);
        java.lang.String str7 = longList3.toString();
        java.util.stream.Stream<java.lang.Long> longStream8 = longList3.stream();
        java.lang.String str9 = longList3.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Iterator<java.lang.String> strItor17 = strList15.iterator();
        java.lang.String str19 = strList15.remove((int) (byte) 0);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        java.lang.Float[] floatArray27 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList28 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList28, floatArray27);
        boolean boolean30 = byteList22.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        java.lang.Float[] floatArray34 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList35 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList35, floatArray34);
        int int37 = floatList35.size();
        boolean boolean38 = floatList28.containsAll((java.util.Collection<java.lang.Float>) floatList35);
        boolean boolean39 = strList15.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList44 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList44, shortArray43);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        java.lang.Float[] floatArray53 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
        boolean boolean56 = byteList48.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean57 = shortList44.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean58 = floatList28.retainAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean59 = longList3.retainAll((java.util.Collection<java.lang.Float>) floatList28);
        opssat.simulator.main.ESASimulator eSASimulator60 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter61 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator60);
        org.ccsds.moims.mo.mal.structures.Duration duration62 = cameraSoftSimAdapter61.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList63 = cameraSoftSimAdapter61.getAvailableResolutions();
        boolean boolean64 = longList3.contains((java.lang.Object) cameraSoftSimAdapter61);
        java.lang.Object[] objArray65 = longList3.toArray();
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[281475010265077, 100]" + "'", str7.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longStream8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[281475010265077, 100]" + "'", str9.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true, true]" + "'", str19.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(pixelResolutionList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertNotNull(objArray65);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.lang.Object obj37 = null;
        boolean boolean38 = doubleList10.equals(obj37);
        java.lang.Double double40 = doubleList10.remove((int) (short) 0);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40.equals(1.0d));
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList2 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList2, shortArray1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long6 = uRI5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        int int8 = shortList2.indexOf((java.lang.Object) uRI5);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = doubleList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element11 = doubleList9.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList9.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = doubleList9.getServiceNumber();
        boolean boolean14 = uRI5.equals((java.lang.Object) doubleList9);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        longList18.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray22 = longList18.toArray();
        boolean boolean24 = longList18.remove((java.lang.Object) '#');
        boolean boolean25 = longList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        boolean boolean28 = longList18.retainAll((java.util.Collection<java.lang.Float>) floatList27);
        boolean boolean29 = doubleList9.containsAll((java.util.Collection<java.lang.Float>) floatList27);
        opssat.simulator.main.ESASimulator eSASimulator30 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter31 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator30);
        org.ccsds.moims.mo.mal.structures.Duration duration32 = cameraSoftSimAdapter31.getMinimumPeriod();
        java.lang.String str33 = cameraSoftSimAdapter31.getExtraInfo();
        boolean boolean34 = cameraSoftSimAdapter31.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration35 = cameraSoftSimAdapter31.getMinimumPeriod();
        boolean boolean36 = doubleList9.equals((java.lang.Object) cameraSoftSimAdapter31);
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = doubleList9.getServiceNumber();
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487890L + "'", long6.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str33.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertNotNull(uShort37);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = doubleList0.getAreaVersion();
        java.lang.Object obj2 = doubleList0.clone();
        java.lang.Float[] floatArray5 = new java.lang.Float[] { 0.0f, 1.0f };
        java.util.ArrayList<java.lang.Float> floatList6 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList6, floatArray5);
        boolean boolean8 = doubleList0.removeAll((java.util.Collection<java.lang.Float>) floatList6);
        java.util.Spliterator<java.lang.Double> doubleSpliterator9 = doubleList0.spliterator();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList11 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.Element element12 = uShortList11.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uShortList11.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element14 = uShortList11.createElement();
        opssat.simulator.main.ESASimulator eSASimulator15 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter16 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator15);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator17);
        opssat.simulator.main.ESASimulator eSASimulator19 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter20 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator19);
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator21);
        boolean boolean23 = gPSSoftSimAdapter22.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator24 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter25 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator24);
        boolean boolean26 = gPSSoftSimAdapter25.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray27 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter16, gPSSoftSimAdapter18, gPSSoftSimAdapter20, gPSSoftSimAdapter22, gPSSoftSimAdapter25 };
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray28 = uShortList11.toArray(gPSAdapterInterfaceArray27);
        boolean boolean29 = doubleList0.equals((java.lang.Object) gPSAdapterInterfaceArray28);
        java.util.Iterator<java.lang.Double> doubleItor30 = doubleList0.iterator();
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(obj2);
        org.junit.Assert.assertNotNull(floatArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertNotNull(doubleSpliterator9);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray27);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertNotNull(doubleItor30);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position4 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position7 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList4 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        try {
            stringList1.add(25, "4");
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 25, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList7 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = duration52.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element55 = duration52.createElement();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(element55);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        java.util.stream.Stream<java.lang.Double> doubleStream38 = doubleList10.stream();
        java.util.ListIterator<java.lang.Double> doubleItor39 = doubleList10.listIterator();
        int int40 = doubleList10.size();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(doubleStream37);
        org.junit.Assert.assertNotNull(doubleStream38);
        org.junit.Assert.assertNotNull(doubleItor39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 4 + "'", int40 == 4);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uRIList0.getServiceNumber();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        uRIList0.ensureCapacity(18);
        uRIList0.trimToSize();
        java.lang.Long long6 = uRIList0.getShortForm();
        opssat.simulator.main.ESASimulator eSASimulator7 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter8 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator7);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter8.getMinimumPeriod();
        double double10 = duration9.getValue();
        java.lang.String str11 = duration9.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = duration9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration9.getServiceNumber();
        int int14 = uRIList0.lastIndexOf((java.lang.Object) uShort13);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281475010265070L + "'", long6.equals(281475010265070L));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "10.0" + "'", str11.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        java.lang.String[] strArray4 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        java.util.Iterator<java.lang.String> strItor7 = strList5.iterator();
        org.ccsds.moims.mo.mal.structures.OctetList octetList9 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean10 = octetList9.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = octetList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList12 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        integerList12.trimToSize();
        java.lang.String str14 = integerList12.toString();
        int int15 = octetList9.indexOf((java.lang.Object) str14);
        boolean boolean16 = strList5.contains((java.lang.Object) int15);
        java.lang.Boolean[] booleanArray19 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList20 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList20, booleanArray19);
        java.lang.String str22 = booleanList20.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream23 = booleanList20.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList25 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean26 = booleanList20.remove((java.lang.Object) stringList25);
        java.lang.Float[] floatArray30 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList31 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList31, floatArray30);
        int int33 = floatList31.size();
        boolean boolean34 = booleanList20.removeAll((java.util.Collection<java.lang.Float>) floatList31);
        boolean boolean35 = strList5.retainAll((java.util.Collection<java.lang.Float>) floatList31);
        java.lang.Object obj36 = strList5.clone();
        org.ccsds.moims.mo.mal.structures.ULong uLong37 = new org.ccsds.moims.mo.mal.structures.ULong();
        java.lang.String str38 = uLong37.toString();
        java.lang.Long long39 = uLong37.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort40 = uLong37.getServiceNumber();
        boolean boolean41 = strList5.contains((java.lang.Object) uShort40);
        java.util.ListIterator<java.lang.String> strItor42 = strList5.listIterator();
        opssat.simulator.main.ESASimulator eSASimulator43 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter44 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator43);
        boolean boolean45 = gPSSoftSimAdapter44.isUnitAvailable();
        boolean boolean46 = gPSSoftSimAdapter44.isUnitAvailable();
        boolean boolean47 = gPSSoftSimAdapter44.isUnitAvailable();
        boolean boolean48 = gPSSoftSimAdapter44.isUnitAvailable();
        boolean boolean49 = gPSSoftSimAdapter44.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator50 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter51 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator50);
        boolean boolean52 = gPSSoftSimAdapter51.isUnitAvailable();
        boolean boolean53 = gPSSoftSimAdapter51.isUnitAvailable();
        boolean boolean54 = gPSSoftSimAdapter51.isUnitAvailable();
        boolean boolean55 = gPSSoftSimAdapter51.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator56 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter57 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator56);
        boolean boolean58 = gPSSoftSimAdapter57.isUnitAvailable();
        boolean boolean59 = gPSSoftSimAdapter57.isUnitAvailable();
        boolean boolean60 = gPSSoftSimAdapter57.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator61 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter62 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator61);
        boolean boolean63 = gPSSoftSimAdapter62.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator64 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter65 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator64);
        boolean boolean66 = gPSSoftSimAdapter65.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator67 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter68 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator67);
        boolean boolean69 = gPSSoftSimAdapter68.isUnitAvailable();
        boolean boolean70 = gPSSoftSimAdapter68.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray71 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter44, gPSSoftSimAdapter51, gPSSoftSimAdapter57, gPSSoftSimAdapter62, gPSSoftSimAdapter65, gPSSoftSimAdapter68 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] gPSNMEAonlyAdapterArray72 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] { gPSNMEAonlyAdapterArray71 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] gPSNMEAonlyAdapterArray73 = strList5.toArray(gPSNMEAonlyAdapterArray72);
        java.util.Iterator<java.lang.String> strItor74 = strList5.iterator();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(strItor7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + str14 + "' != '" + "[]" + "'", str14.equals("[]"));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(booleanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "[true, true]" + "'", str22.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(floatArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "0" + "'", str38.equals("0"));
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 281474993487886L + "'", long39.equals(281474993487886L));
        org.junit.Assert.assertNotNull(uShort40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(strItor42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray71);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray72);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray73);
        org.junit.Assert.assertNotNull(strItor74);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.util.Iterator<java.lang.Double> doubleItor36 = doubleList10.iterator();
        try {
            doubleList10.add(13, (java.lang.Double) 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13, Size: 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(doubleItor36);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        java.lang.String str6 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean7 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        boolean boolean38 = doubleList10.isEmpty();
        java.lang.String str39 = doubleList10.toString();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(doubleStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[1.0, 10.0, 1.0, 0.0]" + "'", str39.equals("[1.0, 10.0, 1.0, 0.0]"));
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime1.getAreaNumber();
        java.lang.Long long4 = fineTime1.getShortForm();
        long long5 = fineTime1.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray7 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort6 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList8, uShortArray7);
        java.lang.String str10 = uShortList8.toString();
        boolean boolean12 = uShortList8.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList14 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean15 = uShortList8.remove((java.lang.Object) stringList14);
        uShortList8.ensureCapacity(13);
        org.ccsds.moims.mo.mal.structures.Duration duration18 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str19 = duration18.toString();
        double double20 = duration18.getValue();
        boolean boolean21 = uShortList8.contains((java.lang.Object) duration18);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.String str27 = booleanList25.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean31 = booleanList25.remove((java.lang.Object) stringList30);
        java.util.stream.Stream<java.lang.Boolean> booleanStream32 = booleanList25.parallelStream();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.String str38 = booleanList36.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList41 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean42 = booleanList36.remove((java.lang.Object) stringList41);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = booleanList36.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = booleanList25.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean52 = uShortList8.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        int int66 = intList64.size();
        boolean boolean67 = uShortList8.remove((java.lang.Object) int66);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream68 = uShortList8.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator69 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter70 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator69);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode71 = null;
        autonomousADCSSoftSimAdapter70.setDesiredAttitude(attitudeMode71);
        boolean boolean73 = autonomousADCSSoftSimAdapter70.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator74 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter75 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator74);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode76 = null;
        autonomousADCSSoftSimAdapter75.setDesiredAttitude(attitudeMode76);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode78 = autonomousADCSSoftSimAdapter75.getActiveAttitudeMode();
        opssat.simulator.main.ESASimulator eSASimulator79 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter80 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator79);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode81 = null;
        autonomousADCSSoftSimAdapter80.setDesiredAttitude(attitudeMode81);
        opssat.simulator.main.ESASimulator eSASimulator83 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter84 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator83);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode85 = null;
        autonomousADCSSoftSimAdapter84.setDesiredAttitude(attitudeMode85);
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray87 = new esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] { autonomousADCSSoftSimAdapter70, autonomousADCSSoftSimAdapter75, autonomousADCSSoftSimAdapter80, autonomousADCSSoftSimAdapter84 };
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray88 = uShortList8.toArray(autonomousADCSAdapterInterfaceArray87);
        boolean boolean89 = fineTime1.equals((java.lang.Object) autonomousADCSAdapterInterfaceArray88);
        java.lang.String str90 = fineTime1.toString();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487889L + "'", long4.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487874L + "'", long5 == 281474993487874L);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[1]" + "'", str10.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "0.0" + "'", str19.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[true, true]" + "'", str27.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(booleanStream32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uShortStream68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNull(attitudeMode78);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray87);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertTrue("'" + str90 + "' != '" + "281474993487874" + "'", str90.equals("281474993487874"));
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) (-9));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        opssat.simulator.main.ESASimulator eSASimulator3 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter4 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator3);
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter4.isUnitAvailable();
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter4.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration7 = null;
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter4.setConfiguration(sDRConfiguration7);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter4.enableSDR((java.lang.Boolean) true);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter4.enableSDR((java.lang.Boolean) true);
        boolean boolean13 = union1.equals((java.lang.Object) boolean12);
        try {
            java.lang.Double double14 = union1.getDoubleValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to java.lang.Double");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = union1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = union1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray6 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList7 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList7, uRIArray6);
        boolean boolean10 = uRIList7.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
        java.lang.Float[] floatArray31 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList32 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList32, floatArray31);
        boolean boolean34 = byteList26.containsAll((java.util.Collection<java.lang.Float>) floatList32);
        boolean boolean35 = shortList22.containsAll((java.util.Collection<java.lang.Float>) floatList32);
        boolean boolean36 = doubleList16.contains((java.lang.Object) shortList22);
        doubleList16.trimToSize();
        int int38 = uRIList7.indexOf((java.lang.Object) doubleList16);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        boolean boolean49 = byteList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean50 = doubleList16.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        int int51 = doubleList16.size();
        boolean boolean53 = doubleList16.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream54 = doubleList16.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator55 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter56 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator55);
        org.ccsds.moims.mo.mal.structures.Duration duration57 = cameraSoftSimAdapter56.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration58 = cameraSoftSimAdapter56.getMinimumPeriod();
        int int59 = doubleList16.lastIndexOf((java.lang.Object) duration58);
        boolean boolean60 = uShort5.equals((java.lang.Object) doubleList16);
        org.ccsds.moims.mo.mal.structures.UShort uShort61 = uShort5.getServiceNumber();
        opssat.simulator.main.ESASimulator eSASimulator62 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter63 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator62);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration64 = null;
        boolean boolean65 = softwareDefinedRadioSoftSimAdapter63.setConfiguration(sDRConfiguration64);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration66 = null;
        boolean boolean67 = softwareDefinedRadioSoftSimAdapter63.setConfiguration(sDRConfiguration66);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration68 = null;
        boolean boolean69 = softwareDefinedRadioSoftSimAdapter63.setConfiguration(sDRConfiguration68);
        boolean boolean70 = softwareDefinedRadioSoftSimAdapter63.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration71 = null;
        boolean boolean72 = softwareDefinedRadioSoftSimAdapter63.setConfiguration(sDRConfiguration71);
        boolean boolean73 = uShort61.equals((java.lang.Object) boolean72);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uRIArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(floatArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(doubleStream54);
        org.junit.Assert.assertNotNull(duration57);
        org.junit.Assert.assertNotNull(duration58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
        org.junit.Assert.assertNotNull(uShort61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, false };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter6.validateAttitudeDescriptor(attitudeMode8);
        boolean boolean10 = autonomousADCSSoftSimAdapter6.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        boolean boolean12 = booleanList3.contains((java.lang.Object) attitudeMode11);
        try {
            java.lang.Boolean boolean15 = booleanList3.set(2, (java.lang.Boolean) false);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNull(attitudeMode7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNull(attitudeMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration10 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean11 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode8);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = null;
        java.lang.String str11 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode10);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode7);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(pixelResolutionList5);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode2);
        boolean boolean4 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNull(attitudeMode5);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.lang.Object obj37 = null;
        boolean boolean38 = doubleList10.equals(obj37);
        boolean boolean40 = doubleList10.add((java.lang.Double) 2.81474993487879E14d);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode37 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode38 = null;
        java.lang.String str39 = autonomousADCSSoftSimAdapter34.validateAttitudeDescriptor(attitudeMode38);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode40 = null;
        autonomousADCSSoftSimAdapter34.setDesiredAttitude(attitudeMode40);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNull(attitudeMode36);
        org.junit.Assert.assertNull(attitudeMode37);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.lang.Integer int11 = uRIList1.getTypeShortForm();
        int int12 = uRIList1.size();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator2);
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter3.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter3.getAvailableResolutions();
        java.lang.String str6 = cameraSoftSimAdapter3.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter3.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter3.getMinimumPeriod();
        boolean boolean9 = uShortList1.contains((java.lang.Object) cameraSoftSimAdapter3);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uShortList1.getAreaVersion();
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uOctet10);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration6);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int5 = duration4.getTypeShortForm();
        java.lang.Integer int6 = duration4.getTypeShortForm();
        java.lang.Long long7 = duration4.getShortForm();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5.equals(3));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6.equals(3));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487875L + "'", long7.equals(281474993487875L));
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList0 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        integerList0.trimToSize();
        boolean boolean3 = integerList0.add((java.lang.Integer) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = integerList0.getAreaNumber();
        boolean boolean5 = integerList0.isEmpty();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList7 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList7.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList9 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uRIList9.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = uRIList9.getAreaVersion();
        boolean boolean12 = doubleList7.equals((java.lang.Object) uRIList9);
        uRIList9.ensureCapacity((int) (short) 100);
        opssat.simulator.main.ESASimulator eSASimulator15 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter16 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator15);
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter16.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList18 = cameraSoftSimAdapter16.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration19 = cameraSoftSimAdapter16.getMinimumPeriod();
        boolean boolean20 = cameraSoftSimAdapter16.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList21 = cameraSoftSimAdapter16.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList22 = cameraSoftSimAdapter16.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration23 = cameraSoftSimAdapter16.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration24 = cameraSoftSimAdapter16.getMinimumPeriod();
        int int25 = uRIList9.lastIndexOf((java.lang.Object) duration24);
        int int26 = integerList0.lastIndexOf((java.lang.Object) uRIList9);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(pixelResolutionList18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(pixelResolutionList21);
        org.junit.Assert.assertNotNull(pixelResolutionList22);
        org.junit.Assert.assertNotNull(duration23);
        org.junit.Assert.assertNotNull(duration24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList3 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList3, longArray2);
        longList3.ensureCapacity((int) (byte) 100);
        java.lang.String str7 = longList3.toString();
        java.util.stream.Stream<java.lang.Long> longStream8 = longList3.stream();
        java.lang.String str9 = longList3.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        java.util.Iterator<java.lang.String> strItor17 = strList15.iterator();
        java.lang.String str19 = strList15.remove((int) (byte) 0);
        java.lang.Byte[] byteArray21 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList22 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList22, byteArray21);
        java.lang.Float[] floatArray27 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList28 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList28, floatArray27);
        boolean boolean30 = byteList22.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        java.lang.Float[] floatArray34 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList35 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList35, floatArray34);
        int int37 = floatList35.size();
        boolean boolean38 = floatList28.containsAll((java.util.Collection<java.lang.Float>) floatList35);
        boolean boolean39 = strList15.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        java.lang.Short[] shortArray43 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList44 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList44, shortArray43);
        java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
        java.lang.Float[] floatArray53 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
        boolean boolean56 = byteList48.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean57 = shortList44.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean58 = floatList28.retainAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean59 = longList3.retainAll((java.util.Collection<java.lang.Float>) floatList28);
        opssat.simulator.main.ESASimulator eSASimulator60 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter61 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator60);
        org.ccsds.moims.mo.mal.structures.Duration duration62 = cameraSoftSimAdapter61.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList63 = cameraSoftSimAdapter61.getAvailableResolutions();
        boolean boolean64 = longList3.contains((java.lang.Object) cameraSoftSimAdapter61);
        java.lang.String str65 = cameraSoftSimAdapter61.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration66 = cameraSoftSimAdapter61.getMinimumPeriod();
        double double67 = duration66.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet68 = duration66.getAreaVersion();
        java.lang.Class<?> wildcardClass69 = uOctet68.getClass();
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[281475010265077, 100]" + "'", str7.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longStream8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[281475010265077, 100]" + "'", str9.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(strItor17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[true, true]" + "'", str19.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(shortArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(duration62);
        org.junit.Assert.assertNotNull(pixelResolutionList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + str65 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str65.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration66);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 10.0d + "'", double67 == 10.0d);
        org.junit.Assert.assertNotNull(uOctet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        stringList1.clear();
        boolean boolean27 = stringList1.add("281474993487877");
        boolean boolean29 = stringList1.add("[[true, true], [1], [true, true], hi!, hi!]");
        org.ccsds.moims.mo.mal.structures.Element element30 = stringList1.createElement();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(element30);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRIList3.getAreaVersion();
        boolean boolean6 = doubleList1.equals((java.lang.Object) uRIList3);
        uRIList3.ensureCapacity((int) (short) 100);
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter10.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList12 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration13 = cameraSoftSimAdapter10.getMinimumPeriod();
        boolean boolean14 = cameraSoftSimAdapter10.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList15 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList16 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter10.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration18 = cameraSoftSimAdapter10.getMinimumPeriod();
        int int19 = uRIList3.lastIndexOf((java.lang.Object) duration18);
        org.ccsds.moims.mo.mal.structures.StringList stringList21 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList23 = new org.ccsds.moims.mo.mal.structures.IntegerList(3);
        int int24 = stringList21.lastIndexOf((java.lang.Object) 3);
        java.util.Iterator<java.lang.String> strItor25 = stringList21.iterator();
        java.util.stream.Stream<java.lang.String> strStream26 = stringList21.parallelStream();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = stringList21.getServiceNumber();
        boolean boolean28 = duration18.equals((java.lang.Object) uShort27);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(pixelResolutionList12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(pixelResolutionList15);
        org.junit.Assert.assertNotNull(pixelResolutionList16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strItor25);
        org.junit.Assert.assertNotNull(strStream26);
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.Duration duration54 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double55 = duration54.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort56 = duration54.getAreaNumber();
        java.lang.Long long57 = duration54.getShortForm();
        boolean boolean58 = duration52.equals((java.lang.Object) long57);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertNotNull(uShort56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281474993487875L + "'", long57.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str7 = duration6.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "10.0" + "'", str7.equals("10.0"));
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNull(attitudeMode3);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        java.lang.String str5 = booleanList3.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream6 = booleanList3.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList8 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean9 = booleanList3.remove((java.lang.Object) stringList8);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList11 = new org.ccsds.moims.mo.mal.structures.IntegerList(13);
        boolean boolean12 = booleanList3.remove((java.lang.Object) integerList11);
        org.ccsds.moims.mo.mal.structures.FloatList floatList14 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        org.ccsds.moims.mo.mal.structures.UOctet uOctet15 = floatList14.getAreaVersion();
        boolean boolean16 = integerList11.removeAll((java.util.Collection<java.lang.Float>) floatList14);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator17);
        org.ccsds.moims.mo.mal.structures.Duration duration19 = cameraSoftSimAdapter18.getMinimumPeriod();
        double double20 = duration19.getValue();
        java.lang.String str21 = duration19.toString();
        boolean boolean22 = integerList11.contains((java.lang.Object) str21);
        integerList11.clear();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[true, true]" + "'", str5.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uOctet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "10.0" + "'", str21.equals("10.0"));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.ShortList shortList13 = new org.ccsds.moims.mo.mal.structures.ShortList((int) (short) 10);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] {};
        java.lang.CharSequence[] charSequenceArray15 = shortList13.toArray(charSequenceArray14);
        java.util.Iterator<java.lang.Short> shortItor16 = shortList13.iterator();
        java.lang.Long long17 = shortList13.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = shortList13.getServiceNumber();
        boolean boolean19 = duration11.equals((java.lang.Object) uShort18);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertNotNull(shortItor16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265079L + "'", long17.equals(281475010265079L));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = duration52.getAreaNumber();
        java.math.BigInteger bigInteger55 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong56 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger55);
        boolean boolean57 = duration52.equals((java.lang.Object) bigInteger55);
        org.ccsds.moims.mo.mal.structures.ULong uLong58 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger55);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) '4');
        boolean boolean3 = stringList1.add("[true, true]");
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = stringList1.getAreaNumber();
        java.lang.Integer[] intArray35 = new java.lang.Integer[] { 65535, 7, 4, (-13), 15, 5, (-1), (-10), 65535, 4, 15, 18, 52, 4, 52, 15, 16, (-15), (-9), 4, 12, 10, 7, 14, (-18), 8, (-1), (-2), (-13), 52 };
        java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
        org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean40 = octetList39.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = octetList39.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream42 = octetList39.stream();
        java.util.Spliterator<java.lang.Byte> byteSpliterator43 = octetList39.spliterator();
        boolean boolean44 = intList36.equals((java.lang.Object) byteSpliterator43);
        int int45 = stringList1.lastIndexOf((java.lang.Object) intList36);
        org.ccsds.moims.mo.mal.structures.Element element46 = stringList1.createElement();
        opssat.simulator.main.ESASimulator eSASimulator47 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter48 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator47);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration49 = null;
        boolean boolean50 = softwareDefinedRadioSoftSimAdapter48.setConfiguration(sDRConfiguration49);
        int int51 = stringList1.lastIndexOf((java.lang.Object) boolean50);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(uOctet41);
        org.junit.Assert.assertNotNull(byteStream42);
        org.junit.Assert.assertNotNull(byteSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "[1]", "[true, true]", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray14 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort13 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15, uShortArray14);
        java.lang.String str17 = uShortList15.toString();
        boolean boolean19 = uShortList15.remove((java.lang.Object) (-1));
        int int20 = strList11.indexOf((java.lang.Object) boolean19);
        java.lang.String str21 = strList11.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        java.lang.Class<?> wildcardClass23 = uShort22.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = new org.ccsds.moims.mo.mal.structures.UShort(3);
        byte[] byteArray27 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray27);
        int int29 = blob28.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort22, uShort24, uShort26, uShort30, uShort31, uShort32, uShort33 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList41 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList41, doubleArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = doubleList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = uShortList35.equals((java.lang.Object) doubleList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList53 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = booleanList53.getAreaNumber();
        int int55 = uShortList35.lastIndexOf((java.lang.Object) booleanList53);
        java.lang.Integer int56 = booleanList53.getTypeShortForm();
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        java.lang.Float[] floatArray64 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList65 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList65, floatArray64);
        boolean boolean67 = byteList59.containsAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean68 = floatList65.isEmpty();
        boolean boolean69 = booleanList53.retainAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean70 = strList11.removeAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean71 = duration2.equals((java.lang.Object) strList11);
        org.ccsds.moims.mo.mal.structures.UShort uShort72 = duration2.getServiceNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[1]" + "'", str17.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[, [1], [true, true], ]" + "'", str21.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-2) + "'", int56.equals((-2)));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(uShort72);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort0 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        java.lang.String str4 = uShortList2.toString();
        java.lang.Object[] objArray5 = uShortList2.toArray();
        uShortList2.trimToSize();
        uShortList2.trimToSize();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor8 = uShortList2.listIterator();
        uShortList2.trimToSize();
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList2.iterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList14 = new org.ccsds.moims.mo.mal.structures.IntegerList(3);
        int int15 = stringList12.lastIndexOf((java.lang.Object) 3);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray17 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort16 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList18 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList18, uShortArray17);
        java.lang.String str20 = uShortList18.toString();
        boolean boolean22 = uShortList18.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean25 = uShortList18.remove((java.lang.Object) stringList24);
        uShortList18.ensureCapacity(13);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor28 = uShortList18.iterator();
        boolean boolean29 = stringList12.remove((java.lang.Object) uShortItor28);
        boolean boolean30 = uShortList2.remove((java.lang.Object) uShortItor28);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList32 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.Element element33 = uShortList32.createElement();
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.UShort> uShortSpliterator34 = uShortList32.spliterator();
        java.lang.Byte[] byteArray36 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList37 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList37, byteArray36);
        java.lang.Float[] floatArray42 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList43 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList43, floatArray42);
        boolean boolean45 = byteList37.containsAll((java.util.Collection<java.lang.Float>) floatList43);
        boolean boolean46 = floatList43.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray48 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort47 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList49, uShortArray48);
        java.lang.String str51 = uShortList49.toString();
        java.lang.Object[] objArray52 = uShortList49.toArray();
        java.lang.Double[] doubleArray56 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList57 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList57, doubleArray56);
        java.lang.Float[] floatArray62 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList63 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList63, floatArray62);
        int int65 = floatList63.size();
        boolean boolean66 = doubleList57.containsAll((java.util.Collection<java.lang.Float>) floatList63);
        boolean boolean67 = uShortList49.retainAll((java.util.Collection<java.lang.Float>) floatList63);
        java.lang.Boolean[] booleanArray70 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList71 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList71, booleanArray70);
        java.lang.String str73 = booleanList71.toString();
        int int74 = booleanList71.size();
        boolean boolean75 = floatList63.contains((java.lang.Object) int74);
        boolean boolean76 = floatList43.addAll((java.util.Collection<java.lang.Float>) floatList63);
        boolean boolean77 = uShortList32.contains((java.lang.Object) floatList43);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList78 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet79 = doubleList78.getAreaVersion();
        java.lang.Integer int80 = doubleList78.getTypeShortForm();
        boolean boolean81 = doubleList78.isEmpty();
        int int82 = uShortList32.indexOf((java.lang.Object) doubleList78);
        opssat.simulator.main.ESASimulator eSASimulator83 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter84 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator83);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode85 = null;
        java.lang.String str86 = autonomousADCSSoftSimAdapter84.validateAttitudeDescriptor(attitudeMode85);
        int int87 = uShortList32.lastIndexOf((java.lang.Object) autonomousADCSSoftSimAdapter84);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode88 = null;
        java.lang.String str89 = autonomousADCSSoftSimAdapter84.validateAttitudeDescriptor(attitudeMode88);
        int int90 = uShortList2.indexOf((java.lang.Object) str89);
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[1]" + "'", str4.equals("[1]"));
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertNotNull(uShortItor8);
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertNotNull(uShortArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[1]" + "'", str20.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(uShortItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertNotNull(element33);
        org.junit.Assert.assertNotNull(uShortSpliterator34);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertNotNull(uShortArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + str51 + "' != '" + "[1]" + "'", str51.equals("[1]"));
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(floatArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(booleanArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + str73 + "' != '" + "[true, true]" + "'", str73.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertNotNull(uOctet79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-5) + "'", int80.equals((-5)));
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean9 = cameraSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        stringList1.clear();
        java.util.ListIterator<java.lang.String> strItor26 = stringList1.listIterator();
        org.ccsds.moims.mo.mal.structures.FloatList floatList28 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        java.lang.Integer int29 = floatList28.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet30 = floatList28.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element31 = floatList28.createElement();
        java.util.Spliterator<java.lang.Float> floatSpliterator32 = floatList28.spliterator();
        boolean boolean33 = stringList1.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
        org.junit.Assert.assertNotNull(strItor26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-4) + "'", int29.equals((-4)));
        org.junit.Assert.assertNotNull(uOctet30);
        org.junit.Assert.assertNotNull(element31);
        org.junit.Assert.assertNotNull(floatSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime1.getAreaNumber();
        java.lang.Long long4 = fineTime1.getShortForm();
        long long5 = fineTime1.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray7 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort6 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList8, uShortArray7);
        java.lang.String str10 = uShortList8.toString();
        boolean boolean12 = uShortList8.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList14 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean15 = uShortList8.remove((java.lang.Object) stringList14);
        uShortList8.ensureCapacity(13);
        org.ccsds.moims.mo.mal.structures.Duration duration18 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str19 = duration18.toString();
        double double20 = duration18.getValue();
        boolean boolean21 = uShortList8.contains((java.lang.Object) duration18);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.String str27 = booleanList25.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean31 = booleanList25.remove((java.lang.Object) stringList30);
        java.util.stream.Stream<java.lang.Boolean> booleanStream32 = booleanList25.parallelStream();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.String str38 = booleanList36.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList41 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean42 = booleanList36.remove((java.lang.Object) stringList41);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = booleanList36.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = booleanList25.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean52 = uShortList8.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        int int66 = intList64.size();
        boolean boolean67 = uShortList8.remove((java.lang.Object) int66);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream68 = uShortList8.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator69 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter70 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator69);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode71 = null;
        autonomousADCSSoftSimAdapter70.setDesiredAttitude(attitudeMode71);
        boolean boolean73 = autonomousADCSSoftSimAdapter70.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator74 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter75 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator74);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode76 = null;
        autonomousADCSSoftSimAdapter75.setDesiredAttitude(attitudeMode76);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode78 = autonomousADCSSoftSimAdapter75.getActiveAttitudeMode();
        opssat.simulator.main.ESASimulator eSASimulator79 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter80 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator79);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode81 = null;
        autonomousADCSSoftSimAdapter80.setDesiredAttitude(attitudeMode81);
        opssat.simulator.main.ESASimulator eSASimulator83 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter84 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator83);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode85 = null;
        autonomousADCSSoftSimAdapter84.setDesiredAttitude(attitudeMode85);
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray87 = new esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] { autonomousADCSSoftSimAdapter70, autonomousADCSSoftSimAdapter75, autonomousADCSSoftSimAdapter80, autonomousADCSSoftSimAdapter84 };
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray88 = uShortList8.toArray(autonomousADCSAdapterInterfaceArray87);
        boolean boolean89 = fineTime1.equals((java.lang.Object) autonomousADCSAdapterInterfaceArray88);
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = fineTime1.getAreaNumber();
        java.lang.String str91 = uShort90.toString();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487889L + "'", long4.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487874L + "'", long5 == 281474993487874L);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[1]" + "'", str10.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "0.0" + "'", str19.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[true, true]" + "'", str27.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(booleanStream32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uShortStream68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNull(attitudeMode78);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray87);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertNotNull(uShort90);
        org.junit.Assert.assertTrue("'" + str91 + "' != '" + "1" + "'", str91.equals("1"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean7 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList8 = null; // flaky: gPSSoftSimAdapter1.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) (short) 100);
        byte[] byteArray2 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob3 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray2);
        int int4 = blob3.getLength();
        byte[] byteArray5 = blob3.getValue();
        org.ccsds.moims.mo.mal.structures.Blob blob6 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray5);
        org.ccsds.moims.mo.mal.structures.Union union8 = new org.ccsds.moims.mo.mal.structures.Union("[1, -1, 10, 1, -1]");
        java.lang.Long long9 = union8.getShortForm();
        boolean boolean10 = blob6.equals((java.lang.Object) union8);
        byte[] byteArray11 = blob6.getValue();
        boolean boolean12 = duration1.equals((java.lang.Object) blob6);
        opssat.simulator.main.ESASimulator eSASimulator13 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter14 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator13);
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter14.isUnitAvailable();
        boolean boolean16 = blob6.equals((java.lang.Object) boolean15);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281474993487887L + "'", long9.equals(281474993487887L));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration7 = null;
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration7);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        boolean boolean7 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList1.getServiceNumber();
        java.lang.Object obj3 = null;
        int int4 = uShortList1.lastIndexOf(obj3);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.Element element7 = uShortList6.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uShortList6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = uShortList6.createElement();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator10);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator12);
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator14);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator16);
        boolean boolean18 = gPSSoftSimAdapter17.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator19 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter20 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator19);
        boolean boolean21 = gPSSoftSimAdapter20.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray22 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter11, gPSSoftSimAdapter13, gPSSoftSimAdapter15, gPSSoftSimAdapter17, gPSSoftSimAdapter20 };
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray23 = uShortList6.toArray(gPSAdapterInterfaceArray22);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray24 = uShortList1.toArray(gPSAdapterInterfaceArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShortList1.createElement();
        java.lang.String str26 = uShortList1.toString();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray22);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode9);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = null;
        java.lang.String str12 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode11);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int5 = duration4.getTypeShortForm();
        java.lang.Integer int6 = duration4.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration4.getServiceNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5.equals(3));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 3 + "'", int6.equals(3));
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.lang.Double[] doubleArray4 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
        java.lang.Float[] floatArray20 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList21 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList21, floatArray20);
        boolean boolean23 = byteList15.containsAll((java.util.Collection<java.lang.Float>) floatList21);
        boolean boolean24 = shortList11.containsAll((java.util.Collection<java.lang.Float>) floatList21);
        boolean boolean25 = doubleList5.contains((java.lang.Object) shortList11);
        java.util.Iterator<java.lang.Short> shortItor26 = shortList11.iterator();
        org.ccsds.moims.mo.mal.structures.StringList stringList28 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 10);
        stringList28.clear();
        org.ccsds.moims.mo.mal.structures.Element element30 = stringList28.createElement();
        opssat.simulator.main.ESASimulator eSASimulator31 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter32 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator31);
        boolean boolean33 = softwareDefinedRadioSoftSimAdapter32.isUnitAvailable();
        boolean boolean34 = softwareDefinedRadioSoftSimAdapter32.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration35 = null;
        boolean boolean36 = softwareDefinedRadioSoftSimAdapter32.setConfiguration(sDRConfiguration35);
        boolean boolean38 = softwareDefinedRadioSoftSimAdapter32.enableSDR((java.lang.Boolean) true);
        boolean boolean40 = softwareDefinedRadioSoftSimAdapter32.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration41 = null;
        boolean boolean42 = softwareDefinedRadioSoftSimAdapter32.setConfiguration(sDRConfiguration41);
        opssat.simulator.main.ESASimulator eSASimulator43 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter44 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator43);
        boolean boolean45 = softwareDefinedRadioSoftSimAdapter44.isUnitAvailable();
        boolean boolean46 = softwareDefinedRadioSoftSimAdapter44.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration47 = null;
        boolean boolean48 = softwareDefinedRadioSoftSimAdapter44.setConfiguration(sDRConfiguration47);
        boolean boolean50 = softwareDefinedRadioSoftSimAdapter44.enableSDR((java.lang.Boolean) true);
        boolean boolean52 = softwareDefinedRadioSoftSimAdapter44.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator53 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter54 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator53);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration55 = null;
        boolean boolean56 = softwareDefinedRadioSoftSimAdapter54.setConfiguration(sDRConfiguration55);
        boolean boolean57 = softwareDefinedRadioSoftSimAdapter54.isUnitAvailable();
        boolean boolean59 = softwareDefinedRadioSoftSimAdapter54.enableSDR((java.lang.Boolean) false);
        opssat.simulator.main.ESASimulator eSASimulator60 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter61 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator60);
        boolean boolean62 = softwareDefinedRadioSoftSimAdapter61.isUnitAvailable();
        boolean boolean64 = softwareDefinedRadioSoftSimAdapter61.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator65 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter66 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator65);
        boolean boolean67 = softwareDefinedRadioSoftSimAdapter66.isUnitAvailable();
        boolean boolean68 = softwareDefinedRadioSoftSimAdapter66.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration69 = null;
        boolean boolean70 = softwareDefinedRadioSoftSimAdapter66.setConfiguration(sDRConfiguration69);
        boolean boolean72 = softwareDefinedRadioSoftSimAdapter66.enableSDR((java.lang.Boolean) true);
        boolean boolean74 = softwareDefinedRadioSoftSimAdapter66.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration75 = null;
        boolean boolean76 = softwareDefinedRadioSoftSimAdapter66.setConfiguration(sDRConfiguration75);
        opssat.simulator.main.ESASimulator eSASimulator77 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter78 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator77);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration79 = null;
        boolean boolean80 = softwareDefinedRadioSoftSimAdapter78.setConfiguration(sDRConfiguration79);
        boolean boolean82 = softwareDefinedRadioSoftSimAdapter78.enableSDR((java.lang.Boolean) true);
        boolean boolean84 = softwareDefinedRadioSoftSimAdapter78.enableSDR((java.lang.Boolean) true);
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray85 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] { softwareDefinedRadioSoftSimAdapter32, softwareDefinedRadioSoftSimAdapter44, softwareDefinedRadioSoftSimAdapter54, softwareDefinedRadioSoftSimAdapter61, softwareDefinedRadioSoftSimAdapter66, softwareDefinedRadioSoftSimAdapter78 };
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray86 = stringList28.toArray(softwareDefinedRadioSoftSimAdapterArray85);
        try {
            esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray87 = shortList11.toArray(softwareDefinedRadioSoftSimAdapterArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(floatArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(shortItor26);
        org.junit.Assert.assertNotNull(element30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray85);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray86);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = duration8.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element10 = uShort9.createElement();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(element10);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(7);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URIList uRIList3 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = uRIList3.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRIList3.getAreaVersion();
        boolean boolean6 = doubleList1.equals((java.lang.Object) uRIList3);
        uRIList3.ensureCapacity((int) (short) 100);
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator9);
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter10.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList12 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration13 = cameraSoftSimAdapter10.getMinimumPeriod();
        boolean boolean14 = cameraSoftSimAdapter10.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList15 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList16 = cameraSoftSimAdapter10.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter10.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration18 = cameraSoftSimAdapter10.getMinimumPeriod();
        int int19 = uRIList3.lastIndexOf((java.lang.Object) duration18);
        try {
            java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor21 = uRIList3.listIterator(13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 13");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(pixelResolutionList12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(pixelResolutionList15);
        org.junit.Assert.assertNotNull(pixelResolutionList16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean9 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int4 = duration3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element7 = duration3.createElement();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4.equals(3));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration5 = null;
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration5);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode8);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(attitudeMode10);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, false };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter6.validateAttitudeDescriptor(attitudeMode8);
        boolean boolean10 = autonomousADCSSoftSimAdapter6.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        boolean boolean12 = booleanList3.contains((java.lang.Object) attitudeMode11);
        boolean boolean14 = booleanList3.add((java.lang.Boolean) false);
        java.util.Iterator<java.lang.Boolean> booleanItor15 = booleanList3.iterator();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNull(attitudeMode7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNull(attitudeMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(booleanItor15);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = longList0.getServiceNumber();
        java.util.stream.Stream<java.lang.Long> longStream3 = longList0.parallelStream();
        java.util.stream.Stream<java.lang.Long> longStream4 = longList0.parallelStream();
        java.lang.Object obj5 = longList0.clone();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = doubleList6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList9 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor10 = longList9.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = longList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet12 = longList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList13 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.Element element14 = longList13.createElement();
        int int15 = longList9.lastIndexOf((java.lang.Object) longList13);
        java.lang.Object[] objArray16 = longList9.toArray();
        int int17 = doubleList6.indexOf((java.lang.Object) longList9);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray18 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList19 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList19, uRIArray18);
        boolean boolean22 = uRIList19.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray27 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList28 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList28, doubleArray27);
        java.lang.Short[] shortArray33 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList34 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList34, shortArray33);
        java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
        java.lang.Float[] floatArray43 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList44 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList44, floatArray43);
        boolean boolean46 = byteList38.containsAll((java.util.Collection<java.lang.Float>) floatList44);
        boolean boolean47 = shortList34.containsAll((java.util.Collection<java.lang.Float>) floatList44);
        boolean boolean48 = doubleList28.contains((java.lang.Object) shortList34);
        doubleList28.trimToSize();
        int int50 = uRIList19.indexOf((java.lang.Object) doubleList28);
        opssat.simulator.main.ESASimulator eSASimulator51 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter52 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator51);
        boolean boolean53 = doubleList28.remove((java.lang.Object) autonomousADCSSoftSimAdapter52);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode54 = autonomousADCSSoftSimAdapter52.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode55 = autonomousADCSSoftSimAdapter52.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode56 = null;
        java.lang.String str57 = autonomousADCSSoftSimAdapter52.validateAttitudeDescriptor(attitudeMode56);
        boolean boolean58 = doubleList6.equals((java.lang.Object) attitudeMode56);
        boolean boolean59 = longList0.remove((java.lang.Object) boolean58);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(longStream3);
        org.junit.Assert.assertNotNull(longStream4);
        org.junit.Assert.assertNotNull(obj5);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(longItor10);
        org.junit.Assert.assertNotNull(uOctet11);
        org.junit.Assert.assertNotNull(uOctet12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(uRIArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(shortArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNull(attitudeMode54);
        org.junit.Assert.assertNull(attitudeMode55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        stringList1.clear();
        java.lang.Object obj26 = null;
        boolean boolean27 = stringList1.remove(obj26);
        java.util.stream.Stream<java.lang.String> strStream28 = stringList1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(strStream28);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration7 = null;
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration7);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        java.lang.Object obj2 = null;
        int int3 = booleanList1.indexOf(obj2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = booleanList1.getAreaVersion();
        java.lang.Long long5 = booleanList1.getShortForm();
        java.lang.Integer int6 = booleanList1.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream7 = booleanList1.stream();
        org.ccsds.moims.mo.mal.structures.StringList stringList9 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter11.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter11.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration14 = null;
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter11.setConfiguration(sDRConfiguration14);
        boolean boolean17 = softwareDefinedRadioSoftSimAdapter11.enableSDR((java.lang.Boolean) true);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter11.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator20 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter21 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator20);
        boolean boolean22 = softwareDefinedRadioSoftSimAdapter21.isUnitAvailable();
        boolean boolean24 = softwareDefinedRadioSoftSimAdapter21.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator25 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter26 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator25);
        boolean boolean27 = softwareDefinedRadioSoftSimAdapter26.isUnitAvailable();
        boolean boolean28 = softwareDefinedRadioSoftSimAdapter26.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator29 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter30 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator29);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray31 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter11, softwareDefinedRadioSoftSimAdapter21, softwareDefinedRadioSoftSimAdapter26, softwareDefinedRadioSoftSimAdapter30 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray32 = stringList9.toArray(softwareDefinedRadioAdapterInterfaceArray31);
        stringList9.clear();
        boolean boolean35 = stringList9.add("281474993487877");
        boolean boolean37 = stringList9.add("[[true, true], [1], [true, true], hi!, hi!]");
        java.util.stream.Stream<java.lang.String> strStream38 = stringList9.parallelStream();
        boolean boolean39 = booleanList1.contains((java.lang.Object) stringList9);
        java.util.stream.Stream<java.lang.String> strStream40 = stringList9.parallelStream();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265086L + "'", long5.equals(281475010265086L));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-2) + "'", int6.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray31);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(strStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertNotNull(strStream40);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union("[]");
        boolean boolean3 = union1.equals((java.lang.Object) 1.0f);
        org.ccsds.moims.mo.mal.structures.OctetList octetList5 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean6 = octetList5.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = octetList5.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream8 = octetList5.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList11 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        int int12 = octetList5.lastIndexOf((java.lang.Object) longList11);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = longList11.getAreaVersion();
        boolean boolean14 = longList11.isEmpty();
        boolean boolean15 = union1.equals((java.lang.Object) longList11);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator16);
        boolean boolean18 = opticalDataReceiverSoftSimAdapter17.isUnitAvailable();
        boolean boolean19 = opticalDataReceiverSoftSimAdapter17.isUnitAvailable();
        boolean boolean20 = opticalDataReceiverSoftSimAdapter17.isUnitAvailable();
        boolean boolean21 = opticalDataReceiverSoftSimAdapter17.isUnitAvailable();
        boolean boolean22 = longList11.contains((java.lang.Object) boolean21);
        java.util.ListIterator<java.lang.Long> longItor23 = longList11.listIterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(byteStream8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(uOctet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(longItor23);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
        octetList3.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
        uShortList1.add(0, uShort5);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray7 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList8, uRIArray7);
        boolean boolean11 = uRIList8.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray16 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList17 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList17, doubleArray16);
        java.lang.Short[] shortArray22 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList23 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList23, shortArray22);
        java.lang.Byte[] byteArray26 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList27 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList27, byteArray26);
        java.lang.Float[] floatArray32 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList33 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList33, floatArray32);
        boolean boolean35 = byteList27.containsAll((java.util.Collection<java.lang.Float>) floatList33);
        boolean boolean36 = shortList23.containsAll((java.util.Collection<java.lang.Float>) floatList33);
        boolean boolean37 = doubleList17.contains((java.lang.Object) shortList23);
        doubleList17.trimToSize();
        int int39 = uRIList8.indexOf((java.lang.Object) doubleList17);
        boolean boolean40 = doubleList17.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList42 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        byte[] byteArray43 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob44 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray43);
        int int45 = blob44.getOffset();
        boolean boolean46 = floatList42.contains((java.lang.Object) int45);
        java.lang.Long long47 = floatList42.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = floatList42.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = floatList42.getServiceNumber();
        java.util.stream.Stream<java.lang.Float> floatStream50 = floatList42.stream();
        boolean boolean51 = floatList42.isEmpty();
        boolean boolean52 = doubleList17.removeAll((java.util.Collection<java.lang.Float>) floatList42);
        boolean boolean53 = uShortList1.retainAll((java.util.Collection<java.lang.Float>) floatList42);
        opssat.simulator.main.ESASimulator eSASimulator54 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter55 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator54);
        org.ccsds.moims.mo.mal.structures.Duration duration56 = cameraSoftSimAdapter55.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList57 = cameraSoftSimAdapter55.getAvailableResolutions();
        java.lang.String str58 = cameraSoftSimAdapter55.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList59 = cameraSoftSimAdapter55.getAvailableResolutions();
        boolean boolean60 = cameraSoftSimAdapter55.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList61 = cameraSoftSimAdapter55.getAvailableResolutions();
        boolean boolean62 = floatList42.equals((java.lang.Object) cameraSoftSimAdapter55);
        try {
            java.util.ListIterator<java.lang.Float> floatItor64 = floatList42.listIterator(11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 11");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uRIArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertNotNull(shortArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265084L + "'", long47.equals(281475010265084L));
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(floatStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertNotNull(duration56);
        org.junit.Assert.assertNotNull(pixelResolutionList57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str58.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(pixelResolutionList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        java.lang.Short[] shortArray1 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList2 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList2, shortArray1);
        org.ccsds.moims.mo.mal.structures.URI uRI5 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long6 = uRI5.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = uRI5.getServiceNumber();
        int int8 = shortList2.indexOf((java.lang.Object) uRI5);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList9 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = doubleList9.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element11 = doubleList9.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream12 = doubleList9.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = doubleList9.getServiceNumber();
        boolean boolean14 = uRI5.equals((java.lang.Object) doubleList9);
        java.lang.Long[] longArray17 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList18 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList18, longArray17);
        longList18.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray22 = longList18.toArray();
        boolean boolean24 = longList18.remove((java.lang.Object) '#');
        boolean boolean25 = longList18.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList27 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        boolean boolean28 = longList18.retainAll((java.util.Collection<java.lang.Float>) floatList27);
        boolean boolean29 = doubleList9.containsAll((java.util.Collection<java.lang.Float>) floatList27);
        opssat.simulator.main.ESASimulator eSASimulator30 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter31 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator30);
        org.ccsds.moims.mo.mal.structures.Duration duration32 = cameraSoftSimAdapter31.getMinimumPeriod();
        java.lang.String str33 = cameraSoftSimAdapter31.getExtraInfo();
        boolean boolean34 = cameraSoftSimAdapter31.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration35 = cameraSoftSimAdapter31.getMinimumPeriod();
        boolean boolean36 = doubleList9.equals((java.lang.Object) cameraSoftSimAdapter31);
        java.lang.String str37 = doubleList9.toString();
        org.ccsds.moims.mo.mal.structures.FloatList floatList39 = new org.ccsds.moims.mo.mal.structures.FloatList(11);
        int int40 = floatList39.size();
        boolean boolean41 = doubleList9.retainAll((java.util.Collection<java.lang.Float>) floatList39);
        org.junit.Assert.assertNotNull(shortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 281474993487890L + "'", long6.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertNotNull(doubleStream12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(longArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(duration32);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str33.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(duration35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[]" + "'", str37.equals("[]"));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        java.lang.Object obj54 = doubleList10.clone();
        java.lang.String str55 = doubleList10.toString();
        java.util.stream.Stream<java.lang.Double> doubleStream56 = doubleList10.parallelStream();
        doubleList10.clear();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[0.0]" + "'", str55.equals("[0.0]"));
        org.junit.Assert.assertNotNull(doubleStream56);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration13 = null;
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration13);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration17 = null;
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration17);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration10 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(duration11);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        boolean boolean8 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str9 = duration8.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "10.0" + "'", str9.equals("10.0"));
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Element element6 = duration5.createElement();
        java.lang.Integer int7 = duration5.getTypeShortForm();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7.equals(3));
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration9 = null;
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration9);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime1.getAreaNumber();
        java.lang.Long long4 = fineTime1.getShortForm();
        long long5 = fineTime1.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray7 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort6 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList8, uShortArray7);
        java.lang.String str10 = uShortList8.toString();
        boolean boolean12 = uShortList8.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList14 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean15 = uShortList8.remove((java.lang.Object) stringList14);
        uShortList8.ensureCapacity(13);
        org.ccsds.moims.mo.mal.structures.Duration duration18 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str19 = duration18.toString();
        double double20 = duration18.getValue();
        boolean boolean21 = uShortList8.contains((java.lang.Object) duration18);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.String str27 = booleanList25.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean31 = booleanList25.remove((java.lang.Object) stringList30);
        java.util.stream.Stream<java.lang.Boolean> booleanStream32 = booleanList25.parallelStream();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.String str38 = booleanList36.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList41 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean42 = booleanList36.remove((java.lang.Object) stringList41);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = booleanList36.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = booleanList25.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean52 = uShortList8.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        int int66 = intList64.size();
        boolean boolean67 = uShortList8.remove((java.lang.Object) int66);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream68 = uShortList8.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator69 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter70 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator69);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode71 = null;
        autonomousADCSSoftSimAdapter70.setDesiredAttitude(attitudeMode71);
        boolean boolean73 = autonomousADCSSoftSimAdapter70.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator74 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter75 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator74);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode76 = null;
        autonomousADCSSoftSimAdapter75.setDesiredAttitude(attitudeMode76);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode78 = autonomousADCSSoftSimAdapter75.getActiveAttitudeMode();
        opssat.simulator.main.ESASimulator eSASimulator79 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter80 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator79);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode81 = null;
        autonomousADCSSoftSimAdapter80.setDesiredAttitude(attitudeMode81);
        opssat.simulator.main.ESASimulator eSASimulator83 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter84 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator83);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode85 = null;
        autonomousADCSSoftSimAdapter84.setDesiredAttitude(attitudeMode85);
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray87 = new esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] { autonomousADCSSoftSimAdapter70, autonomousADCSSoftSimAdapter75, autonomousADCSSoftSimAdapter80, autonomousADCSSoftSimAdapter84 };
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray88 = uShortList8.toArray(autonomousADCSAdapterInterfaceArray87);
        boolean boolean89 = fineTime1.equals((java.lang.Object) autonomousADCSAdapterInterfaceArray88);
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort91 = fineTime1.getServiceNumber();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487889L + "'", long4.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487874L + "'", long5 == 281474993487874L);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[1]" + "'", str10.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "0.0" + "'", str19.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[true, true]" + "'", str27.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(booleanStream32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uShortStream68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNull(attitudeMode78);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray87);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertNotNull(uShort90);
        org.junit.Assert.assertNotNull(uShort91);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode8);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode10);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        shortList3.trimToSize();
        java.util.ListIterator<java.lang.Short> shortItor6 = shortList3.listIterator();
        shortList3.ensureCapacity((int) ' ');
        boolean boolean10 = shortList3.add((java.lang.Short) (short) -1);
        java.util.stream.Stream<java.lang.Short> shortStream11 = shortList3.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList13 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator14);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter15.isUnitAvailable();
        boolean boolean17 = softwareDefinedRadioSoftSimAdapter15.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration18 = null;
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter15.setConfiguration(sDRConfiguration18);
        boolean boolean21 = softwareDefinedRadioSoftSimAdapter15.enableSDR((java.lang.Boolean) true);
        boolean boolean23 = softwareDefinedRadioSoftSimAdapter15.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator24 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter25 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator24);
        boolean boolean26 = softwareDefinedRadioSoftSimAdapter25.isUnitAvailable();
        boolean boolean28 = softwareDefinedRadioSoftSimAdapter25.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator29 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter30 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator29);
        boolean boolean31 = softwareDefinedRadioSoftSimAdapter30.isUnitAvailable();
        boolean boolean32 = softwareDefinedRadioSoftSimAdapter30.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator33);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray35 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter15, softwareDefinedRadioSoftSimAdapter25, softwareDefinedRadioSoftSimAdapter30, softwareDefinedRadioSoftSimAdapter34 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray36 = stringList13.toArray(softwareDefinedRadioAdapterInterfaceArray35);
        try {
            esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray37 = shortList3.toArray(softwareDefinedRadioAdapterInterfaceArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(shortItor6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(shortStream11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray35);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray36);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str6 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean7 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Long long1 = uShortList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShortList0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.ShortList shortList5 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = shortList5.getAreaNumber();
        shortList5.trimToSize();
        java.lang.Integer int8 = shortList5.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element9 = shortList5.createElement();
        shortList5.clear();
        java.util.stream.Stream<java.lang.Short> shortStream11 = shortList5.stream();
        int int12 = shortList5.size();
        shortList5.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = shortList5.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean17 = octetList16.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = octetList16.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream19 = octetList16.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = octetList16.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList22 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        int int23 = octetList16.lastIndexOf((java.lang.Object) longList22);
        opssat.simulator.main.ESASimulator eSASimulator24 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter25 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator24);
        boolean boolean26 = gPSSoftSimAdapter25.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator27 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter28 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator27);
        boolean boolean29 = gPSSoftSimAdapter28.isUnitAvailable();
        boolean boolean30 = gPSSoftSimAdapter28.isUnitAvailable();
        boolean boolean31 = gPSSoftSimAdapter28.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator32 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter33 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator32);
        boolean boolean34 = gPSSoftSimAdapter33.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator35 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter36 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator35);
        opssat.simulator.main.ESASimulator eSASimulator37 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter38 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator37);
        boolean boolean39 = gPSSoftSimAdapter38.isUnitAvailable();
        boolean boolean40 = gPSSoftSimAdapter38.isUnitAvailable();
        boolean boolean41 = gPSSoftSimAdapter38.isUnitAvailable();
        boolean boolean42 = gPSSoftSimAdapter38.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray43 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter25, gPSSoftSimAdapter28, gPSSoftSimAdapter33, gPSSoftSimAdapter36, gPSSoftSimAdapter38 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray44 = longList22.toArray(gPSNMEAonlyAdapterArray43);
        boolean boolean45 = shortList5.equals((java.lang.Object) gPSNMEAonlyAdapterArray43);
        boolean boolean46 = uShortList0.remove((java.lang.Object) boolean45);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265078L + "'", long1.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-9) + "'", int8.equals((-9)));
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertNotNull(shortStream11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(uOctet18);
        org.junit.Assert.assertNotNull(byteStream19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray43);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        int int6 = booleanList3.indexOf((java.lang.Object) "hi!");
        org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        java.lang.Long long9 = octetList8.getShortForm();
        int int10 = booleanList3.indexOf((java.lang.Object) octetList8);
        org.ccsds.moims.mo.mal.structures.URIList uRIList12 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uRIList12.getAreaNumber();
        java.lang.Integer int14 = uRIList12.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator15 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter16 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator15);
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter16.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList18 = cameraSoftSimAdapter16.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration19 = cameraSoftSimAdapter16.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList20 = cameraSoftSimAdapter16.getAvailableResolutions();
        int int21 = uRIList12.indexOf((java.lang.Object) cameraSoftSimAdapter16);
        boolean boolean22 = booleanList3.contains((java.lang.Object) uRIList12);
        int int23 = booleanList3.size();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265081L + "'", long9.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-18) + "'", int14.equals((-18)));
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertNotNull(pixelResolutionList18);
        org.junit.Assert.assertNotNull(duration19);
        org.junit.Assert.assertNotNull(pixelResolutionList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        java.lang.String str10 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode9);
        boolean boolean11 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean12 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean6 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        java.lang.String str10 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode9);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode37 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode38 = null;
        autonomousADCSSoftSimAdapter34.setDesiredAttitude(attitudeMode38);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNull(attitudeMode36);
        org.junit.Assert.assertNull(attitudeMode37);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uRIList0.getServiceNumber();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        uRIList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRIList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (short) 0);
        java.util.stream.Stream<java.lang.Byte> byteStream8 = octetList7.stream();
        boolean boolean9 = uRIList0.equals((java.lang.Object) byteStream8);
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator10);
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList13 = cameraSoftSimAdapter11.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList15 = cameraSoftSimAdapter11.getAvailableResolutions();
        boolean boolean16 = cameraSoftSimAdapter11.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter11.getMinimumPeriod();
        java.lang.Long long18 = duration17.getShortForm();
        boolean boolean19 = uRIList0.remove((java.lang.Object) duration17);
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = duration17.getServiceNumber();
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(byteStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(pixelResolutionList13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(pixelResolutionList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281474993487875L + "'", long18.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(uShort20);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean7 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean8 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position9 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration12 = null;
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration12);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration14 = null;
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        shortList1.trimToSize();
        java.lang.Integer int4 = shortList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = shortList1.createElement();
        shortList1.clear();
        java.util.stream.Stream<java.lang.Short> shortStream7 = shortList1.stream();
        int int8 = shortList1.size();
        shortList1.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = shortList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList12 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean13 = octetList12.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = octetList12.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream15 = octetList12.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = octetList12.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList18 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        int int19 = octetList12.lastIndexOf((java.lang.Object) longList18);
        opssat.simulator.main.ESASimulator eSASimulator20 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter21 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator20);
        boolean boolean22 = gPSSoftSimAdapter21.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator23 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter24 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator23);
        boolean boolean25 = gPSSoftSimAdapter24.isUnitAvailable();
        boolean boolean26 = gPSSoftSimAdapter24.isUnitAvailable();
        boolean boolean27 = gPSSoftSimAdapter24.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator28 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter29 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator28);
        boolean boolean30 = gPSSoftSimAdapter29.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator31 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter32 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator31);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean36 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean37 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean38 = gPSSoftSimAdapter34.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray39 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter21, gPSSoftSimAdapter24, gPSSoftSimAdapter29, gPSSoftSimAdapter32, gPSSoftSimAdapter34 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray40 = longList18.toArray(gPSNMEAonlyAdapterArray39);
        boolean boolean41 = shortList1.equals((java.lang.Object) gPSNMEAonlyAdapterArray39);
        try {
            shortList1.add((-1), (java.lang.Short) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -1, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-9) + "'", int4.equals((-9)));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(shortStream7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(byteStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray39);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Element element6 = duration5.createElement();
        org.ccsds.moims.mo.mal.structures.Element element7 = duration5.createElement();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(element6);
        org.junit.Assert.assertNotNull(element7);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList2 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList2, byteArray1);
        java.lang.Float[] floatArray7 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        boolean boolean10 = byteList2.containsAll((java.util.Collection<java.lang.Float>) floatList8);
        boolean boolean11 = floatList8.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray13 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort12 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList14 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList14, uShortArray13);
        java.lang.String str16 = uShortList14.toString();
        java.lang.Object[] objArray17 = uShortList14.toArray();
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList22, doubleArray21);
        java.lang.Float[] floatArray27 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList28 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList28, floatArray27);
        int int30 = floatList28.size();
        boolean boolean31 = doubleList22.containsAll((java.util.Collection<java.lang.Float>) floatList28);
        boolean boolean32 = uShortList14.retainAll((java.util.Collection<java.lang.Float>) floatList28);
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.String str38 = booleanList36.toString();
        int int39 = booleanList36.size();
        boolean boolean40 = floatList28.contains((java.lang.Object) int39);
        boolean boolean41 = floatList8.addAll((java.util.Collection<java.lang.Float>) floatList28);
        org.ccsds.moims.mo.mal.structures.Union union43 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 10);
        java.lang.String str44 = union43.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = union43.getAreaVersion();
        int int46 = floatList28.lastIndexOf((java.lang.Object) union43);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet47 = union43.getAreaVersion();
        opssat.simulator.main.ESASimulator eSASimulator48 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter49 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator48);
        org.ccsds.moims.mo.mal.structures.Duration duration50 = cameraSoftSimAdapter49.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter49.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter49.getMinimumPeriod();
        boolean boolean53 = union43.equals((java.lang.Object) duration52);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertNotNull(uShortArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[1]" + "'", str16.equals("[1]"));
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(floatArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + str44 + "' != '" + "10" + "'", str44.equals("10"));
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(uOctet47);
        org.junit.Assert.assertNotNull(duration50);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.util.Iterator<java.lang.Double> doubleItor36 = doubleList10.iterator();
        doubleList10.ensureCapacity((-13));
        java.util.Iterator<java.lang.Double> doubleItor39 = doubleList10.iterator();
        java.util.stream.Stream<java.lang.Double> doubleStream40 = doubleList10.parallelStream();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(doubleItor36);
        org.junit.Assert.assertNotNull(doubleItor39);
        org.junit.Assert.assertNotNull(doubleStream40);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration3 = null;
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration3);
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration7 = null;
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration7);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort0 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
        java.lang.String str4 = uShortList2.toString();
        boolean boolean6 = uShortList2.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList8 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean9 = uShortList2.remove((java.lang.Object) stringList8);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor10 = uShortList2.iterator();
        org.ccsds.moims.mo.mal.structures.URIList uRIList11 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = uRIList11.getAreaNumber();
        boolean boolean13 = uShortList2.add(uShort12);
        java.util.Iterator<org.ccsds.moims.mo.mal.structures.UShort> uShortItor14 = uShortList2.iterator();
        uShortList2.clear();
        uShortList2.ensureCapacity(0);
        opssat.simulator.main.ESASimulator eSASimulator18 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter19 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator18);
        org.ccsds.moims.mo.mal.structures.Duration duration20 = cameraSoftSimAdapter19.getMinimumPeriod();
        double double21 = duration20.getValue();
        java.lang.String str22 = duration20.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = duration20.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = duration20.getServiceNumber();
        boolean boolean25 = uShortList2.add(uShort24);
        org.junit.Assert.assertNotNull(uShort0);
        org.junit.Assert.assertNotNull(uShortArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[1]" + "'", str4.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uShortItor10);
        org.junit.Assert.assertNotNull(uShort12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uShortItor14);
        org.junit.Assert.assertNotNull(duration20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "10.0" + "'", str22.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = duration2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList5 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = uShortList5.getServiceNumber();
        java.lang.Object obj7 = null;
        int int8 = uShortList5.lastIndexOf(obj7);
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = uShortList5.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = uShortList5.getServiceNumber();
        boolean boolean11 = duration2.equals((java.lang.Object) uShortList5);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode9);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode11);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode13 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode13);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode15 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(attitudeMode15);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(10);
        octetList1.trimToSize();
        java.util.stream.Stream<java.lang.Byte> byteStream3 = octetList1.parallelStream();
        boolean boolean4 = octetList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.StringList stringList6 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 10);
        stringList6.clear();
        org.ccsds.moims.mo.mal.structures.Element element8 = stringList6.createElement();
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator9);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration13 = null;
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter10.setConfiguration(sDRConfiguration13);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) true);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration19 = null;
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter10.setConfiguration(sDRConfiguration19);
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        boolean boolean23 = softwareDefinedRadioSoftSimAdapter22.isUnitAvailable();
        boolean boolean24 = softwareDefinedRadioSoftSimAdapter22.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration25 = null;
        boolean boolean26 = softwareDefinedRadioSoftSimAdapter22.setConfiguration(sDRConfiguration25);
        boolean boolean28 = softwareDefinedRadioSoftSimAdapter22.enableSDR((java.lang.Boolean) true);
        boolean boolean30 = softwareDefinedRadioSoftSimAdapter22.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator31 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter32 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator31);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration33 = null;
        boolean boolean34 = softwareDefinedRadioSoftSimAdapter32.setConfiguration(sDRConfiguration33);
        boolean boolean35 = softwareDefinedRadioSoftSimAdapter32.isUnitAvailable();
        boolean boolean37 = softwareDefinedRadioSoftSimAdapter32.enableSDR((java.lang.Boolean) false);
        opssat.simulator.main.ESASimulator eSASimulator38 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter39 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator38);
        boolean boolean40 = softwareDefinedRadioSoftSimAdapter39.isUnitAvailable();
        boolean boolean42 = softwareDefinedRadioSoftSimAdapter39.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator43 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter44 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator43);
        boolean boolean45 = softwareDefinedRadioSoftSimAdapter44.isUnitAvailable();
        boolean boolean46 = softwareDefinedRadioSoftSimAdapter44.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration47 = null;
        boolean boolean48 = softwareDefinedRadioSoftSimAdapter44.setConfiguration(sDRConfiguration47);
        boolean boolean50 = softwareDefinedRadioSoftSimAdapter44.enableSDR((java.lang.Boolean) true);
        boolean boolean52 = softwareDefinedRadioSoftSimAdapter44.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration53 = null;
        boolean boolean54 = softwareDefinedRadioSoftSimAdapter44.setConfiguration(sDRConfiguration53);
        opssat.simulator.main.ESASimulator eSASimulator55 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter56 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator55);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration57 = null;
        boolean boolean58 = softwareDefinedRadioSoftSimAdapter56.setConfiguration(sDRConfiguration57);
        boolean boolean60 = softwareDefinedRadioSoftSimAdapter56.enableSDR((java.lang.Boolean) true);
        boolean boolean62 = softwareDefinedRadioSoftSimAdapter56.enableSDR((java.lang.Boolean) true);
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray63 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] { softwareDefinedRadioSoftSimAdapter10, softwareDefinedRadioSoftSimAdapter22, softwareDefinedRadioSoftSimAdapter32, softwareDefinedRadioSoftSimAdapter39, softwareDefinedRadioSoftSimAdapter44, softwareDefinedRadioSoftSimAdapter56 };
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray64 = stringList6.toArray(softwareDefinedRadioSoftSimAdapterArray63);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray65 = octetList1.toArray((esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[]) softwareDefinedRadioSoftSimAdapterArray64);
        org.junit.Assert.assertNotNull(byteStream3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray63);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray64);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray65);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode2);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode4 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        java.lang.String str6 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str8 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean9 = cameraSoftSimAdapter1.isUnitAvailable();
        java.lang.String str10 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str8.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str10.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        shortList1.trimToSize();
        java.lang.Integer int4 = shortList1.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element5 = shortList1.createElement();
        shortList1.clear();
        java.util.stream.Stream<java.lang.Short> shortStream7 = shortList1.stream();
        int int8 = shortList1.size();
        shortList1.clear();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = shortList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList12 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean13 = octetList12.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = octetList12.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream15 = octetList12.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = octetList12.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList18 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        int int19 = octetList12.lastIndexOf((java.lang.Object) longList18);
        opssat.simulator.main.ESASimulator eSASimulator20 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter21 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator20);
        boolean boolean22 = gPSSoftSimAdapter21.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator23 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter24 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator23);
        boolean boolean25 = gPSSoftSimAdapter24.isUnitAvailable();
        boolean boolean26 = gPSSoftSimAdapter24.isUnitAvailable();
        boolean boolean27 = gPSSoftSimAdapter24.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator28 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter29 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator28);
        boolean boolean30 = gPSSoftSimAdapter29.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator31 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter32 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator31);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean36 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean37 = gPSSoftSimAdapter34.isUnitAvailable();
        boolean boolean38 = gPSSoftSimAdapter34.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray39 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter21, gPSSoftSimAdapter24, gPSSoftSimAdapter29, gPSSoftSimAdapter32, gPSSoftSimAdapter34 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray40 = longList18.toArray(gPSNMEAonlyAdapterArray39);
        boolean boolean41 = shortList1.equals((java.lang.Object) gPSNMEAonlyAdapterArray39);
        org.ccsds.moims.mo.mal.structures.Element element42 = shortList1.createElement();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-9) + "'", int4.equals((-9)));
        org.junit.Assert.assertNotNull(element5);
        org.junit.Assert.assertNotNull(shortStream7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(uOctet10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(byteStream15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray39);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(element42);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration11 = null;
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration11);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort12 = duration11.getServiceNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(uShort12);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Integer) (-9));
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        opssat.simulator.main.ESASimulator eSASimulator3 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter4 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator3);
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter4.isUnitAvailable();
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter4.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration7 = null;
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter4.setConfiguration(sDRConfiguration7);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter4.enableSDR((java.lang.Boolean) true);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter4.enableSDR((java.lang.Boolean) true);
        boolean boolean13 = union1.equals((java.lang.Object) boolean12);
        try {
            java.lang.Float float14 = union1.getFloatValue();
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to java.lang.Float");
        } catch (java.lang.ClassCastException e) {
        }
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(4);
        boolean boolean2 = longList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.Union union4 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = union4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = union4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = union4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = union4.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray9 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList10 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList10, uRIArray9);
        boolean boolean13 = uRIList10.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray18 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList19 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList19, doubleArray18);
        java.lang.Short[] shortArray24 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList25 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList25, shortArray24);
        java.lang.Byte[] byteArray28 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList29 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList29, byteArray28);
        java.lang.Float[] floatArray34 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList35 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList35, floatArray34);
        boolean boolean37 = byteList29.containsAll((java.util.Collection<java.lang.Float>) floatList35);
        boolean boolean38 = shortList25.containsAll((java.util.Collection<java.lang.Float>) floatList35);
        boolean boolean39 = doubleList19.contains((java.lang.Object) shortList25);
        doubleList19.trimToSize();
        int int41 = uRIList10.indexOf((java.lang.Object) doubleList19);
        java.lang.Byte[] byteArray43 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList44 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList44, byteArray43);
        java.lang.Float[] floatArray49 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList50 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList50, floatArray49);
        boolean boolean52 = byteList44.containsAll((java.util.Collection<java.lang.Float>) floatList50);
        boolean boolean53 = doubleList19.retainAll((java.util.Collection<java.lang.Float>) floatList50);
        int int54 = doubleList19.size();
        boolean boolean56 = doubleList19.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream57 = doubleList19.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator58 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter59 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator58);
        org.ccsds.moims.mo.mal.structures.Duration duration60 = cameraSoftSimAdapter59.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration61 = cameraSoftSimAdapter59.getMinimumPeriod();
        int int62 = doubleList19.lastIndexOf((java.lang.Object) duration61);
        boolean boolean63 = uShort8.equals((java.lang.Object) doubleList19);
        java.util.stream.Stream<java.lang.Double> doubleStream64 = doubleList19.parallelStream();
        boolean boolean65 = longList1.remove((java.lang.Object) doubleStream64);
        java.util.Spliterator<java.lang.Long> longSpliterator66 = longList1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(uRIArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(shortArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(floatArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertNotNull(floatArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertNotNull(doubleStream57);
        org.junit.Assert.assertNotNull(duration60);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertNotNull(doubleStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertNotNull(longSpliterator66);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        java.util.stream.Stream<java.lang.Double> doubleStream38 = doubleList10.stream();
        boolean boolean40 = doubleList10.add((java.lang.Double) 2.81474993487879E14d);
        java.util.Spliterator<java.lang.Double> doubleSpliterator41 = doubleList10.spliterator();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(doubleStream37);
        org.junit.Assert.assertNotNull(doubleStream38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertNotNull(doubleSpliterator41);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.util.Spliterator<org.ccsds.moims.mo.mal.structures.URI> uRISpliterator11 = uRIList1.spliterator();
        try {
            org.ccsds.moims.mo.mal.structures.URI uRI13 = uRIList1.remove((-18));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(uRISpliterator11);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uLong0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uLong0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uLong0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList5 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = shortList5.getAreaNumber();
        shortList5.trimToSize();
        java.lang.Integer int8 = shortList5.getTypeShortForm();
        java.util.ListIterator<java.lang.Short> shortItor9 = shortList5.listIterator();
        boolean boolean10 = uLong0.equals((java.lang.Object) shortList5);
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uLong0.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element12 = uLong0.createElement();
        org.ccsds.moims.mo.mal.structures.Element element13 = uLong0.createElement();
        org.ccsds.moims.mo.mal.structures.LongList longList15 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor16 = longList15.listIterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort17 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.Duration duration18 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str19 = duration18.toString();
        double double20 = duration18.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = duration18.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union23 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = union23.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray25 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort17, uShort21, uShort24 };
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = longList15.toArray(uShortArray25);
        longList15.clear();
        java.lang.Object obj28 = longList15.clone();
        java.lang.Boolean[] booleanArray31 = new java.lang.Boolean[] { true, false };
        java.util.ArrayList<java.lang.Boolean> booleanList32 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList32, booleanArray31);
        opssat.simulator.main.ESASimulator eSASimulator34 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter35 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = autonomousADCSSoftSimAdapter35.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode37 = null;
        java.lang.String str38 = autonomousADCSSoftSimAdapter35.validateAttitudeDescriptor(attitudeMode37);
        boolean boolean39 = autonomousADCSSoftSimAdapter35.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode40 = autonomousADCSSoftSimAdapter35.getActiveAttitudeMode();
        boolean boolean41 = booleanList32.contains((java.lang.Object) attitudeMode40);
        org.ccsds.moims.mo.mal.structures.LongList longList42 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = longList42.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList44 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = doubleList44.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element46 = doubleList44.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList48 = new org.ccsds.moims.mo.mal.structures.FloatList(9);
        java.lang.Integer int49 = floatList48.getTypeShortForm();
        boolean boolean50 = doubleList44.retainAll((java.util.Collection<java.lang.Float>) floatList48);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList51 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        integerList51.trimToSize();
        java.lang.Object obj53 = integerList51.clone();
        java.lang.Object obj54 = integerList51.clone();
        boolean boolean55 = floatList48.contains((java.lang.Object) integerList51);
        byte[] byteArray56 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob57 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray56);
        int int58 = blob57.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = blob57.getAreaNumber();
        blob57.detach();
        blob57.detach();
        java.lang.Integer int62 = blob57.getTypeShortForm();
        boolean boolean63 = floatList48.remove((java.lang.Object) int62);
        java.lang.Object obj64 = null;
        boolean boolean65 = floatList48.equals(obj64);
        boolean boolean66 = longList42.retainAll((java.util.Collection<java.lang.Float>) floatList48);
        boolean boolean67 = booleanList32.removeAll((java.util.Collection<java.lang.Float>) floatList48);
        boolean boolean68 = longList15.remove((java.lang.Object) floatList48);
        boolean boolean69 = uLong0.equals((java.lang.Object) floatList48);
        java.lang.Integer int70 = uLong0.getTypeShortForm();
        java.lang.Short[] shortArray73 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList74 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList74, shortArray73);
        shortList74.trimToSize();
        java.util.ListIterator<java.lang.Short> shortItor77 = shortList74.listIterator();
        shortList74.ensureCapacity((int) ' ');
        int int80 = shortList74.size();
        shortList74.trimToSize();
        boolean boolean82 = uLong0.equals((java.lang.Object) shortList74);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-9) + "'", int8.equals((-9)));
        org.junit.Assert.assertNotNull(shortItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertNotNull(element12);
        org.junit.Assert.assertNotNull(element13);
        org.junit.Assert.assertNotNull(longItor16);
        org.junit.Assert.assertNotNull(uShort17);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "0.0" + "'", str19.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(uShortArray25);
        org.junit.Assert.assertNotNull(uShortArray26);
        org.junit.Assert.assertNotNull(obj28);
        org.junit.Assert.assertNotNull(booleanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNull(attitudeMode36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNull(attitudeMode40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertNotNull(uOctet43);
        org.junit.Assert.assertNotNull(uOctet45);
        org.junit.Assert.assertNotNull(element46);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-4) + "'", int49.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertNotNull(obj53);
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62.equals(1));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 14 + "'", int70.equals(14));
        org.junit.Assert.assertNotNull(shortArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertNotNull(shortItor77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = duration2.getAreaNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShort6);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode5);
        org.junit.Assert.assertNull(attitudeMode8);
        org.junit.Assert.assertNull(attitudeMode9);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        java.lang.String str5 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str5.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration6.getServiceNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(uShort7);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = duration2.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = duration2.getAreaVersion();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uOctet7);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int4 = duration3.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration3.getAreaVersion();
        java.lang.Integer int7 = duration3.getTypeShortForm();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4.equals(3));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7.equals(3));
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.lang.String str11 = cameraSoftSimAdapter5.getExtraInfo();
        boolean boolean12 = cameraSoftSimAdapter5.isUnitAvailable();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str11.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration6);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "[1]", "[true, true]", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray14 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort13 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15, uShortArray14);
        java.lang.String str17 = uShortList15.toString();
        boolean boolean19 = uShortList15.remove((java.lang.Object) (-1));
        int int20 = strList11.indexOf((java.lang.Object) boolean19);
        java.lang.String str21 = strList11.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        java.lang.Class<?> wildcardClass23 = uShort22.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = new org.ccsds.moims.mo.mal.structures.UShort(3);
        byte[] byteArray27 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray27);
        int int29 = blob28.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort22, uShort24, uShort26, uShort30, uShort31, uShort32, uShort33 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList41 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList41, doubleArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = doubleList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = uShortList35.equals((java.lang.Object) doubleList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList53 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = booleanList53.getAreaNumber();
        int int55 = uShortList35.lastIndexOf((java.lang.Object) booleanList53);
        java.lang.Integer int56 = booleanList53.getTypeShortForm();
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        java.lang.Float[] floatArray64 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList65 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList65, floatArray64);
        boolean boolean67 = byteList59.containsAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean68 = floatList65.isEmpty();
        boolean boolean69 = booleanList53.retainAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean70 = strList11.removeAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean71 = duration2.equals((java.lang.Object) strList11);
        org.ccsds.moims.mo.mal.structures.Element element72 = duration2.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort73 = duration2.getAreaNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[1]" + "'", str17.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[, [1], [true, true], ]" + "'", str21.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-2) + "'", int56.equals((-2)));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(element72);
        org.junit.Assert.assertNotNull(uShort73);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        java.lang.String str6 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Element element8 = duration7.createElement();
        double double9 = duration7.getValue();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration6);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        java.lang.String str2 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str2.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration6);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        java.lang.Long[] longArray2 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList3 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList3, longArray2);
        longList3.ensureCapacity((int) (byte) 100);
        java.lang.String str7 = longList3.toString();
        java.util.stream.Stream<java.lang.Long> longStream8 = longList3.stream();
        java.lang.String str9 = longList3.toString();
        java.lang.String str10 = longList3.toString();
        java.util.ListIterator<java.lang.Long> longItor11 = longList3.listIterator();
        java.util.stream.Stream<java.lang.Long> longStream12 = longList3.parallelStream();
        boolean boolean13 = longList3.isEmpty();
        java.util.stream.Stream<java.lang.Long> longStream14 = longList3.stream();
        java.lang.Object obj15 = longList3.clone();
        boolean boolean16 = longList3.isEmpty();
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration19 = null;
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.setConfiguration(sDRConfiguration19);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration21 = null;
        boolean boolean22 = softwareDefinedRadioSoftSimAdapter18.setConfiguration(sDRConfiguration21);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration23 = null;
        boolean boolean24 = softwareDefinedRadioSoftSimAdapter18.setConfiguration(sDRConfiguration23);
        boolean boolean25 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean26 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean28 = softwareDefinedRadioSoftSimAdapter18.enableSDR((java.lang.Boolean) true);
        boolean boolean29 = longList3.remove((java.lang.Object) true);
        org.junit.Assert.assertNotNull(longArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "[281475010265077, 100]" + "'", str7.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longStream8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[281475010265077, 100]" + "'", str9.equals("[281475010265077, 100]"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[281475010265077, 100]" + "'", str10.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longItor11);
        org.junit.Assert.assertNotNull(longStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(longStream14);
        org.junit.Assert.assertNotNull(obj15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean7 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNull(attitudeMode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNull(attitudeMode10);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PictureFormatList pictureFormatList5 = cameraSoftSimAdapter1.getAvailableFormats();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNotNull(pictureFormatList5);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNull(attitudeMode9);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = duration52.getAreaNumber();
        java.math.BigInteger bigInteger55 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong56 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger55);
        boolean boolean57 = duration52.equals((java.lang.Object) bigInteger55);
        java.lang.String str58 = duration52.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet59 = duration52.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = duration52.getServiceNumber();
        java.lang.Integer int61 = duration52.getTypeShortForm();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "10.0" + "'", str58.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet59);
        org.junit.Assert.assertNotNull(uShort60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61.equals(3));
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        java.util.stream.Stream<java.lang.Double> doubleStream38 = doubleList10.stream();
        java.util.ListIterator<java.lang.Double> doubleItor39 = doubleList10.listIterator();
        java.util.Spliterator<java.lang.Double> doubleSpliterator40 = doubleList10.spliterator();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(doubleStream37);
        org.junit.Assert.assertNotNull(doubleStream38);
        org.junit.Assert.assertNotNull(doubleItor39);
        org.junit.Assert.assertNotNull(doubleSpliterator40);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = duration3.getAreaVersion();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(uOctet4);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.lang.Object obj37 = null;
        boolean boolean38 = doubleList10.equals(obj37);
        doubleList10.clear();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode8);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        java.lang.String str6 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList8 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(pixelResolutionList8);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration12 = null;
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.lang.Integer int11 = uRIList1.getTypeShortForm();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor12 = uRIList1.listIterator();
        uRIList1.clear();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(uRIItor12);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode9);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode12 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode12);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(attitudeMode11);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        java.lang.String str5 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str5.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(duration8);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Element element13 = duration12.createElement();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(element13);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = duration12.getAreaNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = booleanList1.getAreaNumber();
        java.lang.Object obj3 = booleanList1.clone();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator4);
        boolean boolean6 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean7 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean8 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean9 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean10 = booleanList1.equals((java.lang.Object) gPSSoftSimAdapter5);
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList11 = null; // flaky: gPSSoftSimAdapter5.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str6 = duration5.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "10.0" + "'", str6.equals("10.0"));
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = shortList1.getAreaNumber();
        shortList1.trimToSize();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        java.lang.Float[] floatArray11 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList12 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList12, floatArray11);
        boolean boolean14 = byteList6.containsAll((java.util.Collection<java.lang.Float>) floatList12);
        java.lang.Float[] floatArray18 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList19 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList19, floatArray18);
        int int21 = floatList19.size();
        boolean boolean22 = floatList12.containsAll((java.util.Collection<java.lang.Float>) floatList19);
        java.lang.String str23 = floatList12.toString();
        java.lang.String str24 = floatList12.toString();
        boolean boolean25 = shortList1.equals((java.lang.Object) str24);
        java.util.stream.Stream<java.lang.Short> shortStream26 = shortList1.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator27 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter28 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator27);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode29 = autonomousADCSSoftSimAdapter28.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode30 = null;
        java.lang.String str31 = autonomousADCSSoftSimAdapter28.validateAttitudeDescriptor(attitudeMode30);
        boolean boolean32 = autonomousADCSSoftSimAdapter28.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode33 = autonomousADCSSoftSimAdapter28.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode34 = null;
        java.lang.String str35 = autonomousADCSSoftSimAdapter28.validateAttitudeDescriptor(attitudeMode34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = null;
        autonomousADCSSoftSimAdapter28.setDesiredAttitude(attitudeMode36);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode38 = null;
        autonomousADCSSoftSimAdapter28.setDesiredAttitude(attitudeMode38);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode40 = null;
        java.lang.String str41 = autonomousADCSSoftSimAdapter28.validateAttitudeDescriptor(attitudeMode40);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode42 = null;
        java.lang.String str43 = autonomousADCSSoftSimAdapter28.validateAttitudeDescriptor(attitudeMode42);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode44 = null;
        autonomousADCSSoftSimAdapter28.setDesiredAttitude(attitudeMode44);
        boolean boolean46 = shortList1.remove((java.lang.Object) attitudeMode44);
        org.ccsds.moims.mo.mal.structures.LongList longList47 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = longList47.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort49 = longList47.getServiceNumber();
        java.util.stream.Stream<java.lang.Long> longStream50 = longList47.parallelStream();
        longList47.trimToSize();
        org.ccsds.moims.mo.mal.structures.UShort uShort52 = longList47.getServiceNumber();
        boolean boolean53 = shortList1.contains((java.lang.Object) longList47);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + str23 + "' != '" + "[-1.0, 10.0, 10.0]" + "'", str23.equals("[-1.0, 10.0, 10.0]"));
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[-1.0, 10.0, 10.0]" + "'", str24.equals("[-1.0, 10.0, 10.0]"));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertNotNull(shortStream26);
        org.junit.Assert.assertNull(attitudeMode29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNull(attitudeMode33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(uShort49);
        org.junit.Assert.assertNotNull(longStream50);
        org.junit.Assert.assertNotNull(uShort52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.Element element2 = uShortList1.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShortList1.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element4 = uShortList1.createElement();
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator5);
        opssat.simulator.main.ESASimulator eSASimulator7 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter8 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator7);
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator9);
        opssat.simulator.main.ESASimulator eSASimulator11 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter12 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator11);
        boolean boolean13 = gPSSoftSimAdapter12.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator14);
        boolean boolean16 = gPSSoftSimAdapter15.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray17 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter6, gPSSoftSimAdapter8, gPSSoftSimAdapter10, gPSSoftSimAdapter12, gPSSoftSimAdapter15 };
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray18 = uShortList1.toArray(gPSAdapterInterfaceArray17);
        org.ccsds.moims.mo.mal.structures.OctetList octetList20 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean21 = octetList20.isEmpty();
        java.util.stream.Stream<java.lang.Byte> byteStream22 = octetList20.stream();
        java.lang.Long[] longArray25 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList26 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList26, longArray25);
        longList26.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray30 = longList26.toArray();
        boolean boolean32 = longList26.remove((java.lang.Object) '#');
        boolean boolean33 = longList26.isEmpty();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList35 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) 'a');
        java.lang.Integer int36 = integerList35.getTypeShortForm();
        boolean boolean37 = longList26.contains((java.lang.Object) int36);
        boolean boolean38 = octetList20.contains((java.lang.Object) boolean37);
        java.lang.Object obj39 = octetList20.clone();
        org.ccsds.moims.mo.mal.structures.UShortList uShortList41 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = uShortList41.getServiceNumber();
        java.lang.Object obj43 = null;
        int int44 = uShortList41.lastIndexOf(obj43);
        org.ccsds.moims.mo.mal.structures.UShort uShort45 = uShortList41.getServiceNumber();
        java.lang.Object obj46 = uShortList41.clone();
        java.lang.Long long47 = uShortList41.getShortForm();
        int int48 = octetList20.lastIndexOf((java.lang.Object) uShortList41);
        int int49 = uShortList1.indexOf((java.lang.Object) uShortList41);
        java.lang.Integer int50 = uShortList41.getTypeShortForm();
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(element4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray17);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(byteStream22);
        org.junit.Assert.assertNotNull(longArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-11) + "'", int36.equals((-11)));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(obj39);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(uShort45);
        org.junit.Assert.assertNotNull(obj46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 281475010265078L + "'", long47.equals(281475010265078L));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-10) + "'", int50.equals((-10)));
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        boolean boolean7 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Time time10 = new org.ccsds.moims.mo.mal.structures.Time();
        java.lang.String[] strArray15 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        java.util.Iterator<java.lang.String> strItor18 = strList16.iterator();
        java.lang.String str20 = strList16.remove((int) (byte) 0);
        boolean boolean21 = time10.equals((java.lang.Object) str20);
        java.lang.Integer int22 = time10.getTypeShortForm();
        long long23 = time10.getValue();
        java.lang.String str24 = time10.toString();
        java.lang.Long long25 = time10.getShortForm();
        boolean boolean26 = duration9.equals((java.lang.Object) time10);
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = time10.getAreaNumber();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(strItor18);
        org.junit.Assert.assertTrue("'" + str20 + "' != '" + "[true, true]" + "'", str20.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 16 + "'", int22.equals(16));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "0" + "'", str24.equals("0"));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 281474993487888L + "'", long25.equals(281474993487888L));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(uShort27);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        doubleList10.ensureCapacity((-15));
        java.lang.Short[] shortArray40 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList41 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList41, shortArray40);
        shortList41.trimToSize();
        java.lang.Double[] doubleArray45 = new java.lang.Double[] { 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList46 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList46, doubleArray45);
        java.lang.String[] strArray52 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Iterator<java.lang.String> strItor55 = strList53.iterator();
        java.lang.String str57 = strList53.remove((int) (byte) 0);
        java.lang.Byte[] byteArray59 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList60 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList60, byteArray59);
        java.lang.Float[] floatArray65 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList66 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList66, floatArray65);
        boolean boolean68 = byteList60.containsAll((java.util.Collection<java.lang.Float>) floatList66);
        java.lang.Float[] floatArray72 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList73 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList73, floatArray72);
        int int75 = floatList73.size();
        boolean boolean76 = floatList66.containsAll((java.util.Collection<java.lang.Float>) floatList73);
        boolean boolean77 = strList53.containsAll((java.util.Collection<java.lang.Float>) floatList66);
        boolean boolean78 = doubleList46.containsAll((java.util.Collection<java.lang.Float>) floatList66);
        java.lang.Float[] floatArray82 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList83 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList83, floatArray82);
        int int85 = floatList83.size();
        boolean boolean86 = floatList66.containsAll((java.util.Collection<java.lang.Float>) floatList83);
        boolean boolean87 = shortList41.removeAll((java.util.Collection<java.lang.Float>) floatList83);
        java.util.Iterator<java.lang.Short> shortItor88 = shortList41.iterator();
        shortList41.ensureCapacity((-2));
        org.ccsds.moims.mo.mal.structures.OctetList octetList91 = new org.ccsds.moims.mo.mal.structures.OctetList();
        org.ccsds.moims.mo.mal.structures.FloatList floatList92 = new org.ccsds.moims.mo.mal.structures.FloatList();
        org.ccsds.moims.mo.mal.structures.UShort uShort93 = floatList92.getServiceNumber();
        java.lang.Long long94 = floatList92.getShortForm();
        boolean boolean95 = octetList91.removeAll((java.util.Collection<java.lang.Float>) floatList92);
        boolean boolean96 = shortList41.removeAll((java.util.Collection<java.lang.Float>) floatList92);
        boolean boolean97 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList92);
        java.util.stream.Stream<java.lang.Double> doubleStream98 = doubleList10.parallelStream();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(shortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(strItor55);
        org.junit.Assert.assertTrue("'" + str57 + "' != '" + "[true, true]" + "'", str57.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(floatArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertNotNull(floatArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 3 + "'", int75 == 3);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(floatArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
        org.junit.Assert.assertNotNull(shortItor88);
        org.junit.Assert.assertNotNull(uShort93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 281475010265084L + "'", long94.equals(281475010265084L));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", !boolean95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97);
        org.junit.Assert.assertNotNull(doubleStream98);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean17 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.util.Iterator<java.lang.Double> doubleItor36 = doubleList10.iterator();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(doubleItor36);
        org.junit.Assert.assertNotNull(doubleStream37);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = duration2.getAreaVersion();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "[1]", "[true, true]", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray14 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort13 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList15 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList15, uShortArray14);
        java.lang.String str17 = uShortList15.toString();
        boolean boolean19 = uShortList15.remove((java.lang.Object) (-1));
        int int20 = strList11.indexOf((java.lang.Object) boolean19);
        java.lang.String str21 = strList11.toString();
        org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        java.lang.Class<?> wildcardClass23 = uShort22.getClass();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = new org.ccsds.moims.mo.mal.structures.UShort(3);
        byte[] byteArray27 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray27);
        int int29 = blob28.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob28.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray34 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort22, uShort24, uShort26, uShort30, uShort31, uShort32, uShort33 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList35 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList35, uShortArray34);
        java.lang.Double[] doubleArray40 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList41 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList41, doubleArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = doubleList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = uShortList35.equals((java.lang.Object) doubleList41);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList53 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = booleanList53.getAreaNumber();
        int int55 = uShortList35.lastIndexOf((java.lang.Object) booleanList53);
        java.lang.Integer int56 = booleanList53.getTypeShortForm();
        java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
        java.lang.Float[] floatArray64 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList65 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList65, floatArray64);
        boolean boolean67 = byteList59.containsAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean68 = floatList65.isEmpty();
        boolean boolean69 = booleanList53.retainAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean70 = strList11.removeAll((java.util.Collection<java.lang.Float>) floatList65);
        boolean boolean71 = duration2.equals((java.lang.Object) strList11);
        double double72 = duration2.getValue();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertNotNull(uShortArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[1]" + "'", str17.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[, [1], [true, true], ]" + "'", str21.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertNotNull(uShort22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertNotNull(uShort31);
        org.junit.Assert.assertNotNull(uShort32);
        org.junit.Assert.assertNotNull(uShort33);
        org.junit.Assert.assertNotNull(uShortArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-2) + "'", int56.equals((-2)));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(floatArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 10.0d + "'", double72 == 10.0d);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration11 = null;
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration11);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList3 = new org.ccsds.moims.mo.mal.structures.IntegerList(3);
        int int4 = stringList1.lastIndexOf((java.lang.Object) 3);
        java.util.Iterator<java.lang.String> strItor5 = stringList1.iterator();
        java.lang.Long[] longArray8 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList9 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList9, longArray8);
        longList9.ensureCapacity((int) (byte) 100);
        java.lang.String str13 = longList9.toString();
        java.util.stream.Stream<java.lang.Long> longStream14 = longList9.stream();
        java.lang.String str15 = longList9.toString();
        java.lang.String str16 = longList9.toString();
        longList9.add(0, (java.lang.Long) 10L);
        java.util.ListIterator<java.lang.Long> longItor20 = longList9.listIterator();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) 'a');
        java.lang.Integer int23 = integerList22.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList24 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort25 = uRIList24.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort26 = uRIList24.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element27 = uRIList24.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = uRIList24.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList30 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        java.lang.Integer int31 = floatList30.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet32 = floatList30.getAreaVersion();
        boolean boolean33 = uRIList24.containsAll((java.util.Collection<java.lang.Float>) floatList30);
        boolean boolean34 = integerList22.containsAll((java.util.Collection<java.lang.Float>) floatList30);
        boolean boolean35 = longList9.removeAll((java.util.Collection<java.lang.Float>) floatList30);
        boolean boolean36 = stringList1.retainAll((java.util.Collection<java.lang.Float>) floatList30);
        org.ccsds.moims.mo.mal.structures.StringList stringList38 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator39 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter40 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator39);
        boolean boolean41 = softwareDefinedRadioSoftSimAdapter40.isUnitAvailable();
        boolean boolean42 = softwareDefinedRadioSoftSimAdapter40.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration43 = null;
        boolean boolean44 = softwareDefinedRadioSoftSimAdapter40.setConfiguration(sDRConfiguration43);
        boolean boolean46 = softwareDefinedRadioSoftSimAdapter40.enableSDR((java.lang.Boolean) true);
        boolean boolean48 = softwareDefinedRadioSoftSimAdapter40.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator49);
        boolean boolean51 = softwareDefinedRadioSoftSimAdapter50.isUnitAvailable();
        boolean boolean53 = softwareDefinedRadioSoftSimAdapter50.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator54 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter55 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator54);
        boolean boolean56 = softwareDefinedRadioSoftSimAdapter55.isUnitAvailable();
        boolean boolean57 = softwareDefinedRadioSoftSimAdapter55.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator58 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter59 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator58);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray60 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter40, softwareDefinedRadioSoftSimAdapter50, softwareDefinedRadioSoftSimAdapter55, softwareDefinedRadioSoftSimAdapter59 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray61 = stringList38.toArray(softwareDefinedRadioAdapterInterfaceArray60);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray62 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray61);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(strItor5);
        org.junit.Assert.assertNotNull(longArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[281475010265077, 100]" + "'", str13.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longStream14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "[281475010265077, 100]" + "'", str15.equals("[281475010265077, 100]"));
        org.junit.Assert.assertTrue("'" + str16 + "' != '" + "[281475010265077, 100]" + "'", str16.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longItor20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-11) + "'", int23.equals((-11)));
        org.junit.Assert.assertNotNull(uShort25);
        org.junit.Assert.assertNotNull(uShort26);
        org.junit.Assert.assertNotNull(element27);
        org.junit.Assert.assertNotNull(uOctet28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-4) + "'", int31.equals((-4)));
        org.junit.Assert.assertNotNull(uOctet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray60);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray61);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray62);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean11 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNull(attitudeMode10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean6 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean7 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        boolean boolean3 = booleanList1.add((java.lang.Boolean) false);
        boolean boolean4 = booleanList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = booleanList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = integerList6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element8 = integerList6.createElement();
        integerList6.clear();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter11.isUnitAvailable();
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter11.enableSDR((java.lang.Boolean) true);
        boolean boolean15 = integerList6.contains((java.lang.Object) true);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = integerList6.getAreaNumber();
        boolean boolean17 = booleanList1.equals((java.lang.Object) integerList6);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = integerList6.getAreaNumber();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(uShort18);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode9);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode11);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode13 = null;
        java.lang.String str14 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode13);
        boolean boolean15 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        org.ccsds.moims.mo.mal.structures.Duration duration0 = new org.ccsds.moims.mo.mal.structures.Duration();
        double double1 = duration0.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = duration0.getAreaNumber();
        opssat.simulator.main.ESASimulator eSASimulator3 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter4 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator3);
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter4.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter4.getAvailableResolutions();
        java.lang.String str7 = cameraSoftSimAdapter4.getExtraInfo();
        java.lang.String str8 = cameraSoftSimAdapter4.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter4.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration10 = cameraSoftSimAdapter4.getMinimumPeriod();
        boolean boolean11 = duration0.equals((java.lang.Object) cameraSoftSimAdapter4);
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList12 = cameraSoftSimAdapter4.getAvailableResolutions();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str7.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str8.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertNotNull(pixelResolutionList12);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) 'a');
        java.lang.Long long2 = integerList1.getShortForm();
        java.lang.Boolean[] booleanArray5 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList6 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList6, booleanArray5);
        java.lang.String str8 = booleanList6.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream9 = booleanList6.parallelStream();
        boolean boolean10 = booleanList6.isEmpty();
        byte[] byteArray11 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob12 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray11);
        int int13 = blob12.getOffset();
        boolean boolean14 = booleanList6.equals((java.lang.Object) int13);
        boolean boolean15 = integerList1.contains((java.lang.Object) int13);
        java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
        java.lang.Float[] floatArray23 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList24 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList24, floatArray23);
        boolean boolean26 = byteList18.containsAll((java.util.Collection<java.lang.Float>) floatList24);
        boolean boolean27 = floatList24.isEmpty();
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray29 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort28 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList30 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList30, uShortArray29);
        java.lang.String str32 = uShortList30.toString();
        java.lang.Object[] objArray33 = uShortList30.toArray();
        java.lang.Double[] doubleArray37 = new java.lang.Double[] { 100.0d, 100.0d, 1.0d };
        java.util.ArrayList<java.lang.Double> doubleList38 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList38, doubleArray37);
        java.lang.Float[] floatArray43 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList44 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList44, floatArray43);
        int int46 = floatList44.size();
        boolean boolean47 = doubleList38.containsAll((java.util.Collection<java.lang.Float>) floatList44);
        boolean boolean48 = uShortList30.retainAll((java.util.Collection<java.lang.Float>) floatList44);
        java.lang.Boolean[] booleanArray51 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList52 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList52, booleanArray51);
        java.lang.String str54 = booleanList52.toString();
        int int55 = booleanList52.size();
        boolean boolean56 = floatList44.contains((java.lang.Object) int55);
        boolean boolean57 = floatList24.addAll((java.util.Collection<java.lang.Float>) floatList44);
        org.ccsds.moims.mo.mal.structures.Union union59 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 10);
        java.lang.String str60 = union59.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet61 = union59.getAreaVersion();
        int int62 = floatList44.lastIndexOf((java.lang.Object) union59);
        java.util.stream.Stream<java.lang.Float> floatStream63 = floatList44.stream();
        boolean boolean64 = integerList1.retainAll((java.util.Collection<java.lang.Float>) floatList44);
        java.lang.Integer int65 = integerList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator66 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter67 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator66);
        org.ccsds.moims.mo.mal.structures.Duration duration68 = cameraSoftSimAdapter67.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList69 = cameraSoftSimAdapter67.getAvailableResolutions();
        java.lang.String str70 = cameraSoftSimAdapter67.getExtraInfo();
        java.lang.String str71 = cameraSoftSimAdapter67.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList72 = cameraSoftSimAdapter67.getAvailableResolutions();
        boolean boolean73 = integerList1.equals((java.lang.Object) pixelResolutionList72);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265077L + "'", long2.equals(281475010265077L));
        org.junit.Assert.assertNotNull(booleanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[true, true]" + "'", str8.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(floatArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(uShortArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "[1]" + "'", str32.equals("[1]"));
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(floatArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(booleanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
        org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[true, true]" + "'", str54.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + str60 + "' != '" + "10" + "'", str60.equals("10"));
        org.junit.Assert.assertNotNull(uOctet61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(floatStream63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-11) + "'", int65.equals((-11)));
        org.junit.Assert.assertNotNull(duration68);
        org.junit.Assert.assertNotNull(pixelResolutionList69);
        org.junit.Assert.assertTrue("'" + str70 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str70.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str71 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str71.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        org.ccsds.moims.mo.mal.structures.URIList uRIList0 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uRIList0.getServiceNumber();
        java.lang.Integer int2 = uRIList0.getTypeShortForm();
        uRIList0.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRIList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (short) 0);
        java.util.stream.Stream<java.lang.Byte> byteStream8 = octetList7.stream();
        boolean boolean9 = uRIList0.equals((java.lang.Object) byteStream8);
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator10);
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList13 = cameraSoftSimAdapter11.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList15 = cameraSoftSimAdapter11.getAvailableResolutions();
        boolean boolean16 = cameraSoftSimAdapter11.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter11.getMinimumPeriod();
        java.lang.Long long18 = duration17.getShortForm();
        boolean boolean19 = uRIList0.remove((java.lang.Object) duration17);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = uRIList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList22 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        java.lang.Integer int23 = shortList22.getTypeShortForm();
        java.lang.String[] strArray28 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        java.util.Iterator<java.lang.String> strItor31 = strList29.iterator();
        java.lang.String str33 = strList29.remove((int) (byte) 0);
        java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
        java.lang.Float[] floatArray41 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList42 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList42, floatArray41);
        boolean boolean44 = byteList36.containsAll((java.util.Collection<java.lang.Float>) floatList42);
        java.lang.Float[] floatArray48 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList49 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList49, floatArray48);
        int int51 = floatList49.size();
        boolean boolean52 = floatList42.containsAll((java.util.Collection<java.lang.Float>) floatList49);
        boolean boolean53 = strList29.containsAll((java.util.Collection<java.lang.Float>) floatList42);
        java.lang.Short[] shortArray57 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList58 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList58, shortArray57);
        java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
        java.lang.Float[] floatArray67 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList68 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList68, floatArray67);
        boolean boolean70 = byteList62.containsAll((java.util.Collection<java.lang.Float>) floatList68);
        boolean boolean71 = shortList58.containsAll((java.util.Collection<java.lang.Float>) floatList68);
        boolean boolean72 = floatList42.retainAll((java.util.Collection<java.lang.Float>) floatList68);
        floatList68.clear();
        boolean boolean74 = shortList22.retainAll((java.util.Collection<java.lang.Float>) floatList68);
        java.util.Spliterator<java.lang.Short> shortSpliterator75 = shortList22.spliterator();
        java.lang.Long long76 = shortList22.getShortForm();
        shortList22.clear();
        org.ccsds.moims.mo.mal.structures.Element element78 = shortList22.createElement();
        int int79 = uRIList0.lastIndexOf((java.lang.Object) shortList22);
        try {
            java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor81 = uRIList0.listIterator((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(byteStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(pixelResolutionList13);
        org.junit.Assert.assertNotNull(duration14);
        org.junit.Assert.assertNotNull(pixelResolutionList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281474993487875L + "'", long18.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertNotNull(uOctet20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-9) + "'", int23.equals((-9)));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertNotNull(strItor31);
        org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[true, true]" + "'", str33.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNotNull(floatArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
        org.junit.Assert.assertNotNull(floatArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertNotNull(shortArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertNotNull(shortSpliterator75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 281475010265079L + "'", long76.equals(281475010265079L));
        org.junit.Assert.assertNotNull(element78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str8 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str8.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
        java.lang.Long long1 = uShortList0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uShortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uShortList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRIList4.getServiceNumber();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        uRIList4.ensureCapacity(18);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = uRIList4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.OctetList octetList11 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (short) 0);
        java.util.stream.Stream<java.lang.Byte> byteStream12 = octetList11.stream();
        boolean boolean13 = uRIList4.equals((java.lang.Object) byteStream12);
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator14);
        org.ccsds.moims.mo.mal.structures.Duration duration16 = cameraSoftSimAdapter15.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList17 = cameraSoftSimAdapter15.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration18 = cameraSoftSimAdapter15.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList19 = cameraSoftSimAdapter15.getAvailableResolutions();
        boolean boolean20 = cameraSoftSimAdapter15.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration21 = cameraSoftSimAdapter15.getMinimumPeriod();
        java.lang.Long long22 = duration21.getShortForm();
        boolean boolean23 = uRIList4.remove((java.lang.Object) duration21);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = uRIList4.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.ShortList shortList26 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        java.lang.Integer int27 = shortList26.getTypeShortForm();
        java.lang.String[] strArray32 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        java.util.Iterator<java.lang.String> strItor35 = strList33.iterator();
        java.lang.String str37 = strList33.remove((int) (byte) 0);
        java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
        java.lang.Float[] floatArray45 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList46 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList46, floatArray45);
        boolean boolean48 = byteList40.containsAll((java.util.Collection<java.lang.Float>) floatList46);
        java.lang.Float[] floatArray52 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList53 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList53, floatArray52);
        int int55 = floatList53.size();
        boolean boolean56 = floatList46.containsAll((java.util.Collection<java.lang.Float>) floatList53);
        boolean boolean57 = strList33.containsAll((java.util.Collection<java.lang.Float>) floatList46);
        java.lang.Short[] shortArray61 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList62 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList62, shortArray61);
        java.lang.Byte[] byteArray65 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList66 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList66, byteArray65);
        java.lang.Float[] floatArray71 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList72 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList72, floatArray71);
        boolean boolean74 = byteList66.containsAll((java.util.Collection<java.lang.Float>) floatList72);
        boolean boolean75 = shortList62.containsAll((java.util.Collection<java.lang.Float>) floatList72);
        boolean boolean76 = floatList46.retainAll((java.util.Collection<java.lang.Float>) floatList72);
        floatList72.clear();
        boolean boolean78 = shortList26.retainAll((java.util.Collection<java.lang.Float>) floatList72);
        java.util.Spliterator<java.lang.Short> shortSpliterator79 = shortList26.spliterator();
        java.lang.Long long80 = shortList26.getShortForm();
        shortList26.clear();
        org.ccsds.moims.mo.mal.structures.Element element82 = shortList26.createElement();
        int int83 = uRIList4.lastIndexOf((java.lang.Object) shortList26);
        shortList26.clear();
        boolean boolean85 = uShortList0.equals((java.lang.Object) shortList26);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281475010265078L + "'", long1.equals(281475010265078L));
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(uOctet9);
        org.junit.Assert.assertNotNull(byteStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertNotNull(pixelResolutionList17);
        org.junit.Assert.assertNotNull(duration18);
        org.junit.Assert.assertNotNull(pixelResolutionList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(duration21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 281474993487875L + "'", long22.equals(281474993487875L));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-9) + "'", int27.equals((-9)));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(strItor35);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[true, true]" + "'", str37.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertNotNull(floatArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertNotNull(floatArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(shortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertNotNull(floatArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertNotNull(shortSpliterator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 281475010265079L + "'", long80.equals(281475010265079L));
        org.junit.Assert.assertNotNull(element82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int10 = duration9.getTypeShortForm();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10.equals(3));
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean2 = octetList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList4 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        integerList4.trimToSize();
        java.lang.String str6 = integerList4.toString();
        int int7 = octetList1.indexOf((java.lang.Object) str6);
        java.lang.String[] strArray12 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        java.util.Iterator<java.lang.String> strItor15 = strList13.iterator();
        java.lang.String str17 = strList13.remove((int) (byte) 0);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        java.lang.Float[] floatArray32 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList33 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList33, floatArray32);
        int int35 = floatList33.size();
        boolean boolean36 = floatList26.containsAll((java.util.Collection<java.lang.Float>) floatList33);
        boolean boolean37 = strList13.removeAll((java.util.Collection<java.lang.Float>) floatList33);
        boolean boolean38 = octetList1.retainAll((java.util.Collection<java.lang.Float>) floatList33);
        java.lang.String str39 = octetList1.toString();
        org.ccsds.moims.mo.mal.structures.ShortList shortList41 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = shortList41.getServiceNumber();
        java.lang.Integer int43 = shortList41.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.Element element44 = shortList41.createElement();
        java.lang.Long long45 = shortList41.getShortForm();
        opssat.simulator.main.ESASimulator eSASimulator46 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter47 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator46);
        boolean boolean48 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean49 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean50 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean51 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator52 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter53 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator52);
        boolean boolean54 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        boolean boolean55 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        boolean boolean56 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        boolean boolean57 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        boolean boolean58 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray59 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter47, opticalDataReceiverSoftSimAdapter53 };
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray60 = shortList41.toArray(opticalDataReceiverAdapterInterfaceArray59);
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray61 = octetList1.toArray(opticalDataReceiverAdapterInterfaceArray60);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNotNull(uOctet3);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "[]" + "'", str6.equals("[]"));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(strItor15);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "[true, true]" + "'", str17.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertNotNull(floatArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[]" + "'", str39.equals("[]"));
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-9) + "'", int43.equals((-9)));
        org.junit.Assert.assertNotNull(element44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 281475010265079L + "'", long45.equals(281475010265079L));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray59);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray60);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray61);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.lang.String str11 = cameraSoftSimAdapter5.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList12 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str11.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList12);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode37 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        boolean boolean38 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNull(attitudeMode36);
        org.junit.Assert.assertNull(attitudeMode37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        java.lang.String str7 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(attitudeMode8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        java.lang.String str6 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean8 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration4);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode2);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode4 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        java.lang.String str6 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode7);
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode10);
        org.junit.Assert.assertNull(attitudeMode4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList3 = new org.ccsds.moims.mo.mal.structures.IntegerList(3);
        int int4 = stringList1.lastIndexOf((java.lang.Object) 3);
        org.ccsds.moims.mo.mal.structures.StringList stringList6 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        java.lang.Long[] longArray10 = new java.lang.Long[] { (-1L), 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList11 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList11, longArray10);
        java.util.ListIterator<java.lang.Long> longItor14 = longList11.listIterator(3);
        int int15 = stringList6.lastIndexOf((java.lang.Object) longList11);
        java.lang.Boolean[] booleanArray18 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList19 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList19, booleanArray18);
        java.lang.String str21 = booleanList19.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream22 = booleanList19.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList24 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean25 = booleanList19.remove((java.lang.Object) stringList24);
        java.lang.Integer int26 = stringList24.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = stringList24.getAreaNumber();
        int int28 = longList11.lastIndexOf((java.lang.Object) uShort27);
        int int29 = stringList1.indexOf((java.lang.Object) longList11);
        java.lang.Object obj30 = null;
        boolean boolean31 = stringList1.contains(obj30);
        java.util.ListIterator<java.lang.String> strItor32 = stringList1.listIterator();
        org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean35 = octetList34.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet36 = octetList34.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream37 = octetList34.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort38 = octetList34.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.LongList longList40 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        int int41 = octetList34.lastIndexOf((java.lang.Object) longList40);
        opssat.simulator.main.ESASimulator eSASimulator42 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter43 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator42);
        boolean boolean44 = gPSSoftSimAdapter43.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator45 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter46 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator45);
        boolean boolean47 = gPSSoftSimAdapter46.isUnitAvailable();
        boolean boolean48 = gPSSoftSimAdapter46.isUnitAvailable();
        boolean boolean49 = gPSSoftSimAdapter46.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator50 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter51 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator50);
        boolean boolean52 = gPSSoftSimAdapter51.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator53 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter54 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator53);
        opssat.simulator.main.ESASimulator eSASimulator55 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter56 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator55);
        boolean boolean57 = gPSSoftSimAdapter56.isUnitAvailable();
        boolean boolean58 = gPSSoftSimAdapter56.isUnitAvailable();
        boolean boolean59 = gPSSoftSimAdapter56.isUnitAvailable();
        boolean boolean60 = gPSSoftSimAdapter56.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray61 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter43, gPSSoftSimAdapter46, gPSSoftSimAdapter51, gPSSoftSimAdapter54, gPSSoftSimAdapter56 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray62 = longList40.toArray(gPSNMEAonlyAdapterArray61);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray63 = stringList1.toArray((esa.mo.platform.impl.provider.gen.GPSAdapterInterface[]) gPSNMEAonlyAdapterArray61);
        org.ccsds.moims.mo.mal.structures.Element element64 = stringList1.createElement();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(longArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(longItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNotNull(booleanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[true, true]" + "'", str21.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-15) + "'", int26.equals((-15)));
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(strItor32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(uOctet36);
        org.junit.Assert.assertNotNull(byteStream37);
        org.junit.Assert.assertNotNull(uShort38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray61);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray62);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray63);
        org.junit.Assert.assertNotNull(element64);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = duration52.getAreaNumber();
        java.math.BigInteger bigInteger55 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong56 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger55);
        boolean boolean57 = duration52.equals((java.lang.Object) bigInteger55);
        java.lang.String str58 = duration52.toString();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet59 = duration52.getAreaVersion();
        java.lang.Integer int60 = duration52.getTypeShortForm();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "10.0" + "'", str58.equals("10.0"));
        org.junit.Assert.assertNotNull(uOctet59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60.equals(3));
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime1.getAreaNumber();
        java.lang.Long long4 = fineTime1.getShortForm();
        long long5 = fineTime1.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray7 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort6 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList8 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList8, uShortArray7);
        java.lang.String str10 = uShortList8.toString();
        boolean boolean12 = uShortList8.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList14 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean15 = uShortList8.remove((java.lang.Object) stringList14);
        uShortList8.ensureCapacity(13);
        org.ccsds.moims.mo.mal.structures.Duration duration18 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str19 = duration18.toString();
        double double20 = duration18.getValue();
        boolean boolean21 = uShortList8.contains((java.lang.Object) duration18);
        java.lang.Boolean[] booleanArray24 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList25 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList25, booleanArray24);
        java.lang.String str27 = booleanList25.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream28 = booleanList25.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean31 = booleanList25.remove((java.lang.Object) stringList30);
        java.util.stream.Stream<java.lang.Boolean> booleanStream32 = booleanList25.parallelStream();
        java.lang.Boolean[] booleanArray35 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList36 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList36, booleanArray35);
        java.lang.String str38 = booleanList36.toString();
        java.util.stream.Stream<java.lang.Boolean> booleanStream39 = booleanList36.parallelStream();
        org.ccsds.moims.mo.mal.structures.StringList stringList41 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean42 = booleanList36.remove((java.lang.Object) stringList41);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        int int49 = floatList47.size();
        boolean boolean50 = booleanList36.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean51 = booleanList25.removeAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean52 = uShortList8.retainAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Integer[] intArray63 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
        int int66 = intList64.size();
        boolean boolean67 = uShortList8.remove((java.lang.Object) int66);
        java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream68 = uShortList8.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator69 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter70 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator69);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode71 = null;
        autonomousADCSSoftSimAdapter70.setDesiredAttitude(attitudeMode71);
        boolean boolean73 = autonomousADCSSoftSimAdapter70.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator74 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter75 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator74);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode76 = null;
        autonomousADCSSoftSimAdapter75.setDesiredAttitude(attitudeMode76);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode78 = autonomousADCSSoftSimAdapter75.getActiveAttitudeMode();
        opssat.simulator.main.ESASimulator eSASimulator79 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter80 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator79);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode81 = null;
        autonomousADCSSoftSimAdapter80.setDesiredAttitude(attitudeMode81);
        opssat.simulator.main.ESASimulator eSASimulator83 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter84 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator83);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode85 = null;
        autonomousADCSSoftSimAdapter84.setDesiredAttitude(attitudeMode85);
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray87 = new esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] { autonomousADCSSoftSimAdapter70, autonomousADCSSoftSimAdapter75, autonomousADCSSoftSimAdapter80, autonomousADCSSoftSimAdapter84 };
        esa.mo.platform.impl.provider.gen.AutonomousADCSAdapterInterface[] autonomousADCSAdapterInterfaceArray88 = uShortList8.toArray(autonomousADCSAdapterInterfaceArray87);
        boolean boolean89 = fineTime1.equals((java.lang.Object) autonomousADCSAdapterInterfaceArray88);
        org.ccsds.moims.mo.mal.structures.UShort uShort90 = fineTime1.getServiceNumber();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281474993487889L + "'", long4.equals(281474993487889L));
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487874L + "'", long5 == 281474993487874L);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertNotNull(uShortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "[1]" + "'", str10.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "0.0" + "'", str19.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(booleanArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
        org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[true, true]" + "'", str27.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
        org.junit.Assert.assertNotNull(booleanStream32);
        org.junit.Assert.assertNotNull(booleanArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(booleanStream39);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertNotNull(uShortStream68);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
        org.junit.Assert.assertNull(attitudeMode78);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray87);
        org.junit.Assert.assertNotNull(autonomousADCSAdapterInterfaceArray88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
        org.junit.Assert.assertNotNull(uShort90);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier("");
        java.lang.Object obj2 = null;
        boolean boolean3 = identifier1.equals(obj2);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = identifier1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.StringList stringList6 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList8 = new org.ccsds.moims.mo.mal.structures.IntegerList(3);
        int int9 = stringList6.lastIndexOf((java.lang.Object) 3);
        java.util.Iterator<java.lang.String> strItor10 = stringList6.iterator();
        java.util.stream.Stream<java.lang.String> strStream11 = stringList6.parallelStream();
        boolean boolean12 = identifier1.equals((java.lang.Object) stringList6);
        java.util.ListIterator<java.lang.String> strItor13 = stringList6.listIterator();
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator14);
        org.ccsds.moims.mo.mal.structures.Duration duration16 = cameraSoftSimAdapter15.getMinimumPeriod();
        java.lang.String str17 = cameraSoftSimAdapter15.getExtraInfo();
        boolean boolean18 = cameraSoftSimAdapter15.isUnitAvailable();
        boolean boolean19 = cameraSoftSimAdapter15.isUnitAvailable();
        boolean boolean20 = cameraSoftSimAdapter15.isUnitAvailable();
        boolean boolean21 = stringList6.equals((java.lang.Object) cameraSoftSimAdapter15);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertNotNull(uOctet4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(strItor10);
        org.junit.Assert.assertNotNull(strStream11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(strItor13);
        org.junit.Assert.assertNotNull(duration16);
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str17.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        org.ccsds.moims.mo.mal.structures.UShort uShort54 = duration52.getAreaNumber();
        java.math.BigInteger bigInteger55 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
        org.ccsds.moims.mo.mal.structures.ULong uLong56 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger55);
        boolean boolean57 = duration52.equals((java.lang.Object) bigInteger55);
        java.lang.String str58 = duration52.toString();
        java.lang.Long long59 = duration52.getShortForm();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(uShort54);
        org.junit.Assert.assertNotNull(bigInteger55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + str58 + "' != '" + "10.0" + "'", str58.equals("10.0"));
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 281474993487875L + "'", long59.equals(281474993487875L));
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime0 = new org.ccsds.moims.mo.mal.structures.FineTime();
        java.lang.Long long1 = fineTime0.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime0.getAreaNumber();
        java.lang.Integer int3 = fineTime0.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort4 = fineTime0.getAreaNumber();
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator5);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter6.getMinimumPeriod();
        java.lang.String str8 = cameraSoftSimAdapter6.getExtraInfo();
        boolean boolean9 = cameraSoftSimAdapter6.isUnitAvailable();
        boolean boolean10 = cameraSoftSimAdapter6.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList11 = cameraSoftSimAdapter6.getAvailableResolutions();
        boolean boolean12 = fineTime0.equals((java.lang.Object) pixelResolutionList11);
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = fineTime0.getAreaNumber();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487889L + "'", long1.equals(281474993487889L));
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 17 + "'", int3.equals(17));
        org.junit.Assert.assertNotNull(uShort4);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str8.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(pixelResolutionList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uShort13);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode9 = null;
        java.lang.String str10 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode9);
        boolean boolean11 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode12 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode12);
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration((double) 281475010265086L);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator2);
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter3.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter3.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter3.getMinimumPeriod();
        boolean boolean7 = cameraSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList8 = cameraSoftSimAdapter3.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter3.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Element element10 = duration9.createElement();
        boolean boolean11 = duration1.equals((java.lang.Object) element10);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(pixelResolutionList8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(element10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.lang.Object obj36 = doubleList10.clone();
        java.util.stream.Stream<java.lang.Double> doubleStream37 = doubleList10.stream();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime39 = new org.ccsds.moims.mo.mal.structures.FineTime((long) 'a');
        java.lang.String str40 = fineTime39.toString();
        org.ccsds.moims.mo.mal.structures.Element element41 = fineTime39.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = fineTime39.getAreaNumber();
        java.lang.Long long43 = fineTime39.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort44 = fineTime39.getAreaNumber();
        java.lang.String str45 = fineTime39.toString();
        boolean boolean46 = doubleList10.contains((java.lang.Object) str45);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(obj36);
        org.junit.Assert.assertNotNull(doubleStream37);
        org.junit.Assert.assertTrue("'" + str40 + "' != '" + "97" + "'", str40.equals("97"));
        org.junit.Assert.assertNotNull(element41);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281474993487889L + "'", long43.equals(281474993487889L));
        org.junit.Assert.assertNotNull(uShort44);
        org.junit.Assert.assertTrue("'" + str45 + "' != '" + "97" + "'", str45.equals("97"));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList4 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str5 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean6 = cameraSoftSimAdapter1.isUnitAvailable();
        java.lang.String str7 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(pixelResolutionList4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str5.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str7.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        java.lang.Byte[] byteArray1 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList2 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList2, byteArray1);
        java.lang.Float[] floatArray7 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
        boolean boolean10 = byteList2.containsAll((java.util.Collection<java.lang.Float>) floatList8);
        int int11 = byteList2.size();
        java.util.stream.Stream<java.lang.Byte> byteStream12 = byteList2.parallelStream();
        boolean boolean14 = byteList2.add((java.lang.Byte) (byte) 0);
        java.lang.Object[] objArray15 = byteList2.toArray();
        java.util.stream.Stream<java.lang.Byte> byteStream16 = byteList2.stream();
        java.util.ListIterator<java.lang.Byte> byteItor18 = byteList2.listIterator(2);
        boolean boolean19 = byteList2.isEmpty();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime20 = new org.ccsds.moims.mo.mal.structures.FineTime();
        long long21 = fineTime20.getValue();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet22 = fineTime20.getAreaVersion();
        java.lang.Integer[] intArray33 = new java.lang.Integer[] { 16, 16, (-18), (-18), (-1), 1, 0, 2, 0, 0 };
        java.util.ArrayList<java.lang.Integer> intList34 = new java.util.ArrayList<java.lang.Integer>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.Integer>) intList34, intArray33);
        int int36 = intList34.size();
        java.util.Spliterator<java.lang.Integer> intSpliterator37 = intList34.spliterator();
        org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList(10);
        boolean boolean40 = intList34.contains((java.lang.Object) octetList39);
        java.lang.Integer int41 = octetList39.getTypeShortForm();
        java.util.Iterator<java.lang.Byte> byteItor42 = octetList39.iterator();
        org.ccsds.moims.mo.mal.structures.LongList longList44 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor45 = longList44.listIterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort46 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.Duration duration47 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str48 = duration47.toString();
        double double49 = duration47.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort50 = duration47.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union52 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = union52.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray54 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort46, uShort50, uShort53 };
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray55 = longList44.toArray(uShortArray54);
        longList44.ensureCapacity(3);
        longList44.trimToSize();
        boolean boolean59 = octetList39.equals((java.lang.Object) longList44);
        java.util.Iterator<java.lang.Byte> byteItor60 = octetList39.iterator();
        int int61 = octetList39.size();
        java.lang.Object obj62 = octetList39.clone();
        boolean boolean63 = fineTime20.equals(obj62);
        java.lang.Long long64 = fineTime20.getShortForm();
        opssat.simulator.main.ESASimulator eSASimulator65 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter66 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator65);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode67 = autonomousADCSSoftSimAdapter66.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode68 = null;
        java.lang.String str69 = autonomousADCSSoftSimAdapter66.validateAttitudeDescriptor(attitudeMode68);
        boolean boolean70 = autonomousADCSSoftSimAdapter66.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode71 = autonomousADCSSoftSimAdapter66.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode72 = null;
        java.lang.String str73 = autonomousADCSSoftSimAdapter66.validateAttitudeDescriptor(attitudeMode72);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode74 = null;
        autonomousADCSSoftSimAdapter66.setDesiredAttitude(attitudeMode74);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode76 = null;
        autonomousADCSSoftSimAdapter66.setDesiredAttitude(attitudeMode76);
        boolean boolean78 = fineTime20.equals((java.lang.Object) attitudeMode76);
        boolean boolean79 = byteList2.contains((java.lang.Object) fineTime20);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(floatArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(byteStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertNotNull(byteStream16);
        org.junit.Assert.assertNotNull(byteItor18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(uOctet22);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(intSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-7) + "'", int41.equals((-7)));
        org.junit.Assert.assertNotNull(byteItor42);
        org.junit.Assert.assertNotNull(longItor45);
        org.junit.Assert.assertNotNull(uShort46);
        org.junit.Assert.assertTrue("'" + str48 + "' != '" + "0.0" + "'", str48.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertNotNull(uShort50);
        org.junit.Assert.assertNotNull(uShort53);
        org.junit.Assert.assertNotNull(uShortArray54);
        org.junit.Assert.assertNotNull(uShortArray55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertNotNull(byteItor60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(obj62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 281474993487889L + "'", long64.equals(281474993487889L));
        org.junit.Assert.assertNull(attitudeMode67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNull(attitudeMode71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration11 = null;
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration11);
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        boolean boolean3 = booleanList1.add((java.lang.Boolean) false);
        boolean boolean4 = booleanList1.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = booleanList1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList6 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = integerList6.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element8 = integerList6.createElement();
        integerList6.clear();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter11.isUnitAvailable();
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter11.enableSDR((java.lang.Boolean) true);
        boolean boolean15 = integerList6.contains((java.lang.Object) true);
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = integerList6.getAreaNumber();
        boolean boolean17 = booleanList1.equals((java.lang.Object) integerList6);
        java.util.Spliterator<java.lang.Boolean> booleanSpliterator18 = booleanList1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(booleanSpliterator18);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = null;
        java.lang.String str7 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode6);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode8);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode10 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(attitudeMode5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(attitudeMode10);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration2 = null;
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean8 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, false };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode8 = null;
        java.lang.String str9 = autonomousADCSSoftSimAdapter6.validateAttitudeDescriptor(attitudeMode8);
        boolean boolean10 = autonomousADCSSoftSimAdapter6.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode11 = autonomousADCSSoftSimAdapter6.getActiveAttitudeMode();
        boolean boolean12 = booleanList3.contains((java.lang.Object) attitudeMode11);
        org.ccsds.moims.mo.mal.structures.LongList longList13 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = longList13.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList15 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = doubleList15.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element17 = doubleList15.createElement();
        org.ccsds.moims.mo.mal.structures.FloatList floatList19 = new org.ccsds.moims.mo.mal.structures.FloatList(9);
        java.lang.Integer int20 = floatList19.getTypeShortForm();
        boolean boolean21 = doubleList15.retainAll((java.util.Collection<java.lang.Float>) floatList19);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList22 = new org.ccsds.moims.mo.mal.structures.IntegerList();
        integerList22.trimToSize();
        java.lang.Object obj24 = integerList22.clone();
        java.lang.Object obj25 = integerList22.clone();
        boolean boolean26 = floatList19.contains((java.lang.Object) integerList22);
        byte[] byteArray27 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob28 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray27);
        int int29 = blob28.getLength();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob28.getAreaNumber();
        blob28.detach();
        blob28.detach();
        java.lang.Integer int33 = blob28.getTypeShortForm();
        boolean boolean34 = floatList19.remove((java.lang.Object) int33);
        java.lang.Object obj35 = null;
        boolean boolean36 = floatList19.equals(obj35);
        boolean boolean37 = longList13.retainAll((java.util.Collection<java.lang.Float>) floatList19);
        boolean boolean38 = booleanList3.removeAll((java.util.Collection<java.lang.Float>) floatList19);
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList40 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        java.lang.Object obj41 = null;
        int int42 = booleanList40.indexOf(obj41);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet43 = booleanList40.getAreaVersion();
        java.lang.Long long44 = booleanList40.getShortForm();
        java.lang.Integer int45 = booleanList40.getTypeShortForm();
        java.util.stream.Stream<java.lang.Boolean> booleanStream46 = booleanList40.stream();
        boolean boolean47 = booleanList3.remove((java.lang.Object) booleanList40);
        java.lang.Long long48 = booleanList40.getShortForm();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertNull(attitudeMode7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNull(attitudeMode11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(uOctet14);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertNotNull(element17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-4) + "'", int20.equals((-4)));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertNotNull(obj24);
        org.junit.Assert.assertNotNull(obj25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33.equals(1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(uOctet43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 281475010265086L + "'", long44.equals(281475010265086L));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-2) + "'", int45.equals((-2)));
        org.junit.Assert.assertNotNull(booleanStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 281475010265086L + "'", long48.equals(281475010265086L));
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration12 = null;
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration12);
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor2 = longList1.listIterator();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = org.ccsds.moims.mo.mal.structures.OctetList.SERVICE_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.Duration duration4 = new org.ccsds.moims.mo.mal.structures.Duration();
        java.lang.String str5 = duration4.toString();
        double double6 = duration4.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Union union9 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Byte) (byte) 1);
        org.ccsds.moims.mo.mal.structures.UShort uShort10 = union9.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort3, uShort7, uShort10 };
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray12 = longList1.toArray(uShortArray11);
        longList1.clear();
        org.ccsds.moims.mo.mal.structures.UShort uShort14 = longList1.getAreaNumber();
        longList1.clear();
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator16);
        boolean boolean18 = gPSSoftSimAdapter17.isUnitAvailable();
        boolean boolean19 = gPSSoftSimAdapter17.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray20 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter17 };
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator21);
        boolean boolean23 = gPSSoftSimAdapter22.isUnitAvailable();
        boolean boolean24 = gPSSoftSimAdapter22.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray25 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter22 };
        opssat.simulator.main.ESASimulator eSASimulator26 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter27 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator26);
        boolean boolean28 = gPSSoftSimAdapter27.isUnitAvailable();
        boolean boolean29 = gPSSoftSimAdapter27.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray30 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter27 };
        opssat.simulator.main.ESASimulator eSASimulator31 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter32 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator31);
        boolean boolean33 = gPSSoftSimAdapter32.isUnitAvailable();
        boolean boolean34 = gPSSoftSimAdapter32.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray35 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter32 };
        opssat.simulator.main.ESASimulator eSASimulator36 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter37 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator36);
        boolean boolean38 = gPSSoftSimAdapter37.isUnitAvailable();
        boolean boolean39 = gPSSoftSimAdapter37.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray40 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter37 };
        opssat.simulator.main.ESASimulator eSASimulator41 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter42 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator41);
        boolean boolean43 = gPSSoftSimAdapter42.isUnitAvailable();
        boolean boolean44 = gPSSoftSimAdapter42.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray45 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter42 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] gPSNMEAonlyAdapterArray46 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] { gPSNMEAonlyAdapterArray20, gPSNMEAonlyAdapterArray25, gPSNMEAonlyAdapterArray30, gPSNMEAonlyAdapterArray35, gPSNMEAonlyAdapterArray40, gPSNMEAonlyAdapterArray45 };
        opssat.simulator.main.ESASimulator eSASimulator47 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter48 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator47);
        boolean boolean49 = gPSSoftSimAdapter48.isUnitAvailable();
        boolean boolean50 = gPSSoftSimAdapter48.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray51 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter48 };
        opssat.simulator.main.ESASimulator eSASimulator52 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter53 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator52);
        boolean boolean54 = gPSSoftSimAdapter53.isUnitAvailable();
        boolean boolean55 = gPSSoftSimAdapter53.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray56 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter53 };
        opssat.simulator.main.ESASimulator eSASimulator57 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter58 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator57);
        boolean boolean59 = gPSSoftSimAdapter58.isUnitAvailable();
        boolean boolean60 = gPSSoftSimAdapter58.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray61 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter58 };
        opssat.simulator.main.ESASimulator eSASimulator62 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter63 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator62);
        boolean boolean64 = gPSSoftSimAdapter63.isUnitAvailable();
        boolean boolean65 = gPSSoftSimAdapter63.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray66 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter63 };
        opssat.simulator.main.ESASimulator eSASimulator67 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter68 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator67);
        boolean boolean69 = gPSSoftSimAdapter68.isUnitAvailable();
        boolean boolean70 = gPSSoftSimAdapter68.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray71 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter68 };
        opssat.simulator.main.ESASimulator eSASimulator72 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter73 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator72);
        boolean boolean74 = gPSSoftSimAdapter73.isUnitAvailable();
        boolean boolean75 = gPSSoftSimAdapter73.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] gPSNMEAonlyAdapterArray76 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[] { gPSSoftSimAdapter73 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] gPSNMEAonlyAdapterArray77 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][] { gPSNMEAonlyAdapterArray51, gPSNMEAonlyAdapterArray56, gPSNMEAonlyAdapterArray61, gPSNMEAonlyAdapterArray66, gPSNMEAonlyAdapterArray71, gPSNMEAonlyAdapterArray76 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][][] gPSNMEAonlyAdapterArray78 = new esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][][] { gPSNMEAonlyAdapterArray46, gPSNMEAonlyAdapterArray77 };
        esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter[][][] gPSNMEAonlyAdapterArray79 = longList1.toArray(gPSNMEAonlyAdapterArray78);
        org.junit.Assert.assertNotNull(longItor2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "0.0" + "'", str5.equals("0.0"));
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNotNull(uShort7);
        org.junit.Assert.assertNotNull(uShort10);
        org.junit.Assert.assertNotNull(uShortArray11);
        org.junit.Assert.assertNotNull(uShortArray12);
        org.junit.Assert.assertNotNull(uShort14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray45);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray56);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray76);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray77);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray78);
        org.junit.Assert.assertNotNull(gPSNMEAonlyAdapterArray79);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration10 = null;
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration10);
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
        java.lang.Float[] floatArray40 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList41 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList41, floatArray40);
        boolean boolean43 = byteList35.containsAll((java.util.Collection<java.lang.Float>) floatList41);
        boolean boolean44 = doubleList10.retainAll((java.util.Collection<java.lang.Float>) floatList41);
        int int45 = doubleList10.size();
        boolean boolean47 = doubleList10.add((java.lang.Double) 0.0d);
        java.util.stream.Stream<java.lang.Double> doubleStream48 = doubleList10.parallelStream();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.mal.structures.Duration duration51 = cameraSoftSimAdapter50.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration52 = cameraSoftSimAdapter50.getMinimumPeriod();
        int int53 = doubleList10.lastIndexOf((java.lang.Object) duration52);
        java.lang.Object obj54 = doubleList10.clone();
        java.lang.String str55 = doubleList10.toString();
        java.lang.Object obj56 = doubleList10.clone();
        opssat.simulator.main.ESASimulator eSASimulator57 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter58 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator57);
        org.ccsds.moims.mo.mal.structures.Duration duration59 = cameraSoftSimAdapter58.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList60 = cameraSoftSimAdapter58.getAvailableResolutions();
        java.lang.String str61 = cameraSoftSimAdapter58.getExtraInfo();
        java.lang.String str62 = cameraSoftSimAdapter58.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList63 = cameraSoftSimAdapter58.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration64 = cameraSoftSimAdapter58.getMinimumPeriod();
        int int65 = doubleList10.lastIndexOf((java.lang.Object) cameraSoftSimAdapter58);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertNotNull(floatArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertNotNull(doubleStream48);
        org.junit.Assert.assertNotNull(duration51);
        org.junit.Assert.assertNotNull(duration52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(obj54);
        org.junit.Assert.assertTrue("'" + str55 + "' != '" + "[0.0]" + "'", str55.equals("[0.0]"));
        org.junit.Assert.assertNotNull(obj56);
        org.junit.Assert.assertNotNull(duration59);
        org.junit.Assert.assertNotNull(pixelResolutionList60);
        org.junit.Assert.assertTrue("'" + str61 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str61.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str62.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList0 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet1 = doubleList0.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList3 = new org.ccsds.moims.mo.mal.structures.LongList(11);
        java.util.ListIterator<java.lang.Long> longItor4 = longList3.listIterator();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = longList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = longList3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.LongList longList7 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.Element element8 = longList7.createElement();
        int int9 = longList3.lastIndexOf((java.lang.Object) longList7);
        java.lang.Object[] objArray10 = longList3.toArray();
        int int11 = doubleList0.indexOf((java.lang.Object) longList3);
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray12 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList13 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList13, uRIArray12);
        boolean boolean16 = uRIList13.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray21 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList22, doubleArray21);
        java.lang.Short[] shortArray27 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList28 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList28, shortArray27);
        java.lang.Byte[] byteArray31 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList32 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList32, byteArray31);
        java.lang.Float[] floatArray37 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList38 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList38, floatArray37);
        boolean boolean40 = byteList32.containsAll((java.util.Collection<java.lang.Float>) floatList38);
        boolean boolean41 = shortList28.containsAll((java.util.Collection<java.lang.Float>) floatList38);
        boolean boolean42 = doubleList22.contains((java.lang.Object) shortList28);
        doubleList22.trimToSize();
        int int44 = uRIList13.indexOf((java.lang.Object) doubleList22);
        opssat.simulator.main.ESASimulator eSASimulator45 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter46 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator45);
        boolean boolean47 = doubleList22.remove((java.lang.Object) autonomousADCSSoftSimAdapter46);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode48 = autonomousADCSSoftSimAdapter46.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode49 = autonomousADCSSoftSimAdapter46.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode50 = null;
        java.lang.String str51 = autonomousADCSSoftSimAdapter46.validateAttitudeDescriptor(attitudeMode50);
        boolean boolean52 = doubleList0.equals((java.lang.Object) attitudeMode50);
        try {
            java.lang.Double double54 = doubleList0.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uOctet1);
        org.junit.Assert.assertNotNull(longItor4);
        org.junit.Assert.assertNotNull(uOctet5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(uRIArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertNotNull(shortArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
        org.junit.Assert.assertNotNull(floatArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNull(attitudeMode48);
        org.junit.Assert.assertNull(attitudeMode49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        stringList1.clear();
        boolean boolean27 = stringList1.add("281474993487877");
        boolean boolean28 = stringList1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        double double3 = duration2.getValue();
        java.lang.String str4 = duration2.toString();
        org.ccsds.moims.mo.mal.structures.Element element5 = duration2.createElement();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 10.0d + "'", double3 == 10.0d);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "10.0" + "'", str4.equals("10.0"));
        org.junit.Assert.assertNotNull(element5);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration5 = null;
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration5);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(13);
        int int2 = integerList1.size();
        org.ccsds.moims.mo.mal.structures.FineTime fineTime4 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = fineTime4.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort6 = fineTime4.getAreaNumber();
        java.lang.Integer int7 = fineTime4.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator8 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter9 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator8);
        org.ccsds.moims.mo.mal.structures.Duration duration10 = cameraSoftSimAdapter9.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList11 = cameraSoftSimAdapter9.getAvailableResolutions();
        java.lang.String str12 = cameraSoftSimAdapter9.getExtraInfo();
        java.lang.String str13 = cameraSoftSimAdapter9.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList14 = cameraSoftSimAdapter9.getAvailableResolutions();
        boolean boolean15 = fineTime4.equals((java.lang.Object) cameraSoftSimAdapter9);
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList16 = cameraSoftSimAdapter9.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList17 = cameraSoftSimAdapter9.getAvailableResolutions();
        boolean boolean18 = integerList1.contains((java.lang.Object) pixelResolutionList17);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertNotNull(uShort6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 17 + "'", int7.equals(17));
        org.junit.Assert.assertNotNull(duration10);
        org.junit.Assert.assertNotNull(pixelResolutionList11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str12.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str13.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertNotNull(pixelResolutionList16);
        org.junit.Assert.assertNotNull(pixelResolutionList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) (short) 10);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = integerList1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShort2.getAreaNumber();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        boolean boolean9 = cameraSoftSimAdapter5.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList10 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList11 = cameraSoftSimAdapter5.getAvailableResolutions();
        java.lang.String str12 = cameraSoftSimAdapter5.getExtraInfo();
        boolean boolean13 = uShort2.equals((java.lang.Object) str12);
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(pixelResolutionList10);
        org.junit.Assert.assertNotNull(pixelResolutionList11);
        org.junit.Assert.assertTrue("'" + str12 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str12.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        java.lang.Long long2 = octetList1.getShortForm();
        java.lang.Object[] objArray3 = octetList1.toArray();
        java.util.stream.Stream<java.lang.Byte> byteStream4 = octetList1.parallelStream();
        int int5 = octetList1.size();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList6 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = doubleList6.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element8 = doubleList6.createElement();
        java.lang.String str9 = doubleList6.toString();
        java.lang.Long long10 = doubleList6.getShortForm();
        org.ccsds.moims.mo.mal.structures.Element element11 = doubleList6.createElement();
        int int12 = doubleList6.size();
        boolean boolean13 = octetList1.contains((java.lang.Object) doubleList6);
        org.ccsds.moims.mo.mal.structures.OctetList octetList15 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean16 = octetList15.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet17 = octetList15.getAreaVersion();
        java.util.stream.Stream<java.lang.Byte> byteStream18 = octetList15.stream();
        java.util.Spliterator<java.lang.Byte> byteSpliterator19 = octetList15.spliterator();
        java.util.stream.Stream<java.lang.Byte> byteStream20 = octetList15.parallelStream();
        octetList15.trimToSize();
        org.ccsds.moims.mo.mal.structures.URIList uRIList22 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = uRIList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort24 = uRIList22.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element25 = uRIList22.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = uRIList22.getAreaVersion();
        java.lang.Long[] longArray30 = new java.lang.Long[] { (-1L), 10L, 100L };
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31, longArray30);
        java.util.ListIterator<java.lang.Long> longItor34 = longList31.listIterator(3);
        java.lang.String str35 = longList31.toString();
        java.lang.Long long37 = longList31.get((int) (short) 0);
        boolean boolean38 = uRIList22.equals((java.lang.Object) longList31);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray40 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort39 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41, uShortArray40);
        java.lang.String str43 = uShortList41.toString();
        boolean boolean45 = uShortList41.remove((java.lang.Object) (-1));
        org.ccsds.moims.mo.mal.structures.StringList stringList47 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 1);
        boolean boolean48 = uShortList41.remove((java.lang.Object) stringList47);
        int int49 = uRIList22.indexOf((java.lang.Object) stringList47);
        boolean boolean50 = octetList15.contains((java.lang.Object) stringList47);
        java.lang.Integer int51 = octetList15.getTypeShortForm();
        boolean boolean52 = doubleList6.remove((java.lang.Object) octetList15);
        opssat.simulator.main.ESASimulator eSASimulator53 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter54 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator53);
        boolean boolean55 = softwareDefinedRadioSoftSimAdapter54.isUnitAvailable();
        boolean boolean57 = softwareDefinedRadioSoftSimAdapter54.enableSDR((java.lang.Boolean) true);
        boolean boolean58 = octetList15.remove((java.lang.Object) softwareDefinedRadioSoftSimAdapter54);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration59 = null;
        boolean boolean60 = softwareDefinedRadioSoftSimAdapter54.setConfiguration(sDRConfiguration59);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265081L + "'", long2.equals(281475010265081L));
        org.junit.Assert.assertNotNull(objArray3);
        org.junit.Assert.assertNotNull(byteStream4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(uOctet7);
        org.junit.Assert.assertNotNull(element8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281475010265083L + "'", long10.equals(281475010265083L));
        org.junit.Assert.assertNotNull(element11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(uOctet17);
        org.junit.Assert.assertNotNull(byteStream18);
        org.junit.Assert.assertNotNull(byteSpliterator19);
        org.junit.Assert.assertNotNull(byteStream20);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertNotNull(uShort24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(uOctet26);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertNotNull(longItor34);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[-1, 10, 100]" + "'", str35.equals("[-1, 10, 100]"));
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + (-1L) + "'", long37.equals((-1L)));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
        org.junit.Assert.assertNotNull(uShortArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertTrue("'" + str43 + "' != '" + "[1]" + "'", str43.equals("[1]"));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-7) + "'", int51.equals((-7)));
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = longList0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.Element element2 = longList0.createElement();
        longList0.trimToSize();
        java.lang.Byte[] byteArray5 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList6 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList6, byteArray5);
        java.lang.Float[] floatArray11 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList12 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList12, floatArray11);
        boolean boolean14 = byteList6.containsAll((java.util.Collection<java.lang.Float>) floatList12);
        java.lang.Float[] floatArray18 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList19 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList19, floatArray18);
        int int21 = floatList19.size();
        boolean boolean22 = floatList12.containsAll((java.util.Collection<java.lang.Float>) floatList19);
        int int23 = floatList12.size();
        java.util.ListIterator<java.lang.Float> floatItor24 = floatList12.listIterator();
        java.lang.Double[] doubleArray26 = new java.lang.Double[] { 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList27 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList27, doubleArray26);
        java.lang.String[] strArray33 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        java.util.Iterator<java.lang.String> strItor36 = strList34.iterator();
        java.lang.String str38 = strList34.remove((int) (byte) 0);
        java.lang.Byte[] byteArray40 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList41 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList41, byteArray40);
        java.lang.Float[] floatArray46 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList47 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList47, floatArray46);
        boolean boolean49 = byteList41.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        java.lang.Float[] floatArray53 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
        int int56 = floatList54.size();
        boolean boolean57 = floatList47.containsAll((java.util.Collection<java.lang.Float>) floatList54);
        boolean boolean58 = strList34.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        boolean boolean59 = doubleList27.containsAll((java.util.Collection<java.lang.Float>) floatList47);
        org.ccsds.moims.mo.mal.structures.UShort uShort60 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray61 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort60 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList62 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList62, uShortArray61);
        java.lang.String str64 = uShortList62.toString();
        int int65 = floatList47.lastIndexOf((java.lang.Object) str64);
        java.lang.Float[] floatArray67 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList68 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList68, floatArray67);
        boolean boolean70 = floatList47.addAll((java.util.Collection<java.lang.Float>) floatList68);
        boolean boolean71 = floatList12.containsAll((java.util.Collection<java.lang.Float>) floatList68);
        floatList12.clear();
        java.lang.Byte[] byteArray74 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList75 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList75, byteArray74);
        java.lang.Float[] floatArray80 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList81 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList81, floatArray80);
        boolean boolean83 = byteList75.containsAll((java.util.Collection<java.lang.Float>) floatList81);
        boolean boolean84 = floatList81.isEmpty();
        boolean boolean85 = floatList12.removeAll((java.util.Collection<java.lang.Float>) floatList81);
        boolean boolean86 = longList0.containsAll((java.util.Collection<java.lang.Float>) floatList81);
        opssat.simulator.main.ESASimulator eSASimulator87 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter88 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator87);
        org.ccsds.moims.mo.mal.structures.Duration duration89 = cameraSoftSimAdapter88.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList90 = cameraSoftSimAdapter88.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration91 = cameraSoftSimAdapter88.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList92 = cameraSoftSimAdapter88.getAvailableResolutions();
        boolean boolean93 = cameraSoftSimAdapter88.isUnitAvailable();
        int int94 = floatList81.lastIndexOf((java.lang.Object) boolean93);
        try {
            java.lang.Float float96 = floatList81.get(6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 6, Size: 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertNotNull(floatArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertNotNull(floatArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(floatItor24);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertNotNull(strItor36);
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[true, true]" + "'", str38.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
        org.junit.Assert.assertNotNull(floatArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertNotNull(floatArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
        org.junit.Assert.assertNotNull(uShort60);
        org.junit.Assert.assertNotNull(uShortArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertTrue("'" + str64 + "' != '" + "[1]" + "'", str64.equals("[1]"));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(floatArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
        org.junit.Assert.assertNotNull(floatArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
        org.junit.Assert.assertNotNull(duration89);
        org.junit.Assert.assertNotNull(pixelResolutionList90);
        org.junit.Assert.assertNotNull(duration91);
        org.junit.Assert.assertNotNull(pixelResolutionList92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union((java.lang.Long) 281475010265073L);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = union1.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.URIList uRIList4 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort5 = uRIList4.getAreaNumber();
        java.lang.Integer int6 = uRIList4.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator7 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter8 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator7);
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter8.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList10 = cameraSoftSimAdapter8.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter8.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList12 = cameraSoftSimAdapter8.getAvailableResolutions();
        int int13 = uRIList4.indexOf((java.lang.Object) cameraSoftSimAdapter8);
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList14 = cameraSoftSimAdapter8.getAvailableResolutions();
        java.lang.String str15 = cameraSoftSimAdapter8.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList16 = cameraSoftSimAdapter8.getAvailableResolutions();
        boolean boolean17 = union1.equals((java.lang.Object) pixelResolutionList16);
        org.junit.Assert.assertNotNull(uOctet2);
        org.junit.Assert.assertNotNull(uShort5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-18) + "'", int6.equals((-18)));
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertNotNull(pixelResolutionList10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(pixelResolutionList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(pixelResolutionList14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str15.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.UShort uShort9 = duration8.getAreaNumber();
        java.lang.String str10 = duration8.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(uShort9);
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "10.0" + "'", str10.equals("10.0"));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration4 = null;
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration4);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration13 = null;
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration13);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) true);
        boolean boolean21 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Integer int4 = duration3.getTypeShortForm();
        double double5 = duration3.getValue();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4.equals(3));
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 10.0d + "'", double5 == 10.0d);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        java.lang.String str5 = booleanList3.toString();
        int int6 = booleanList3.size();
        booleanList3.trimToSize();
        java.lang.String str8 = booleanList3.toString();
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator9);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration13 = null;
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter10.setConfiguration(sDRConfiguration13);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) true);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) false);
        int int19 = booleanList3.lastIndexOf((java.lang.Object) boolean18);
        java.util.ListIterator<java.lang.Boolean> booleanItor20 = booleanList3.listIterator();
        try {
            java.util.List<java.lang.Boolean> booleanList23 = booleanList3.subList((int) (short) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 10");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[true, true]" + "'", str5.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[true, true]" + "'", str8.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(booleanItor20);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = null;
        java.lang.String str37 = autonomousADCSSoftSimAdapter34.validateAttitudeDescriptor(attitudeMode36);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode38 = null;
        autonomousADCSSoftSimAdapter34.setDesiredAttitude(attitudeMode38);
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator0);
        boolean boolean2 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter1.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration5 = null;
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter1.setConfiguration(sDRConfiguration5);
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", !boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode3);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode5 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode5);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        boolean boolean36 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        boolean boolean37 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        java.lang.String str2 = cameraSoftSimAdapter1.getExtraInfo();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str4 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str2.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertTrue("'" + str4 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str4.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration3 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList4 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration5 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.Short[] shortArray7 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList8 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList8, shortArray7);
        org.ccsds.moims.mo.mal.structures.URI uRI11 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long12 = uRI11.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort13 = uRI11.getServiceNumber();
        int int14 = shortList8.indexOf((java.lang.Object) uRI11);
        org.ccsds.moims.mo.mal.structures.UShort uShort15 = uRI11.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uRI11.getAreaNumber();
        boolean boolean17 = duration5.equals((java.lang.Object) uShort16);
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(duration3);
        org.junit.Assert.assertNotNull(pixelResolutionList4);
        org.junit.Assert.assertNotNull(duration5);
        org.junit.Assert.assertNotNull(shortArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281474993487890L + "'", long12.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(uShort15);
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.String[] strArray8 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Iterator<java.lang.String> strItor11 = strList9.iterator();
        java.lang.String str13 = strList9.remove((int) (byte) 0);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        java.lang.Float[] floatArray21 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList22 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList22, floatArray21);
        boolean boolean24 = byteList16.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        java.lang.Float[] floatArray28 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList29 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList29, floatArray28);
        int int31 = floatList29.size();
        boolean boolean32 = floatList22.containsAll((java.util.Collection<java.lang.Float>) floatList29);
        boolean boolean33 = strList9.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        boolean boolean34 = doubleList2.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray36 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort35 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37, uShortArray36);
        java.lang.String str39 = uShortList37.toString();
        int int40 = floatList22.lastIndexOf((java.lang.Object) str39);
        java.lang.Float[] floatArray42 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList43 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList43, floatArray42);
        boolean boolean45 = floatList22.addAll((java.util.Collection<java.lang.Float>) floatList43);
        org.ccsds.moims.mo.mal.structures.FloatList floatList46 = new org.ccsds.moims.mo.mal.structures.FloatList();
        boolean boolean47 = floatList22.removeAll((java.util.Collection<java.lang.Float>) floatList46);
        org.ccsds.moims.mo.mal.structures.Element element48 = floatList46.createElement();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode51 = autonomousADCSSoftSimAdapter50.getActiveAttitudeMode();
        int int52 = floatList46.indexOf((java.lang.Object) autonomousADCSSoftSimAdapter50);
        org.ccsds.moims.mo.mal.structures.UShort uShort53 = floatList46.getAreaNumber();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[true, true]" + "'", str13.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertNotNull(uShortArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[1]" + "'", str39.equals("[1]"));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNull(attitudeMode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(uShort53);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
        java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
        java.lang.String str5 = booleanList3.toString();
        int int6 = booleanList3.size();
        booleanList3.trimToSize();
        java.lang.String str8 = booleanList3.toString();
        opssat.simulator.main.ESASimulator eSASimulator9 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter10 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator9);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter10.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration13 = null;
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter10.setConfiguration(sDRConfiguration13);
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) true);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter10.enableSDR((java.lang.Boolean) false);
        int int19 = booleanList3.lastIndexOf((java.lang.Object) boolean18);
        java.util.ListIterator<java.lang.Boolean> booleanItor20 = booleanList3.listIterator();
        java.lang.String str21 = booleanList3.toString();
        org.junit.Assert.assertNotNull(booleanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + str5 + "' != '" + "[true, true]" + "'", str5.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[true, true]" + "'", str8.equals("[true, true]"));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(booleanItor20);
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "[true, true]" + "'", str21.equals("[true, true]"));
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        java.util.Iterator<java.lang.Double> doubleItor36 = doubleList10.iterator();
        doubleList10.ensureCapacity((-13));
        java.util.Iterator<java.lang.Double> doubleItor39 = doubleList10.iterator();
        try {
            java.util.List<java.lang.Double> doubleList42 = doubleList10.subList(12, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(12) > toIndex(-5)");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNotNull(doubleItor36);
        org.junit.Assert.assertNotNull(doubleItor39);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(281474993487874L);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = fineTime1.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = fineTime1.getAreaNumber();
        java.lang.Integer int4 = fineTime1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator5 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter6 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator5);
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter6.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList8 = cameraSoftSimAdapter6.getAvailableResolutions();
        java.lang.String str9 = cameraSoftSimAdapter6.getExtraInfo();
        java.lang.String str10 = cameraSoftSimAdapter6.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList11 = cameraSoftSimAdapter6.getAvailableResolutions();
        boolean boolean12 = fineTime1.equals((java.lang.Object) cameraSoftSimAdapter6);
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList13 = cameraSoftSimAdapter6.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration14 = cameraSoftSimAdapter6.getMinimumPeriod();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 17 + "'", int4.equals(17));
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertNotNull(pixelResolutionList8);
        org.junit.Assert.assertTrue("'" + str9 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str9.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + str10 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str10.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertNotNull(pixelResolutionList13);
        org.junit.Assert.assertNotNull(duration14);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration9 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean10 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration11 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str13 = duration12.toString();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(duration9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(duration11);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "10.0" + "'", str13.equals("10.0"));
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList((int) (short) 100);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getAreaNumber();
        java.lang.Integer int3 = uRIList1.getTypeShortForm();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator4);
        org.ccsds.moims.mo.mal.structures.Duration duration6 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter5.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter5.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList9 = cameraSoftSimAdapter5.getAvailableResolutions();
        int int10 = uRIList1.indexOf((java.lang.Object) cameraSoftSimAdapter5);
        java.lang.Integer int11 = uRIList1.getTypeShortForm();
        java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor12 = uRIList1.listIterator();
        int int13 = uRIList1.size();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-18) + "'", int3.equals((-18)));
        org.junit.Assert.assertNotNull(duration6);
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertNotNull(pixelResolutionList9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-18) + "'", int11.equals((-18)));
        org.junit.Assert.assertNotNull(uRIItor12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 0, (short) 100 };
        java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
        shortList3.trimToSize();
        shortList3.trimToSize();
        opssat.simulator.main.ESASimulator eSASimulator7 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter8 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator7);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter8.isUnitAvailable();
        boolean boolean10 = softwareDefinedRadioSoftSimAdapter8.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration11 = null;
        boolean boolean12 = softwareDefinedRadioSoftSimAdapter8.setConfiguration(sDRConfiguration11);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter8.enableSDR((java.lang.Boolean) true);
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter8.isUnitAvailable();
        boolean boolean16 = shortList3.contains((java.lang.Object) boolean15);
        try {
            shortList3.add((int) 'a', (java.lang.Short) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 97, Size: 2");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(shortArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        java.lang.Double[] doubleArray1 = new java.lang.Double[] { 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList2 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList2, doubleArray1);
        java.lang.String[] strArray8 = new java.lang.String[] { "[true, true]", "[1]", "[true, true]", "hi!" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        java.util.Iterator<java.lang.String> strItor11 = strList9.iterator();
        java.lang.String str13 = strList9.remove((int) (byte) 0);
        java.lang.Byte[] byteArray15 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList16 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList16, byteArray15);
        java.lang.Float[] floatArray21 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList22 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList22, floatArray21);
        boolean boolean24 = byteList16.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        java.lang.Float[] floatArray28 = new java.lang.Float[] { (-1.0f), 10.0f, 0.0f };
        java.util.ArrayList<java.lang.Float> floatList29 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList29, floatArray28);
        int int31 = floatList29.size();
        boolean boolean32 = floatList22.containsAll((java.util.Collection<java.lang.Float>) floatList29);
        boolean boolean33 = strList9.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        boolean boolean34 = doubleList2.containsAll((java.util.Collection<java.lang.Float>) floatList22);
        org.ccsds.moims.mo.mal.structures.UShort uShort35 = org.ccsds.moims.mo.mal.structures.DoubleList.AREA_SHORT_FORM;
        org.ccsds.moims.mo.mal.structures.UShort[] uShortArray36 = new org.ccsds.moims.mo.mal.structures.UShort[] { uShort35 };
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37, uShortArray36);
        java.lang.String str39 = uShortList37.toString();
        int int40 = floatList22.lastIndexOf((java.lang.Object) str39);
        java.lang.Float[] floatArray42 = new java.lang.Float[] { 1.0f };
        java.util.ArrayList<java.lang.Float> floatList43 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList43, floatArray42);
        boolean boolean45 = floatList22.addAll((java.util.Collection<java.lang.Float>) floatList43);
        org.ccsds.moims.mo.mal.structures.FloatList floatList46 = new org.ccsds.moims.mo.mal.structures.FloatList();
        boolean boolean47 = floatList22.removeAll((java.util.Collection<java.lang.Float>) floatList46);
        org.ccsds.moims.mo.mal.structures.Element element48 = floatList46.createElement();
        opssat.simulator.main.ESASimulator eSASimulator49 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter50 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator49);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode51 = autonomousADCSSoftSimAdapter50.getActiveAttitudeMode();
        int int52 = floatList46.indexOf((java.lang.Object) autonomousADCSSoftSimAdapter50);
        boolean boolean53 = floatList46.isEmpty();
        org.junit.Assert.assertNotNull(doubleArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNotNull(strItor11);
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "[true, true]" + "'", str13.equals("[true, true]"));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(floatArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
        org.junit.Assert.assertNotNull(floatArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
        org.junit.Assert.assertNotNull(uShort35);
        org.junit.Assert.assertNotNull(uShortArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + str39 + "' != '" + "[1]" + "'", str39.equals("[1]"));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(floatArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
        org.junit.Assert.assertNotNull(element48);
        org.junit.Assert.assertNull(attitudeMode51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator2);
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter3.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList5 = cameraSoftSimAdapter3.getAvailableResolutions();
        java.lang.String str6 = cameraSoftSimAdapter3.getExtraInfo();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList7 = cameraSoftSimAdapter3.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = cameraSoftSimAdapter3.getMinimumPeriod();
        boolean boolean9 = uShortList1.contains((java.lang.Object) cameraSoftSimAdapter3);
        org.ccsds.moims.mo.mal.structures.URIList uRIList10 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort11 = uRIList10.getServiceNumber();
        java.lang.Integer int12 = uRIList10.getTypeShortForm();
        uRIList10.ensureCapacity(18);
        uRIList10.trimToSize();
        java.lang.Short[] shortArray21 = new java.lang.Short[] { (short) 1, (short) -1, (short) 10, (short) 1, (short) -1 };
        java.util.ArrayList<java.lang.Short> shortList22 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList22, shortArray21);
        int int25 = shortList22.lastIndexOf((java.lang.Object) (byte) 1);
        java.util.ListIterator<java.lang.Short> shortItor26 = shortList22.listIterator();
        java.util.stream.Stream<java.lang.Short> shortStream27 = shortList22.parallelStream();
        java.lang.Long[] longArray30 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList31 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList31, longArray30);
        longList31.ensureCapacity((int) (byte) 100);
        java.lang.String str35 = longList31.toString();
        java.util.stream.Stream<java.lang.Long> longStream36 = longList31.stream();
        java.lang.String str37 = longList31.toString();
        java.lang.String str38 = longList31.toString();
        longList31.add(0, (java.lang.Long) 10L);
        java.util.ListIterator<java.lang.Long> longItor42 = longList31.listIterator();
        org.ccsds.moims.mo.mal.structures.IntegerList integerList44 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) 'a');
        java.lang.Integer int45 = integerList44.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.URIList uRIList46 = new org.ccsds.moims.mo.mal.structures.URIList();
        org.ccsds.moims.mo.mal.structures.UShort uShort47 = uRIList46.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort48 = uRIList46.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element49 = uRIList46.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet50 = uRIList46.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.FloatList floatList52 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        java.lang.Integer int53 = floatList52.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = floatList52.getAreaVersion();
        boolean boolean55 = uRIList46.containsAll((java.util.Collection<java.lang.Float>) floatList52);
        boolean boolean56 = integerList44.containsAll((java.util.Collection<java.lang.Float>) floatList52);
        boolean boolean57 = longList31.removeAll((java.util.Collection<java.lang.Float>) floatList52);
        org.ccsds.moims.mo.mal.structures.UShort uShort58 = floatList52.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort59 = floatList52.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = floatList52.getAreaVersion();
        boolean boolean61 = shortList22.retainAll((java.util.Collection<java.lang.Float>) floatList52);
        org.ccsds.moims.mo.mal.structures.FloatList floatList63 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        byte[] byteArray64 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob65 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray64);
        int int66 = blob65.getOffset();
        boolean boolean67 = floatList63.contains((java.lang.Object) int66);
        java.lang.Long long68 = floatList63.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort69 = floatList63.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort70 = floatList63.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.FloatList floatList72 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        org.ccsds.moims.mo.mal.structures.Element element73 = floatList72.createElement();
        boolean boolean74 = floatList63.removeAll((java.util.Collection<java.lang.Float>) floatList72);
        boolean boolean75 = shortList22.retainAll((java.util.Collection<java.lang.Float>) floatList63);
        org.ccsds.moims.mo.mal.structures.Element element76 = floatList63.createElement();
        boolean boolean77 = uRIList10.retainAll((java.util.Collection<java.lang.Float>) floatList63);
        boolean boolean78 = uShortList1.removeAll((java.util.Collection<java.lang.Float>) floatList63);
        java.lang.String str79 = floatList63.toString();
        opssat.simulator.main.ESASimulator eSASimulator80 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter81 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator80);
        org.ccsds.moims.mo.mal.structures.Duration duration82 = cameraSoftSimAdapter81.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration83 = cameraSoftSimAdapter81.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList84 = cameraSoftSimAdapter81.getAvailableResolutions();
        java.lang.String str85 = cameraSoftSimAdapter81.getExtraInfo();
        boolean boolean86 = cameraSoftSimAdapter81.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration87 = cameraSoftSimAdapter81.getMinimumPeriod();
        boolean boolean88 = floatList63.contains((java.lang.Object) cameraSoftSimAdapter81);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertNotNull(pixelResolutionList5);
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str6.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertNotNull(pixelResolutionList7);
        org.junit.Assert.assertNotNull(duration8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertNotNull(uShort11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-18) + "'", int12.equals((-18)));
        org.junit.Assert.assertNotNull(shortArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(shortItor26);
        org.junit.Assert.assertNotNull(shortStream27);
        org.junit.Assert.assertNotNull(longArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "[281475010265077, 100]" + "'", str35.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longStream36);
        org.junit.Assert.assertTrue("'" + str37 + "' != '" + "[281475010265077, 100]" + "'", str37.equals("[281475010265077, 100]"));
        org.junit.Assert.assertTrue("'" + str38 + "' != '" + "[281475010265077, 100]" + "'", str38.equals("[281475010265077, 100]"));
        org.junit.Assert.assertNotNull(longItor42);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-11) + "'", int45.equals((-11)));
        org.junit.Assert.assertNotNull(uShort47);
        org.junit.Assert.assertNotNull(uShort48);
        org.junit.Assert.assertNotNull(element49);
        org.junit.Assert.assertNotNull(uOctet50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-4) + "'", int53.equals((-4)));
        org.junit.Assert.assertNotNull(uOctet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
        org.junit.Assert.assertNotNull(uShort58);
        org.junit.Assert.assertNotNull(uShort59);
        org.junit.Assert.assertNotNull(uOctet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 281475010265084L + "'", long68.equals(281475010265084L));
        org.junit.Assert.assertNotNull(uShort69);
        org.junit.Assert.assertNotNull(uShort70);
        org.junit.Assert.assertNotNull(element73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
        org.junit.Assert.assertNotNull(element76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", !boolean77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
        org.junit.Assert.assertTrue("'" + str79 + "' != '" + "[]" + "'", str79.equals("[]"));
        org.junit.Assert.assertNotNull(duration82);
        org.junit.Assert.assertNotNull(duration83);
        org.junit.Assert.assertNotNull(pixelResolutionList84);
        org.junit.Assert.assertTrue("'" + str85 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str85.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86);
        org.junit.Assert.assertNotNull(duration87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator0);
        boolean boolean2 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean3 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean4 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean6 = gPSSoftSimAdapter1.isUnitAvailable();
        boolean boolean7 = gPSSoftSimAdapter1.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.Position position8 = null; // flaky: gPSSoftSimAdapter1.getCurrentPosition();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList((int) 'a');
        org.ccsds.moims.mo.mal.structures.Element element2 = uShortList1.createElement();
        uShortList1.trimToSize();
        java.lang.Long long4 = uShortList1.getShortForm();
        boolean boolean5 = uShortList1.isEmpty();
        java.lang.Boolean[] booleanArray8 = new java.lang.Boolean[] { true, false };
        java.util.ArrayList<java.lang.Boolean> booleanList9 = new java.util.ArrayList<java.lang.Boolean>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Boolean>) booleanList9, booleanArray8);
        opssat.simulator.main.ESASimulator eSASimulator11 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter12 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator11);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode13 = autonomousADCSSoftSimAdapter12.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode14 = null;
        java.lang.String str15 = autonomousADCSSoftSimAdapter12.validateAttitudeDescriptor(attitudeMode14);
        boolean boolean16 = autonomousADCSSoftSimAdapter12.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode17 = autonomousADCSSoftSimAdapter12.getActiveAttitudeMode();
        boolean boolean18 = booleanList9.contains((java.lang.Object) attitudeMode17);
        boolean boolean20 = booleanList9.add((java.lang.Boolean) false);
        org.ccsds.moims.mo.mal.structures.FloatList floatList22 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        java.lang.Integer int23 = floatList22.getTypeShortForm();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = floatList22.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element25 = floatList22.createElement();
        byte[] byteArray26 = new byte[] {};
        org.ccsds.moims.mo.mal.structures.Blob blob27 = new org.ccsds.moims.mo.mal.structures.Blob(byteArray26);
        int int28 = blob27.getLength();
        byte[] byteArray29 = blob27.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort30 = blob27.getServiceNumber();
        int int31 = floatList22.lastIndexOf((java.lang.Object) uShort30);
        boolean boolean32 = booleanList9.retainAll((java.util.Collection<java.lang.Float>) floatList22);
        boolean boolean33 = uShortList1.remove((java.lang.Object) boolean32);
        org.junit.Assert.assertNotNull(element2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265078L + "'", long4.equals(281475010265078L));
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(booleanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
        org.junit.Assert.assertNull(attitudeMode13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNull(attitudeMode17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-4) + "'", int23.equals((-4)));
        org.junit.Assert.assertNotNull(uOctet24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertNotNull(uShort30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode3 = null;
        java.lang.String str4 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode3);
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode7 = null;
        java.lang.String str8 = autonomousADCSSoftSimAdapter1.validateAttitudeDescriptor(attitudeMode7);
        boolean boolean9 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        org.ccsds.moims.mo.mal.structures.URI[] uRIArray0 = new org.ccsds.moims.mo.mal.structures.URI[] {};
        java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList1 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList1, uRIArray0);
        boolean boolean4 = uRIList1.contains((java.lang.Object) (-18));
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 10.0d, 1.0d, 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.lang.Short[] shortArray15 = new java.lang.Short[] { (short) 0, (short) 10, (short) 1 };
        java.util.ArrayList<java.lang.Short> shortList16 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList16, shortArray15);
        java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) -1 };
        java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
        java.lang.Float[] floatArray25 = new java.lang.Float[] { (-1.0f), 10.0f, 10.0f };
        java.util.ArrayList<java.lang.Float> floatList26 = new java.util.ArrayList<java.lang.Float>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.Float>) floatList26, floatArray25);
        boolean boolean28 = byteList20.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean29 = shortList16.containsAll((java.util.Collection<java.lang.Float>) floatList26);
        boolean boolean30 = doubleList10.contains((java.lang.Object) shortList16);
        doubleList10.trimToSize();
        int int32 = uRIList1.indexOf((java.lang.Object) doubleList10);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator33);
        boolean boolean35 = doubleList10.remove((java.lang.Object) autonomousADCSSoftSimAdapter34);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode36 = autonomousADCSSoftSimAdapter34.getActiveAttitudeMode();
        boolean boolean37 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode38 = null;
        java.lang.String str39 = autonomousADCSSoftSimAdapter34.validateAttitudeDescriptor(attitudeMode38);
        boolean boolean40 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        boolean boolean41 = autonomousADCSSoftSimAdapter34.isUnitAvailable();
        org.junit.Assert.assertNotNull(uRIArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertNotNull(shortArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(floatArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", !boolean35);
        org.junit.Assert.assertNull(attitudeMode36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        java.util.Iterator<java.lang.Byte> byteItor2 = octetList1.iterator();
        java.lang.Integer int3 = octetList1.getTypeShortForm();
        java.lang.Long long4 = octetList1.getShortForm();
        int int6 = octetList1.indexOf((java.lang.Object) 281475010265078L);
        java.util.stream.Stream<java.lang.Byte> byteStream7 = octetList1.parallelStream();
        octetList1.clear();
        boolean boolean9 = octetList1.isEmpty();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator10);
        org.ccsds.moims.mo.mal.structures.Duration duration12 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.mal.structures.Duration duration13 = cameraSoftSimAdapter11.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList14 = cameraSoftSimAdapter11.getAvailableResolutions();
        java.lang.String str15 = cameraSoftSimAdapter11.getExtraInfo();
        boolean boolean16 = cameraSoftSimAdapter11.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration17 = cameraSoftSimAdapter11.getMinimumPeriod();
        java.lang.String str18 = cameraSoftSimAdapter11.getExtraInfo();
        int int19 = octetList1.lastIndexOf((java.lang.Object) str18);
        org.ccsds.moims.mo.mal.structures.OctetList octetList21 = new org.ccsds.moims.mo.mal.structures.OctetList((int) (byte) 1);
        boolean boolean22 = octetList21.isEmpty();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = octetList21.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Union union25 = new org.ccsds.moims.mo.mal.structures.Union("[]");
        boolean boolean27 = union25.equals((java.lang.Object) 1.0f);
        org.ccsds.moims.mo.mal.structures.UShort uShort28 = union25.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element29 = uShort28.createElement();
        boolean boolean30 = octetList21.remove((java.lang.Object) uShort28);
        org.ccsds.moims.mo.mal.structures.ULong uLong31 = new org.ccsds.moims.mo.mal.structures.ULong();
        java.lang.String str32 = uLong31.toString();
        java.lang.Integer int33 = uLong31.getTypeShortForm();
        java.math.BigInteger bigInteger34 = uLong31.getValue();
        org.ccsds.moims.mo.mal.structures.ULong uLong35 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger34);
        org.ccsds.moims.mo.mal.structures.ULong uLong36 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger34);
        org.ccsds.moims.mo.mal.structures.ULong uLong37 = new org.ccsds.moims.mo.mal.structures.ULong(bigInteger34);
        int int38 = octetList21.lastIndexOf((java.lang.Object) uLong37);
        boolean boolean39 = octetList1.contains((java.lang.Object) uLong37);
        org.junit.Assert.assertNotNull(byteItor2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-7) + "'", int3.equals((-7)));
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 281475010265081L + "'", long4.equals(281475010265081L));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(byteStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertNotNull(duration12);
        org.junit.Assert.assertNotNull(duration13);
        org.junit.Assert.assertNotNull(pixelResolutionList14);
        org.junit.Assert.assertTrue("'" + str15 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str15.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertNotNull(duration17);
        org.junit.Assert.assertTrue("'" + str18 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str18.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
        org.junit.Assert.assertNotNull(uOctet23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
        org.junit.Assert.assertNotNull(uShort28);
        org.junit.Assert.assertNotNull(element29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
        org.junit.Assert.assertTrue("'" + str32 + "' != '" + "0" + "'", str32.equals("0"));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 14 + "'", int33.equals(14));
        org.junit.Assert.assertNotNull(bigInteger34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList3 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration4 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        java.lang.String str7 = cameraSoftSimAdapter1.getExtraInfo();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertNotNull(pixelResolutionList3);
        org.junit.Assert.assertNotNull(duration4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str7.equals("NMF Satellite Simulator - Camera Adapter"));
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
        java.util.ListIterator<java.lang.Float> floatItor1 = floatList0.listIterator();
        org.ccsds.moims.mo.mal.structures.Identifier identifier3 = new org.ccsds.moims.mo.mal.structures.Identifier("");
        java.lang.Object obj4 = null;
        boolean boolean5 = identifier3.equals(obj4);
        org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = identifier3.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Duration duration8 = new org.ccsds.moims.mo.mal.structures.Duration((double) '4');
        java.lang.Short[] shortArray10 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList11 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList11, shortArray10);
        org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long15 = uRI14.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort16 = uRI14.getServiceNumber();
        int int17 = shortList11.indexOf((java.lang.Object) uRI14);
        org.ccsds.moims.mo.mal.structures.UShort uShort18 = uRI14.getAreaNumber();
        java.lang.String str19 = uRI14.getValue();
        boolean boolean20 = duration8.equals((java.lang.Object) str19);
        org.ccsds.moims.mo.mal.structures.UShort uShort21 = duration8.getServiceNumber();
        boolean boolean22 = identifier3.equals((java.lang.Object) duration8);
        org.ccsds.moims.mo.mal.structures.UShort uShort23 = identifier3.getAreaNumber();
        java.lang.String str24 = identifier3.getValue();
        java.lang.Integer int25 = identifier3.getTypeShortForm();
        java.lang.Long long26 = identifier3.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort27 = identifier3.getAreaNumber();
        int int28 = floatList0.lastIndexOf((java.lang.Object) uShort27);
        java.lang.Short[] shortArray30 = new java.lang.Short[] { (short) 10 };
        java.util.ArrayList<java.lang.Short> shortList31 = new java.util.ArrayList<java.lang.Short>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.Short>) shortList31, shortArray30);
        org.ccsds.moims.mo.mal.structures.URI uRI34 = new org.ccsds.moims.mo.mal.structures.URI("[, [1], [true, true], ]");
        java.lang.Long long35 = uRI34.getShortForm();
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = uRI34.getServiceNumber();
        int int37 = shortList31.indexOf((java.lang.Object) uRI34);
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList38 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet39 = doubleList38.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element40 = doubleList38.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream41 = doubleList38.stream();
        org.ccsds.moims.mo.mal.structures.UShort uShort42 = doubleList38.getServiceNumber();
        boolean boolean43 = uRI34.equals((java.lang.Object) doubleList38);
        java.lang.Long[] longArray46 = new java.lang.Long[] { 281475010265077L, 100L };
        java.util.ArrayList<java.lang.Long> longList47 = new java.util.ArrayList<java.lang.Long>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.Long>) longList47, longArray46);
        longList47.ensureCapacity((int) (byte) 100);
        java.lang.Object[] objArray51 = longList47.toArray();
        boolean boolean53 = longList47.remove((java.lang.Object) '#');
        boolean boolean54 = longList47.isEmpty();
        org.ccsds.moims.mo.mal.structures.FloatList floatList56 = new org.ccsds.moims.mo.mal.structures.FloatList((int) 'a');
        boolean boolean57 = longList47.retainAll((java.util.Collection<java.lang.Float>) floatList56);
        boolean boolean58 = doubleList38.containsAll((java.util.Collection<java.lang.Float>) floatList56);
        opssat.simulator.main.ESASimulator eSASimulator59 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter60 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator59);
        org.ccsds.moims.mo.mal.structures.Duration duration61 = cameraSoftSimAdapter60.getMinimumPeriod();
        java.lang.String str62 = cameraSoftSimAdapter60.getExtraInfo();
        boolean boolean63 = cameraSoftSimAdapter60.isUnitAvailable();
        org.ccsds.moims.mo.mal.structures.Duration duration64 = cameraSoftSimAdapter60.getMinimumPeriod();
        boolean boolean65 = doubleList38.equals((java.lang.Object) cameraSoftSimAdapter60);
        java.lang.String str66 = doubleList38.toString();
        boolean boolean67 = doubleList38.isEmpty();
        boolean boolean68 = floatList0.equals((java.lang.Object) doubleList38);
        org.junit.Assert.assertNotNull(floatItor1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
        org.junit.Assert.assertNotNull(uOctet6);
        org.junit.Assert.assertNotNull(shortArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 281474993487890L + "'", long15.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(uShort18);
        org.junit.Assert.assertTrue("'" + str19 + "' != '" + "[, [1], [true, true], ]" + "'", str19.equals("[, [1], [true, true], ]"));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", !boolean20);
        org.junit.Assert.assertNotNull(uShort21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
        org.junit.Assert.assertNotNull(uShort23);
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "" + "'", str24.equals(""));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 6 + "'", int25.equals(6));
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487878L + "'", long26.equals(281474993487878L));
        org.junit.Assert.assertNotNull(uShort27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(shortArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 281474993487890L + "'", long35.equals(281474993487890L));
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(uOctet39);
        org.junit.Assert.assertNotNull(element40);
        org.junit.Assert.assertNotNull(doubleStream41);
        org.junit.Assert.assertNotNull(uShort42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertNotNull(longArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertNotNull(objArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertNotNull(duration61);
        org.junit.Assert.assertTrue("'" + str62 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str62.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
        org.junit.Assert.assertNotNull(duration64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
        org.junit.Assert.assertTrue("'" + str66 + "' != '" + "[]" + "'", str66.equals("[]"));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        org.ccsds.moims.mo.mal.structures.UShortList uShortList1 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = uShortList1.getServiceNumber();
        java.lang.Object obj3 = null;
        int int4 = uShortList1.lastIndexOf(obj3);
        org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList(3);
        org.ccsds.moims.mo.mal.structures.Element element7 = uShortList6.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort8 = uShortList6.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.Element element9 = uShortList6.createElement();
        opssat.simulator.main.ESASimulator eSASimulator10 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter11 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator10);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator12);
        opssat.simulator.main.ESASimulator eSASimulator14 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter15 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator14);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator16);
        boolean boolean18 = gPSSoftSimAdapter17.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator19 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter20 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator19);
        boolean boolean21 = gPSSoftSimAdapter20.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray22 = new esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] { gPSSoftSimAdapter11, gPSSoftSimAdapter13, gPSSoftSimAdapter15, gPSSoftSimAdapter17, gPSSoftSimAdapter20 };
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray23 = uShortList6.toArray(gPSAdapterInterfaceArray22);
        esa.mo.platform.impl.provider.gen.GPSAdapterInterface[] gPSAdapterInterfaceArray24 = uShortList1.toArray(gPSAdapterInterfaceArray23);
        org.ccsds.moims.mo.mal.structures.Element element25 = uShortList1.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet26 = uShortList1.getAreaVersion();
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(element7);
        org.junit.Assert.assertNotNull(uShort8);
        org.junit.Assert.assertNotNull(element9);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray22);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(gPSAdapterInterfaceArray24);
        org.junit.Assert.assertNotNull(element25);
        org.junit.Assert.assertNotNull(uOctet26);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList((int) (byte) 0);
        org.ccsds.moims.mo.mal.structures.UShort uShort2 = booleanList1.getAreaNumber();
        java.lang.Object obj3 = booleanList1.clone();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter gPSSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter(eSASimulator4);
        boolean boolean6 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean7 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean8 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean9 = gPSSoftSimAdapter5.isUnitAvailable();
        boolean boolean10 = booleanList1.equals((java.lang.Object) gPSSoftSimAdapter5);
        boolean boolean11 = gPSSoftSimAdapter5.isUnitAvailable();
        try {
            org.ccsds.moims.mo.platform.gps.structures.SatelliteInfoList satelliteInfoList12 = null; // flaky: gPSSoftSimAdapter5.getSatelliteInfoList();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalAccessError; message: tried to access field esa.mo.platform.impl.provider.softsim.GPSSoftSimAdapter.randoop_classUsedFlag from class esa.mo.platform.impl.provider.gen.GPSNMEAonlyAdapter");
        } catch (java.lang.IllegalAccessError e) {
        }
        org.junit.Assert.assertNotNull(uShort2);
        org.junit.Assert.assertNotNull(obj3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        org.ccsds.moims.mo.mal.structures.UInteger uInteger0 = new org.ccsds.moims.mo.mal.structures.UInteger();
        org.ccsds.moims.mo.mal.structures.UShort uShort1 = uInteger0.getServiceNumber();
        long long2 = uInteger0.getValue();
        org.ccsds.moims.mo.mal.structures.UShort uShort3 = uInteger0.getAreaNumber();
        org.ccsds.moims.mo.mal.structures.StringList stringList4 = new org.ccsds.moims.mo.mal.structures.StringList();
        org.ccsds.moims.mo.mal.structures.ShortList shortList6 = new org.ccsds.moims.mo.mal.structures.ShortList(2);
        java.lang.Integer int7 = shortList6.getTypeShortForm();
        boolean boolean8 = stringList4.equals((java.lang.Object) shortList6);
        org.ccsds.moims.mo.mal.structures.IntegerList integerList10 = new org.ccsds.moims.mo.mal.structures.IntegerList((int) 'a');
        boolean boolean12 = integerList10.add((java.lang.Integer) (-1));
        integerList10.clear();
        org.ccsds.moims.mo.mal.structures.Element element14 = integerList10.createElement();
        org.ccsds.moims.mo.mal.structures.Element element15 = integerList10.createElement();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet16 = integerList10.getAreaVersion();
        boolean boolean17 = stringList4.contains((java.lang.Object) uOctet16);
        org.ccsds.moims.mo.mal.structures.ULong uLong18 = new org.ccsds.moims.mo.mal.structures.ULong();
        org.ccsds.moims.mo.mal.structures.Element element19 = uLong18.createElement();
        org.ccsds.moims.mo.mal.structures.UShort uShort20 = uLong18.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet21 = uLong18.getAreaVersion();
        java.lang.String str22 = uLong18.toString();
        boolean boolean23 = stringList4.remove((java.lang.Object) uLong18);
        int int24 = stringList4.size();
        boolean boolean25 = uShort3.equals((java.lang.Object) stringList4);
        opssat.simulator.main.ESASimulator eSASimulator26 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter27 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator26);
        boolean boolean28 = opticalDataReceiverSoftSimAdapter27.isUnitAvailable();
        boolean boolean29 = opticalDataReceiverSoftSimAdapter27.isUnitAvailable();
        boolean boolean30 = opticalDataReceiverSoftSimAdapter27.isUnitAvailable();
        boolean boolean31 = opticalDataReceiverSoftSimAdapter27.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator32 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter33 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator32);
        boolean boolean34 = opticalDataReceiverSoftSimAdapter33.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray35 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter27, opticalDataReceiverSoftSimAdapter33 };
        opssat.simulator.main.ESASimulator eSASimulator36 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter37 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator36);
        boolean boolean38 = opticalDataReceiverSoftSimAdapter37.isUnitAvailable();
        boolean boolean39 = opticalDataReceiverSoftSimAdapter37.isUnitAvailable();
        boolean boolean40 = opticalDataReceiverSoftSimAdapter37.isUnitAvailable();
        boolean boolean41 = opticalDataReceiverSoftSimAdapter37.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator42 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter43 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator42);
        boolean boolean44 = opticalDataReceiverSoftSimAdapter43.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray45 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter37, opticalDataReceiverSoftSimAdapter43 };
        opssat.simulator.main.ESASimulator eSASimulator46 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter47 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator46);
        boolean boolean48 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean49 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean50 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        boolean boolean51 = opticalDataReceiverSoftSimAdapter47.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator52 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter53 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator52);
        boolean boolean54 = opticalDataReceiverSoftSimAdapter53.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray55 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter47, opticalDataReceiverSoftSimAdapter53 };
        opssat.simulator.main.ESASimulator eSASimulator56 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter57 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator56);
        boolean boolean58 = opticalDataReceiverSoftSimAdapter57.isUnitAvailable();
        boolean boolean59 = opticalDataReceiverSoftSimAdapter57.isUnitAvailable();
        boolean boolean60 = opticalDataReceiverSoftSimAdapter57.isUnitAvailable();
        boolean boolean61 = opticalDataReceiverSoftSimAdapter57.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator62 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter63 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator62);
        boolean boolean64 = opticalDataReceiverSoftSimAdapter63.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray65 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter57, opticalDataReceiverSoftSimAdapter63 };
        opssat.simulator.main.ESASimulator eSASimulator66 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter67 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator66);
        boolean boolean68 = opticalDataReceiverSoftSimAdapter67.isUnitAvailable();
        boolean boolean69 = opticalDataReceiverSoftSimAdapter67.isUnitAvailable();
        boolean boolean70 = opticalDataReceiverSoftSimAdapter67.isUnitAvailable();
        boolean boolean71 = opticalDataReceiverSoftSimAdapter67.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator72 = null;
        esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter opticalDataReceiverSoftSimAdapter73 = new esa.mo.platform.impl.provider.softsim.OpticalDataReceiverSoftSimAdapter(eSASimulator72);
        boolean boolean74 = opticalDataReceiverSoftSimAdapter73.isUnitAvailable();
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] opticalDataReceiverAdapterInterfaceArray75 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[] { opticalDataReceiverSoftSimAdapter67, opticalDataReceiverSoftSimAdapter73 };
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[][] opticalDataReceiverAdapterInterfaceArray76 = new esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[][] { opticalDataReceiverAdapterInterfaceArray35, opticalDataReceiverAdapterInterfaceArray45, opticalDataReceiverAdapterInterfaceArray55, opticalDataReceiverAdapterInterfaceArray65, opticalDataReceiverAdapterInterfaceArray75 };
        esa.mo.platform.impl.provider.gen.OpticalDataReceiverAdapterInterface[][] opticalDataReceiverAdapterInterfaceArray77 = stringList4.toArray(opticalDataReceiverAdapterInterfaceArray76);
        org.junit.Assert.assertNotNull(uShort1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(uShort3);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-9) + "'", int7.equals((-9)));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
        org.junit.Assert.assertNotNull(element14);
        org.junit.Assert.assertNotNull(element15);
        org.junit.Assert.assertNotNull(uOctet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
        org.junit.Assert.assertNotNull(element19);
        org.junit.Assert.assertNotNull(uShort20);
        org.junit.Assert.assertNotNull(uOctet21);
        org.junit.Assert.assertTrue("'" + str22 + "' != '" + "0" + "'", str22.equals("0"));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray35);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray45);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray75);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray76);
        org.junit.Assert.assertNotNull(opticalDataReceiverAdapterInterfaceArray77);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter cameraSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.CameraSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.mal.structures.Duration duration2 = cameraSoftSimAdapter1.getMinimumPeriod();
        java.lang.String str3 = cameraSoftSimAdapter1.getExtraInfo();
        boolean boolean4 = cameraSoftSimAdapter1.isUnitAvailable();
        boolean boolean5 = cameraSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.camera.structures.PixelResolutionList pixelResolutionList6 = cameraSoftSimAdapter1.getAvailableResolutions();
        org.ccsds.moims.mo.mal.structures.Duration duration7 = cameraSoftSimAdapter1.getMinimumPeriod();
        boolean boolean8 = cameraSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNotNull(duration2);
        org.junit.Assert.assertTrue("'" + str3 + "' != '" + "NMF Satellite Simulator - Camera Adapter" + "'", str3.equals("NMF Satellite Simulator - Camera Adapter"));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNotNull(pixelResolutionList6);
        org.junit.Assert.assertNotNull(duration7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        opssat.simulator.main.ESASimulator eSASimulator0 = null;
        esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter autonomousADCSSoftSimAdapter1 = new esa.mo.platform.impl.provider.softsim.AutonomousADCSSoftSimAdapter(eSASimulator0);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode2 = null;
        autonomousADCSSoftSimAdapter1.setDesiredAttitude(attitudeMode2);
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode4 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean5 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.ccsds.moims.mo.platform.autonomousadcs.structures.AttitudeMode attitudeMode6 = autonomousADCSSoftSimAdapter1.getActiveAttitudeMode();
        boolean boolean7 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        boolean boolean8 = autonomousADCSSoftSimAdapter1.isUnitAvailable();
        org.junit.Assert.assertNull(attitudeMode4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertNull(attitudeMode6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (byte) 100);
        opssat.simulator.main.ESASimulator eSASimulator2 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter3 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator2);
        boolean boolean4 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        boolean boolean5 = softwareDefinedRadioSoftSimAdapter3.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration6 = null;
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter3.setConfiguration(sDRConfiguration6);
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter3.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator12 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter13 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator12);
        boolean boolean14 = softwareDefinedRadioSoftSimAdapter13.isUnitAvailable();
        boolean boolean16 = softwareDefinedRadioSoftSimAdapter13.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator17 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter18 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator17);
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        boolean boolean20 = softwareDefinedRadioSoftSimAdapter18.isUnitAvailable();
        opssat.simulator.main.ESASimulator eSASimulator21 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter22 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator21);
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray23 = new esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] { softwareDefinedRadioSoftSimAdapter3, softwareDefinedRadioSoftSimAdapter13, softwareDefinedRadioSoftSimAdapter18, softwareDefinedRadioSoftSimAdapter22 };
        esa.mo.platform.impl.provider.gen.SoftwareDefinedRadioAdapterInterface[] softwareDefinedRadioAdapterInterfaceArray24 = stringList1.toArray(softwareDefinedRadioAdapterInterfaceArray23);
        stringList1.clear();
        org.ccsds.moims.mo.mal.structures.DoubleList doubleList26 = new org.ccsds.moims.mo.mal.structures.DoubleList();
        org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = doubleList26.getAreaVersion();
        org.ccsds.moims.mo.mal.structures.Element element28 = doubleList26.createElement();
        java.util.stream.Stream<java.lang.Double> doubleStream29 = doubleList26.stream();
        doubleList26.clear();
        java.util.ListIterator<java.lang.Double> doubleItor31 = doubleList26.listIterator();
        java.lang.Long long32 = doubleList26.getShortForm();
        doubleList26.add(0, (java.lang.Double) 2.81474993487879E14d);
        org.ccsds.moims.mo.mal.structures.UShort uShort36 = doubleList26.getServiceNumber();
        org.ccsds.moims.mo.mal.structures.UShort uShort37 = doubleList26.getAreaNumber();
        boolean boolean38 = stringList1.equals((java.lang.Object) doubleList26);
        org.ccsds.moims.mo.mal.structures.UShort uShort39 = doubleList26.getServiceNumber();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray23);
        org.junit.Assert.assertNotNull(softwareDefinedRadioAdapterInterfaceArray24);
        org.junit.Assert.assertNotNull(uOctet27);
        org.junit.Assert.assertNotNull(element28);
        org.junit.Assert.assertNotNull(doubleStream29);
        org.junit.Assert.assertNotNull(doubleItor31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 281475010265083L + "'", long32.equals(281475010265083L));
        org.junit.Assert.assertNotNull(uShort36);
        org.junit.Assert.assertNotNull(uShort37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
        org.junit.Assert.assertNotNull(uShort39);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        org.ccsds.moims.mo.mal.structures.StringList stringList1 = new org.ccsds.moims.mo.mal.structures.StringList((int) (short) 10);
        stringList1.clear();
        org.ccsds.moims.mo.mal.structures.Element element3 = stringList1.createElement();
        opssat.simulator.main.ESASimulator eSASimulator4 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter5 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator4);
        boolean boolean6 = softwareDefinedRadioSoftSimAdapter5.isUnitAvailable();
        boolean boolean7 = softwareDefinedRadioSoftSimAdapter5.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration8 = null;
        boolean boolean9 = softwareDefinedRadioSoftSimAdapter5.setConfiguration(sDRConfiguration8);
        boolean boolean11 = softwareDefinedRadioSoftSimAdapter5.enableSDR((java.lang.Boolean) true);
        boolean boolean13 = softwareDefinedRadioSoftSimAdapter5.enableSDR((java.lang.Boolean) false);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration14 = null;
        boolean boolean15 = softwareDefinedRadioSoftSimAdapter5.setConfiguration(sDRConfiguration14);
        opssat.simulator.main.ESASimulator eSASimulator16 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter17 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator16);
        boolean boolean18 = softwareDefinedRadioSoftSimAdapter17.isUnitAvailable();
        boolean boolean19 = softwareDefinedRadioSoftSimAdapter17.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration20 = null;
        boolean boolean21 = softwareDefinedRadioSoftSimAdapter17.setConfiguration(sDRConfiguration20);
        boolean boolean23 = softwareDefinedRadioSoftSimAdapter17.enableSDR((java.lang.Boolean) true);
        boolean boolean25 = softwareDefinedRadioSoftSimAdapter17.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator26 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter27 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator26);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration28 = null;
        boolean boolean29 = softwareDefinedRadioSoftSimAdapter27.setConfiguration(sDRConfiguration28);
        boolean boolean30 = softwareDefinedRadioSoftSimAdapter27.isUnitAvailable();
        boolean boolean32 = softwareDefinedRadioSoftSimAdapter27.enableSDR((java.lang.Boolean) false);
        opssat.simulator.main.ESASimulator eSASimulator33 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter34 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator33);
        boolean boolean35 = softwareDefinedRadioSoftSimAdapter34.isUnitAvailable();
        boolean boolean37 = softwareDefinedRadioSoftSimAdapter34.enableSDR((java.lang.Boolean) true);
        opssat.simulator.main.ESASimulator eSASimulator38 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter39 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator38);
        boolean boolean40 = softwareDefinedRadioSoftSimAdapter39.isUnitAvailable();
        boolean boolean41 = softwareDefinedRadioSoftSimAdapter39.isUnitAvailable();
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration42 = null;
        boolean boolean43 = softwareDefinedRadioSoftSimAdapter39.setConfiguration(sDRConfiguration42);
        boolean boolean45 = softwareDefinedRadioSoftSimAdapter39.enableSDR((java.lang.Boolean) true);
        boolean boolean47 = softwareDefinedRadioSoftSimAdapter39.enableSDR((java.lang.Boolean) true);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration48 = null;
        boolean boolean49 = softwareDefinedRadioSoftSimAdapter39.setConfiguration(sDRConfiguration48);
        opssat.simulator.main.ESASimulator eSASimulator50 = null;
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter softwareDefinedRadioSoftSimAdapter51 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter(eSASimulator50);
        org.ccsds.moims.mo.platform.softwaredefinedradio.structures.SDRConfiguration sDRConfiguration52 = null;
        boolean boolean53 = softwareDefinedRadioSoftSimAdapter51.setConfiguration(sDRConfiguration52);
        boolean boolean55 = softwareDefinedRadioSoftSimAdapter51.enableSDR((java.lang.Boolean) true);
        boolean boolean57 = softwareDefinedRadioSoftSimAdapter51.enableSDR((java.lang.Boolean) true);
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray58 = new esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] { softwareDefinedRadioSoftSimAdapter5, softwareDefinedRadioSoftSimAdapter17, softwareDefinedRadioSoftSimAdapter27, softwareDefinedRadioSoftSimAdapter34, softwareDefinedRadioSoftSimAdapter39, softwareDefinedRadioSoftSimAdapter51 };
        esa.mo.platform.impl.provider.softsim.SoftwareDefinedRadioSoftSimAdapter[] softwareDefinedRadioSoftSimAdapterArray59 = stringList1.toArray(softwareDefinedRadioSoftSimAdapterArray58);
        try {
            java.util.List<java.lang.String> strList62 = stringList1.subList((int) (byte) -1, (-5));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -1");
        } catch (java.lang.IndexOutOfBoundsException e) {
        }
        org.junit.Assert.assertNotNull(element3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", !boolean43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray58);
        org.junit.Assert.assertNotNull(softwareDefinedRadioSoftSimAdapterArray59);
    }
}
