package esa.nmf.test;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

  public static boolean debug = false;

  @Test
  public void test0501() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0501");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    int int36 = simulatorHeader12.getHourStartDate();
    java.util.Date date37 = simulatorHeader12.getStartDate();
    java.util.Date date39 = simulatorHeader12.parseStringIntoDate("");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertNotNull(date37);
    org.junit.Assert.assertNull(date39);
  }

  @Test
  public void test0502() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0502");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxElevation();
    double double11 = gPSSatInViewScience8.getMinDistance();
    double double12 = gPSSatInViewScience8.getAvgElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 56.0d + "'", double10 == 56.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 9.0d + "'", double11 == 9.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 2.81474993487878E14d + "'",
        double12 == 2.81474993487878E14d);
  }

  @Test
  public void test0503() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0503");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState54 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray57 = new float[] { 28, 8 };
    simulatorSpacecraftState54.setQ(floatArray57);
    celestiaData32.setQ(floatArray57);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState63 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray66 = new float[] { 28, 8 };
    simulatorSpacecraftState63.setQ(floatArray66);
    float[] floatArray71 = new float[] { 281474993487887L, 281475010265070L, 281474993487881L };
    simulatorSpacecraftState63.setRv(floatArray71);
    double[][] doubleArray73 = null;
    simulatorSpacecraftState63.setRotation(doubleArray73);
    float[] floatArray75 = simulatorSpacecraftState63.getR();
    celestiaData32.setRv(floatArray75);
    celestiaData32.setLos("");
    java.lang.String str79 = celestiaData32.getLos();
    java.lang.String str80 = celestiaData32.getLos();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray57);
    org.junit.Assert.assertNotNull(floatArray66);
    org.junit.Assert.assertNotNull(floatArray71);
    org.junit.Assert.assertNotNull(floatArray75);
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
    org.junit.Assert.assertTrue("'" + str80 + "' != '" + "" + "'", str80.equals(""));
  }

  @Test
  public void test0504() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0504");
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date5 = simulatorData4.getCurrentTime();
    java.util.Date date6 = simulatorData4.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(17,
        date6);
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    int int12 = opssat.simulator.util.DateExtraction.getDayFromDate(date11);
    opssat.simulator.util.SimulatorData simulatorData14 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date15 = simulatorData14.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap19 = opssat.simulator.util.SimulatorData
        .computeDiff(date15, date18);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date11, date18);
    opssat.simulator.util.SimulatorHeader simulatorHeader21 = new opssat.simulator.util.SimulatorHeader(
        false, date6, date11);
    opssat.simulator.util.SimulatorData simulatorData22 = new opssat.simulator.util.SimulatorData(
        '4', date11);
    java.lang.String str23 = simulatorData22.getCurrentDay();
    java.lang.String str24 = simulatorData22.toString();
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date6);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(timeUnitMap19);
  }

  @Test
  public void test0505() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0505");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.Element element6 = doubleList1.createElement();
    java.lang.Long long7 = doubleList1.getShortForm();
    org.ccsds.moims.mo.mal.structures.Element element8 = doubleList1.createElement();
    java.lang.Float[] floatArray12 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList13 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean14 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList13, floatArray12);
    boolean boolean16 = floatList13.add((-1.0f));
    floatList13.trimToSize();
    org.ccsds.moims.mo.mal.structures.URI uRI19 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int20 = uRI19.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI22 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = uRI22.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI25 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray26 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI19, uRI22, uRI25 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList27, uRIArray26);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime29 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int30 = uRIList27.indexOf(fineTime29);
    uRIList27.ensureCapacity(40);
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
    boolean boolean34 = uRIList27.remove(uShort33);
    java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    boolean boolean47 = byteList40.retainAll(intList45);
    java.lang.Integer[] intArray50 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList51 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean52 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList51, intArray50);
    int int54 = intList51.lastIndexOf((byte) 10);
    boolean boolean55 = intList45.removeAll(intList51);
    boolean boolean56 = uRIList27.removeAll(intList45);
    boolean boolean57 = floatList13.containsAll(intList45);
    java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) 1, (byte) -1, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean63 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
    boolean boolean65 = byteList62.add((byte) 100);
    java.util.stream.Stream<java.lang.Byte> byteStream66 = byteList62.stream();
    int int67 = floatList13.indexOf(byteStream66);
    floatList13.ensureCapacity((short) -1);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState73 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double74 = simulatorSpacecraftState73.getLatitude();
    java.lang.String str75 = simulatorSpacecraftState73.getMagField();
    java.lang.String str76 = simulatorSpacecraftState73.toString();
    double[] doubleArray77 = simulatorSpacecraftState73.getSunVector();
    simulatorSpacecraftState73.setSatsInView((short) 10);
    double double80 = simulatorSpacecraftState73.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState84 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double85 = simulatorSpacecraftState84.getLatitude();
    double double86 = simulatorSpacecraftState84.getLongitude();
    float[] floatArray87 = simulatorSpacecraftState84.getQ();
    simulatorSpacecraftState73.setRv(floatArray87);
    boolean boolean89 = floatList13.contains(floatArray87);
    boolean boolean90 = doubleList1.equals(boolean89);
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(element6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265083L + "'",
        long7.equals(281475010265083L));
    org.junit.Assert.assertNotNull(element8);
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 18 + "'", int20.equals(18));
    org.junit.Assert.assertNotNull(uOctet23);
    org.junit.Assert.assertNotNull(uRIArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    org.junit.Assert.assertNotNull(byteArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertNotNull(intArray50);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
    org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
    org.junit.Assert.assertNotNull(byteArray61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertNotNull(byteStream66);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    org.junit.Assert.assertTrue("'" + double74 + "' != '" + 340.0d + "'", double74 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str75 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str75.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str76 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str76.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray77);
    org.junit.Assert.assertTrue("'" + double80 + "' != '" + 340.0d + "'", double80 == 340.0d);
    org.junit.Assert.assertTrue("'" + double85 + "' != '" + 340.0d + "'", double85 == 340.0d);
    org.junit.Assert.assertTrue("'" + double86 + "' != '" + (-1.0d) + "'", double86 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray87);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
  }

  @Test
  public void test0506() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0506");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    java.lang.Integer int6 = octetList0.getTypeShortForm();
    java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
    int int13 = booleanList10.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor14 = booleanList10.iterator();
    boolean boolean16 = booleanList10.remove(10.0f);
    int int17 = octetList0.indexOf(booleanList10);
    java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList10.parallelStream();
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 21, 6, 52, 100, 12, 44, 66, 18, 28,
        (-4), 0, 70, 4, 0, (-9), 7, 0, (-11), 60, 18, 19, 9, (-15), 14 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    intList44.ensureCapacity(4);
    boolean boolean48 = booleanList10.retainAll(intList44);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-7) + "'", int6.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    org.junit.Assert.assertNotNull(booleanItor14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(booleanStream18);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
  }

  @Test
  public void test0507() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0507");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    celestiaData32.setDate(":");
    celestiaData32.setAos("030949.909");
    celestiaData32.setDate("$DEFAULT");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
  }

  @Test
  public void test0508() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0508");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    boolean boolean31 = simulatorHeader12.isAutoStartTime();
    simulatorHeader12.setUpdateInternet(false);
    simulatorHeader12.setOrekitTLE2("hi!");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
  }

  @Test
  public void test0509() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0509");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    try {
      byte[] byteArray6 = pOpticalReceiver2.runRawCommand(20, byteArray5);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray5);
  }

  @Test
  public void test0510() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0510");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor11 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885", "[-1.0, 100.0, 10.0, 10.0]");
    java.lang.String str12 = argumentDescriptor11.getName();
    endlessSingleStreamOperatingBuffer1.setDataBuffer(str12);
    try {
      boolean boolean15 = endlessSingleStreamOperatingBuffer1.loadFromPath(
          "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:09:41 UTC\nendDate=2019:05:23 15:09:41 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO");
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue(
        "'" + str12 + "' != '" + "UnknownDeviceDataTypeString{281474993487885}" + "'",
        str12.equals("UnknownDeviceDataTypeString{281474993487885}"));
  }

  @Test
  public void test0511() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0511");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    java.lang.Integer int6 = octetList0.getTypeShortForm();
    java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
    int int13 = booleanList10.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor14 = booleanList10.iterator();
    boolean boolean16 = booleanList10.remove(10.0f);
    int int17 = octetList0.indexOf(booleanList10);
    java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList10.parallelStream();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator19 = booleanList10.spliterator();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-7) + "'", int6.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    org.junit.Assert.assertNotNull(booleanItor14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(booleanStream18);
    org.junit.Assert.assertNotNull(booleanSpliterator19);
  }

  @Test
  public void test0512() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0512");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setLatitude((-4));
    java.lang.String str8 = simulatorSpacecraftState3.getMagField();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState12.setLongitude(4);
    double[] doubleArray16 = new double[] { (-1.0f) };
    simulatorSpacecraftState12.setMagField(doubleArray16);
    double double18 = simulatorSpacecraftState12.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray25 = new float[] { 28, 8 };
    simulatorSpacecraftState22.setQ(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState30 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double31 = simulatorSpacecraftState30.getLatitude();
    java.lang.String str32 = simulatorSpacecraftState30.getMagField();
    float[] floatArray33 = simulatorSpacecraftState30.getR();
    simulatorSpacecraftState22.setQ(floatArray33);
    java.lang.String str35 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray33);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState39 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double40 = simulatorSpacecraftState39.getLatitude();
    double double41 = simulatorSpacecraftState39.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState45 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double46 = simulatorSpacecraftState45.getLatitude();
    java.lang.String str47 = simulatorSpacecraftState45.getMagField();
    float[] floatArray48 = simulatorSpacecraftState45.getR();
    simulatorSpacecraftState39.setQ(floatArray48);
    float[] floatArray50 = simulatorSpacecraftState39.getV();
    opssat.simulator.celestia.CelestiaData celestiaData51 = new opssat.simulator.celestia.CelestiaData(
        floatArray33, floatArray50);
    float[] floatArray52 = celestiaData51.getQ();
    opssat.simulator.util.SimulatorData simulatorData56 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date57 = simulatorData56.getCurrentTime();
    int int58 = opssat.simulator.util.DateExtraction.getDayFromDate(date57);
    opssat.simulator.util.SimulatorData simulatorData60 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date61 = simulatorData60.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData63 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date64 = simulatorData63.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap65 = opssat.simulator.util.SimulatorData
        .computeDiff(date61, date64);
    opssat.simulator.util.SimulatorHeader simulatorHeader66 = new opssat.simulator.util.SimulatorHeader(
        false, date57, date64);
    opssat.simulator.util.SimulatorData simulatorData67 = new opssat.simulator.util.SimulatorData(
        (short) 0, date57);
    celestiaData51.setDate(date57);
    int int69 = celestiaData51.getSeconds();
    celestiaData51.setDnx("OPS-SAT SoftSim:");
    java.lang.String str72 = celestiaData51.getAos();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState76 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double77 = simulatorSpacecraftState76.getLatitude();
    double double78 = simulatorSpacecraftState76.getLongitude();
    float[] floatArray79 = simulatorSpacecraftState76.getQ();
    celestiaData51.setQ(floatArray79);
    simulatorSpacecraftState12.setQ(floatArray79);
    simulatorSpacecraftState3.setRv(floatArray79);
    float[] floatArray83 = simulatorSpacecraftState3.getMagnetometer();
    simulatorSpacecraftState3.setLatitude((-5));
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str8.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(doubleArray16);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.0d + "'", double18 == 4.0d);
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 340.0d + "'", double31 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str32 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str32.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "UnknownGUIData" + "'",
        str35.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 340.0d + "'", double40 == 340.0d);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 340.0d + "'", double41 == 340.0d);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 340.0d + "'", double46 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str47 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str47.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray48);
    org.junit.Assert.assertNotNull(floatArray50);
    org.junit.Assert.assertNotNull(floatArray52);
    org.junit.Assert.assertNotNull(date57);
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertNotNull(date64);
    org.junit.Assert.assertNotNull(timeUnitMap65);
    org.junit.Assert.assertNull(str72);
    org.junit.Assert.assertTrue("'" + double77 + "' != '" + 340.0d + "'", double77 == 340.0d);
    org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.0d) + "'", double78 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray79);
    org.junit.Assert.assertNotNull(floatArray83);
  }

  @Test
  public void test0513() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0513");
    org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
    java.util.stream.Stream<java.lang.Float> floatStream1 = floatList0.stream();
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData3.setCounter((-1));
    simulatorData3.feedTimeElapsed(21);
    boolean boolean8 = floatList0.equals(simulatorData3);
    simulatorData3.setMethodsExecuted(23);
    int int11 = simulatorData3.getCounter();
    org.junit.Assert.assertNotNull(floatStream1);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
  }

  @Test
  public void test0514() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0514");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    try {
      byte[] byteArray4 = pOpticalReceiver2.readFromMessageBuffer(14);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0515() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0515");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    try {
      byte[] byteArray6 = pOpticalReceiver2.runRawCommand(70, byteArray5);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray5);
  }

  @Test
  public void test0516() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0516");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    java.lang.String str33 = celestiaData32.getAos();
    celestiaData32.setDnx("");
    java.lang.String str36 = celestiaData32.getInfo();
    celestiaData32.setAnx("");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState42 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray45 = new float[] { 28, 8 };
    simulatorSpacecraftState42.setQ(floatArray45);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState50 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double51 = simulatorSpacecraftState50.getLatitude();
    java.lang.String str52 = simulatorSpacecraftState50.getMagField();
    float[] floatArray53 = simulatorSpacecraftState50.getR();
    simulatorSpacecraftState42.setQ(floatArray53);
    java.lang.String str55 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray53);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState59 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double60 = simulatorSpacecraftState59.getLatitude();
    double double61 = simulatorSpacecraftState59.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double66 = simulatorSpacecraftState65.getLatitude();
    java.lang.String str67 = simulatorSpacecraftState65.getMagField();
    float[] floatArray68 = simulatorSpacecraftState65.getR();
    simulatorSpacecraftState59.setQ(floatArray68);
    float[] floatArray70 = simulatorSpacecraftState59.getV();
    opssat.simulator.celestia.CelestiaData celestiaData71 = new opssat.simulator.celestia.CelestiaData(
        floatArray53, floatArray70);
    float[] floatArray72 = celestiaData71.getQ();
    opssat.simulator.util.SimulatorData simulatorData76 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date77 = simulatorData76.getCurrentTime();
    int int78 = opssat.simulator.util.DateExtraction.getDayFromDate(date77);
    opssat.simulator.util.SimulatorData simulatorData80 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date81 = simulatorData80.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData83 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date84 = simulatorData83.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap85 = opssat.simulator.util.SimulatorData
        .computeDiff(date81, date84);
    opssat.simulator.util.SimulatorHeader simulatorHeader86 = new opssat.simulator.util.SimulatorHeader(
        false, date77, date84);
    opssat.simulator.util.SimulatorData simulatorData87 = new opssat.simulator.util.SimulatorData(
        (short) 0, date77);
    celestiaData71.setDate(date77);
    int int89 = celestiaData71.getSeconds();
    celestiaData71.setDnx("OPS-SAT SoftSim:");
    java.lang.String str92 = celestiaData71.getAos();
    celestiaData71.setDnx("[true, false]");
    float[] floatArray95 = celestiaData71.getRv();
    celestiaData32.setRv(floatArray95);
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNull(str36);
    org.junit.Assert.assertNotNull(floatArray45);
    org.junit.Assert.assertTrue("'" + double51 + "' != '" + 340.0d + "'", double51 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str52 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str52.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray53);
    org.junit.Assert.assertTrue("'" + str55 + "' != '" + "UnknownGUIData" + "'",
        str55.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 340.0d + "'", double60 == 340.0d);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + 340.0d + "'", double61 == 340.0d);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + 340.0d + "'", double66 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str67 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str67.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertNotNull(floatArray70);
    org.junit.Assert.assertNotNull(floatArray72);
    org.junit.Assert.assertNotNull(date77);
    org.junit.Assert.assertNotNull(date81);
    org.junit.Assert.assertNotNull(date84);
    org.junit.Assert.assertNotNull(timeUnitMap85);
    org.junit.Assert.assertNull(str92);
    org.junit.Assert.assertNotNull(floatArray95);
  }

  @Test
  public void test0517() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0517");
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException(
        "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008");
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException(
        "2019:05:23 15:09:34 UTC", wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = octetList7.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException12 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray13 = wavFileException12.getSuppressed();
    boolean boolean14 = octetList7.equals(wavFileException12);
    opssat.simulator.util.wav.WavFileException wavFileException16 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException12.addSuppressed(wavFileException16);
    java.lang.String str18 = wavFileException16.toString();
    wavFileException5.addSuppressed(wavFileException16);
    java.lang.String str20 = wavFileException16.toString();
    wavFileException2.addSuppressed(wavFileException16);
    opssat.simulator.util.wav.WavFileException wavFileException22 = new opssat.simulator.util.wav.WavFileException(
        wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException23 = new opssat.simulator.util.wav.WavFileException();
    org.ccsds.moims.mo.mal.structures.OctetList octetList24 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int25 = octetList24.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = octetList24.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet27 = octetList24.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException29 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray30 = wavFileException29.getSuppressed();
    boolean boolean31 = octetList24.equals(wavFileException29);
    wavFileException23.addSuppressed(wavFileException29);
    wavFileException22.addSuppressed(wavFileException23);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uOctet10);
    org.junit.Assert.assertNotNull(throwableArray13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert
        .assertTrue(
            "'" + str18 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str18.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
    org.junit.Assert
        .assertTrue(
            "'" + str20 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str20.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-7) + "'", int25.equals((-7)));
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertNotNull(uOctet27);
    org.junit.Assert.assertNotNull(throwableArray30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
  }

  @Test
  public void test0518() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0518");
    opssat.simulator.util.LoggerFormatter loggerFormatter0 = new opssat.simulator.util.LoggerFormatter();
    java.util.logging.Handler handler1 = null;
    java.lang.String str2 = loggerFormatter0.getHead(handler1);
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
  }

  @Test
  public void test0519() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0519");
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException(
        "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008");
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException(
        "2019:05:23 15:09:34 UTC", wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = octetList7.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException12 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray13 = wavFileException12.getSuppressed();
    boolean boolean14 = octetList7.equals(wavFileException12);
    opssat.simulator.util.wav.WavFileException wavFileException16 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException12.addSuppressed(wavFileException16);
    java.lang.String str18 = wavFileException16.toString();
    wavFileException5.addSuppressed(wavFileException16);
    java.lang.String str20 = wavFileException16.toString();
    wavFileException2.addSuppressed(wavFileException16);
    opssat.simulator.util.wav.WavFileException wavFileException22 = new opssat.simulator.util.wav.WavFileException(
        wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException23 = new opssat.simulator.util.wav.WavFileException(
        wavFileException2);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uOctet10);
    org.junit.Assert.assertNotNull(throwableArray13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert
        .assertTrue(
            "'" + str18 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str18.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
    org.junit.Assert
        .assertTrue(
            "'" + str20 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str20.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
  }

  @Test
  public void test0520() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0520");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    shortList3.clear();
    int int6 = shortList3.size();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    java.util.Date date20 = simulatorHeader19.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Date date26 = simulatorData24.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        17, date26);
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    int int32 = opssat.simulator.util.DateExtraction.getDayFromDate(date31);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap39 = opssat.simulator.util.SimulatorData
        .computeDiff(date35, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader40 = new opssat.simulator.util.SimulatorHeader(
        false, date31, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader41 = new opssat.simulator.util.SimulatorHeader(
        false, date26, date31);
    simulatorHeader19.setEndDate(date26);
    int int43 = simulatorHeader19.getHourStartDate();
    java.util.Date date44 = simulatorHeader19.getStartDate();
    int int45 = shortList3.indexOf(simulatorHeader19);
    simulatorHeader19.setAutoStartTime(true);
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(timeUnitMap39);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
  }

  @Test
  public void test0521() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0521");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    java.util.ListIterator<java.lang.Long> longItor16 = longList12.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    java.lang.String str23 = simulatorSpacecraftState20.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    java.lang.String str30 = simulatorSpacecraftState27.toString();
    double[] doubleArray31 = simulatorSpacecraftState27.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    java.lang.String str39 = simulatorSpacecraftState36.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    double[] doubleArray47 = simulatorSpacecraftState43.getSunVector();
    simulatorSpacecraftState36.setMagnetometer(doubleArray47);
    simulatorSpacecraftState20.setMagnetometer(doubleArray47);
    float[] floatArray50 = null;
    simulatorSpacecraftState20.setRv(floatArray50);
    int int52 = longList12.lastIndexOf(simulatorSpacecraftState20);
    try {
      float[] floatArray53 = simulatorSpacecraftState20.getR();
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(longItor16);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str23.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str39.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray47);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
  }

  @Test
  public void test0522() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0522");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    int int72 = celestiaData43.getYears();
    float[] floatArray73 = celestiaData43.getQ();
    int int74 = celestiaData43.getHours();
    int int75 = celestiaData43.getMonths();
    float[] floatArray76 = celestiaData43.getQ();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNotNull(floatArray73);
    org.junit.Assert.assertNotNull(floatArray76);
  }

  @Test
  public void test0523() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0523");
    java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
    java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
    boolean boolean12 = byteList5.retainAll(intList10);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = org.ccsds.moims.mo.mal.structures.IntegerList.AREA_VERSION;
    org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uOctet13.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState18 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray21 = new float[] { 28, 8 };
    simulatorSpacecraftState18.setQ(floatArray21);
    float[] floatArray23 = simulatorSpacecraftState18.getQ();
    double double24 = simulatorSpacecraftState18.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState28 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray31 = new float[] { 28, 8 };
    simulatorSpacecraftState28.setQ(floatArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    float[] floatArray39 = simulatorSpacecraftState36.getR();
    simulatorSpacecraftState28.setQ(floatArray39);
    java.lang.String str41 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray39);
    simulatorSpacecraftState18.setRv(floatArray39);
    java.lang.String str43 = simulatorSpacecraftState18.getSunVectorAsString();
    float[] floatArray44 = simulatorSpacecraftState18.getRv();
    boolean boolean45 = uOctet14.equals(floatArray44);
    boolean boolean46 = intList10.contains(floatArray44);
    org.junit.Assert.assertNotNull(byteArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(intArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertNotNull(uOctet13);
    org.junit.Assert.assertNotNull(uOctet14);
    org.junit.Assert.assertNotNull(floatArray21);
    org.junit.Assert.assertNotNull(floatArray23);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray39);
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "UnknownGUIData" + "'",
        str41.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue(
        "'" + str43 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str43.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
  }

  @Test
  public void test0524() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0524");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) -1, (short) 10 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    boolean boolean5 = shortList3.isEmpty();
    int int7 = shortList3.lastIndexOf(281475010265070L);
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList9 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int10 = octetList9.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort11 = octetList9.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort12 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort14 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort15 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort16 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort17 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort18 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort18 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean21 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20,
        uShortArray19);
    uShortList20.ensureCapacity(0);
    int int25 = uShortList20.indexOf((byte) 1);
    uShortList20.clear();
    java.lang.Long[] longArray29 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
    java.lang.Object obj32 = longList30.clone();
    boolean boolean33 = uShortList20.contains(longList30);
    org.ccsds.moims.mo.mal.structures.UShort uShort34 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean35 = uShortList20.add(uShort34);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray36 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort8, uShort11, uShort12, uShort13, uShort14, uShort15, uShort16, uShort17, uShort34 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList37 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean38 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList37,
        uShortArray36);
    uShortList37.ensureCapacity(100);
    boolean boolean42 = uShortList37.equals(9);
    org.ccsds.moims.mo.mal.structures.OctetList octetList43 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int44 = octetList43.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort45 = octetList43.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor46 = octetList43.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor48 = new opssat.simulator.util.ArgumentDescriptor(
        octetList43, "hi!");
    java.lang.Object obj49 = argumentDescriptor48.getType();
    int int50 = uShortList37.indexOf(obj49);
    int int51 = shortList3.lastIndexOf(obj49);
    java.util.stream.Stream<java.lang.Short> shortStream52 = shortList3.parallelStream();
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece56 = new opssat.simulator.util.SimulatorSchedulerPiece(
        'a', 11, "");
    int int57 = simulatorSchedulerPiece56.getInternalID();
    java.lang.String str58 = simulatorSchedulerPiece56.getSchedulerOutput();
    opssat.simulator.util.SimulatorSchedulerPiece[] simulatorSchedulerPieceArray59 = new opssat.simulator.util.SimulatorSchedulerPiece[] {
        simulatorSchedulerPiece56 };
    try {
      opssat.simulator.util.SimulatorSchedulerPiece[] simulatorSchedulerPieceArray60 = shortList3
          .toArray(simulatorSchedulerPieceArray59);
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayStoreException; message: null");
    } catch (java.lang.ArrayStoreException e) {
    }
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", !boolean5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-7) + "'", int10.equals((-7)));
    org.junit.Assert.assertNotNull(uShort11);
    org.junit.Assert.assertNotNull(uShort12);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(uShort14);
    org.junit.Assert.assertNotNull(uShort15);
    org.junit.Assert.assertNotNull(uShort16);
    org.junit.Assert.assertNotNull(uShort17);
    org.junit.Assert.assertNotNull(uShort18);
    org.junit.Assert.assertNotNull(uShortArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    org.junit.Assert.assertNotNull(longArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertNotNull(obj32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
    org.junit.Assert.assertNotNull(uShort34);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
    org.junit.Assert.assertNotNull(uShortArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-7) + "'", int44.equals((-7)));
    org.junit.Assert.assertNotNull(uShort45);
    org.junit.Assert.assertNotNull(byteItor46);
    org.junit.Assert.assertNotNull(obj49);
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
    org.junit.Assert.assertNotNull(shortStream52);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 11 + "'", int57 == 11);
    org.junit.Assert.assertTrue(
        "'" + str58 + "' != '" + "00000:00:00:00:097  11                 executed false   | " + "'",
        str58.equals("00000:00:00:00:097  11                 executed false   | "));
    org.junit.Assert.assertNotNull(simulatorSchedulerPieceArray59);
  }

  @Test
  public void test0525() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0525");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    java.lang.Object obj14 = octetList0.clone();
    java.lang.Integer int15 = octetList0.getTypeShortForm();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-7) + "'", int15.equals((-7)));
  }

  @Test
  public void test0526() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0526");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setAutoStartSystem(false);
    java.lang.String str21 = simulatorHeader12.toFileString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
  }

  @Test
  public void test0527() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0527");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    org.ccsds.moims.mo.mal.structures.OctetList octetList57 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int58 = octetList57.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort59 = octetList57.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = octetList57.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException62 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray63 = wavFileException62.getSuppressed();
    boolean boolean64 = octetList57.equals(wavFileException62);
    org.ccsds.moims.mo.mal.structures.FloatList floatList66 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int67 = floatList66.getTypeShortForm();
    java.lang.Integer int68 = floatList66.getTypeShortForm();
    floatList66.clear();
    boolean boolean70 = octetList57.remove(floatList66);
    boolean boolean72 = floatList66.add((-1.0f));
    java.util.Iterator<java.lang.Float> floatItor73 = floatList66.iterator();
    boolean boolean74 = shortList2.remove(floatItor73);
    try {
      java.util.ListIterator<java.lang.Short> shortItor76 = shortList2.listIterator(66);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 66");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-7) + "'", int58.equals((-7)));
    org.junit.Assert.assertNotNull(uShort59);
    org.junit.Assert.assertNotNull(uOctet60);
    org.junit.Assert.assertNotNull(throwableArray63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-4) + "'", int67.equals((-4)));
    org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-4) + "'", int68.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
    org.junit.Assert.assertNotNull(floatItor73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
  }

  @Test
  public void test0529() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0529");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort10 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12,
        uShortArray11);
    uShortList12.ensureCapacity(0);
    int int17 = uShortList12.indexOf((byte) 1);
    uShortList12.clear();
    java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList22 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList22, longArray21);
    java.lang.Object obj24 = longList22.clone();
    boolean boolean25 = uShortList12.contains(longList22);
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean27 = uShortList12.add(uShort26);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0, uShort3, uShort4, uShort5, uShort6, uShort7, uShort8, uShort9, uShort26 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(100);
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream33 = uShortList29
        .parallelStream();
    uShortList29.ensureCapacity((-5));
    org.ccsds.moims.mo.mal.structures.URI uRI37 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet38 = uRI37.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList39 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList39.ensureCapacity(13);
    java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
    java.lang.Integer[] intArray51 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList52 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean53 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
    boolean boolean54 = byteList47.retainAll(intList52);
    boolean boolean55 = octetList39.containsAll(intList52);
    java.util.Iterator<java.lang.Integer> intItor56 = intList52.iterator();
    boolean boolean57 = uRI37.equals(intList52);
    java.util.Spliterator<java.lang.Integer> intSpliterator58 = intList52.spliterator();
    boolean boolean59 = uShortList29.retainAll(intList52);
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece63 = new opssat.simulator.util.SimulatorSchedulerPiece(
        60, 14, "01700.0000000");
    long long64 = simulatorSchedulerPiece63.getTime();
    long long65 = simulatorSchedulerPiece63.getTime();
    boolean boolean66 = uShortList29.remove(long65);
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uShort10);
    org.junit.Assert.assertNotNull(uShortArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(longArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertNotNull(obj24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertNotNull(uShortStream33);
    org.junit.Assert.assertNotNull(uOctet38);
    org.junit.Assert.assertNotNull(byteArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertNotNull(intArray51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    org.junit.Assert.assertNotNull(intItor56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
    org.junit.Assert.assertNotNull(intSpliterator58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
    org.junit.Assert.assertTrue("'" + long64 + "' != '" + 60L + "'", long64 == 60L);
    org.junit.Assert.assertTrue("'" + long65 + "' != '" + 60L + "'", long65 == 60L);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
  }

  @Test
  public void test0530() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0530");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    java.lang.String str72 = celestiaData43.getDnx();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNull(str72);
  }

  @Test
  public void test0531() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0531");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setTimeFactor(18);
    simulatorHeader12.setAutoStartSystem(true);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
  }

  @Test
  public void test0532() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0532");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    int int57 = shortList2.size();
    shortList2.trimToSize();
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
  }

  @Test
  public void test0533() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0533");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str28 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setTimeFactor(8);
    boolean boolean31 = simulatorHeader20.isUpdateInternet();
    java.util.Date date32 = simulatorHeader20.getEndDate();
    simulatorHeader20.setUseCelestia(false);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str28.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(date32);
  }

  @Test
  public void test0534() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0534");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    int int36 = simulatorHeader12.getHourStartDate();
    java.util.Date date37 = simulatorHeader12.getStartDate();
    simulatorHeader12.setAutoStartTime(true);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertNotNull(date37);
  }

  @Test
  public void test0536() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0536");
    opssat.simulator.util.SimulatorTimer simulatorTimer2 = new opssat.simulator.util.SimulatorTimer(
        "3257812:10:11:27:876", 18);
    simulatorTimer2.setDuration(0L);
    simulatorTimer2.setDuration((short) 100);
    simulatorTimer2.timeElapsed(281474993487873L);
    simulatorTimer2.setDuration(11);
    boolean boolean11 = simulatorTimer2.isElapsed();
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
  }

  @Test
  public void test0537() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0537");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "0100.0000000");
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList2 = simulatorDeviceData1
        .getDataList();
    org.junit.Assert.assertNotNull(argumentDescriptorList2);
  }

  @Test
  public void test0538() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0538");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState54 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray57 = new float[] { 28, 8 };
    simulatorSpacecraftState54.setQ(floatArray57);
    celestiaData32.setQ(floatArray57);
    celestiaData32.setLos("18446744073709551615");
    int int62 = celestiaData32.getHours();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray57);
  }

  @Test
  public void test0539() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0539");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    double double6 = simulatorSpacecraftState3.getLatitude();
    float[] floatArray7 = simulatorSpacecraftState3.getMagnetometer();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    java.lang.String str14 = simulatorSpacecraftState11.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState18 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double19 = simulatorSpacecraftState18.getLatitude();
    java.lang.String str20 = simulatorSpacecraftState18.getMagField();
    java.lang.String str21 = simulatorSpacecraftState18.toString();
    double[] doubleArray22 = simulatorSpacecraftState18.getSunVector();
    simulatorSpacecraftState11.setMagnetometer(doubleArray22);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    java.lang.String str30 = simulatorSpacecraftState27.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState34 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double35 = simulatorSpacecraftState34.getLatitude();
    java.lang.String str36 = simulatorSpacecraftState34.getMagField();
    java.lang.String str37 = simulatorSpacecraftState34.toString();
    double[] doubleArray38 = simulatorSpacecraftState34.getSunVector();
    simulatorSpacecraftState27.setMagnetometer(doubleArray38);
    simulatorSpacecraftState11.setMagnetometer(doubleArray38);
    simulatorSpacecraftState3.setSunVector(doubleArray38);
    int int42 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setSatsInView(37);
    org.junit.Assert.assertTrue("'" + double6 + "' != '" + 340.0d + "'", double6 == 340.0d);
    org.junit.Assert.assertNotNull(floatArray7);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str14.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 340.0d + "'", double19 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str20 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str20.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str21 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str21.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray22);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 340.0d + "'", double35 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str36.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str37 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str37.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray38);
  }

  @Test
  public void test0540() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0540");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date2 = simulatorData1.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date5 = simulatorData4.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap6 = opssat.simulator.util.SimulatorData
        .computeDiff(date2, date5);
    int int7 = opssat.simulator.util.DateExtraction.getDayFromDate(date2);
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(timeUnitMap6);
  }

  @Test
  public void test0541() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0541");
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor2 = new opssat.simulator.util.ArgumentDescriptor(
        "00000:00:00:00:-02", "2019:05:23 15:09:36 UTC");
    java.lang.String str3 = argumentDescriptor2.getName();
    org.junit.Assert.assertTrue(
        "'" + str3 + "' != '" + "UnknownDeviceDataTypeString{00000:00:00:00:-02}" + "'",
        str3.equals("UnknownDeviceDataTypeString{00000:00:00:00:-02}"));
  }

  @Test
  public void test0542() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0542");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    try {
      pOpticalReceiver2.simSetSuccessRate(39);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0543() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0543");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    java.util.stream.BaseStream[] baseStreamArray6 = new java.util.stream.BaseStream[0];
    @SuppressWarnings("unchecked")
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray7 = baseStreamArray6;
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray8 = stringList0
        .toArray(
            (java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[]) baseStreamArray6);
    java.util.stream.Stream<java.lang.String> strStream9 = stringList0.stream();
    boolean boolean11 = stringList0.add("0");
    org.ccsds.moims.mo.mal.structures.StringList stringList12 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList14 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor15 = shortList14.listIterator();
    boolean boolean16 = stringList12.equals(shortList14);
    java.util.stream.BaseStream[] baseStreamArray18 = new java.util.stream.BaseStream[0];
    @SuppressWarnings("unchecked")
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray19 = baseStreamArray18;
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray20 = stringList12
        .toArray(
            (java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[]) baseStreamArray18);
    java.util.stream.Stream<java.lang.String> strStream21 = stringList12.stream();
    java.lang.Object obj22 = stringList12.clone();
    opssat.simulator.util.LoggerFormatter loggerFormatter23 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter loggerFormatter24 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter loggerFormatter25 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter[] loggerFormatterArray26 = new opssat.simulator.util.LoggerFormatter[] {
        loggerFormatter23, loggerFormatter24, loggerFormatter25 };
    opssat.simulator.util.LoggerFormatter[] loggerFormatterArray27 = stringList12
        .toArray(loggerFormatterArray26);
    java.util.stream.Stream<java.lang.String> strStream28 = stringList12.parallelStream();
    org.ccsds.moims.mo.mal.structures.UShort uShort29 = stringList12.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.Element element30 = stringList12.createElement();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList31 = new org.ccsds.moims.mo.mal.structures.IntegerList();
    java.lang.Integer int32 = integerList31.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = integerList31.getAreaNumber();
    java.lang.Integer[] intArray41 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList42 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean43 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList42, intArray41);
    java.lang.Byte[] byteArray48 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList49 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean50 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList49, byteArray48);
    java.lang.Integer[] intArray53 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList54 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean55 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList54, intArray53);
    boolean boolean56 = byteList49.retainAll(intList54);
    java.lang.Integer[] intArray59 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList60 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean61 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList60, intArray59);
    int int63 = intList60.lastIndexOf((byte) 10);
    boolean boolean64 = intList54.removeAll(intList60);
    boolean boolean65 = intList42.retainAll(intList60);
    java.lang.Float[] floatArray69 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList70 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean71 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList70, floatArray69);
    boolean boolean73 = floatList70.add((-1.0f));
    floatList70.trimToSize();
    java.lang.Integer[] intArray79 = new java.lang.Integer[] { 100, 1, (-1), 10 };
    java.util.ArrayList<java.lang.Integer> intList80 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean81 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList80, intArray79);
    int int83 = intList80.lastIndexOf((byte) 1);
    boolean boolean84 = floatList70.containsAll(intList80);
    boolean boolean85 = intList42.addAll(intList80);
    boolean boolean86 = integerList31.removeAll(intList42);
    int int87 = stringList12.indexOf(integerList31);
    boolean boolean88 = stringList0.containsAll(integerList31);
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertNotNull(baseStreamArray6);
    org.junit.Assert.assertNotNull(floatBaseStreamArray7);
    org.junit.Assert.assertNotNull(floatBaseStreamArray8);
    org.junit.Assert.assertNotNull(strStream9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertNotNull(shortItor15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(baseStreamArray18);
    org.junit.Assert.assertNotNull(floatBaseStreamArray19);
    org.junit.Assert.assertNotNull(floatBaseStreamArray20);
    org.junit.Assert.assertNotNull(strStream21);
    org.junit.Assert.assertNotNull(obj22);
    org.junit.Assert.assertNotNull(loggerFormatterArray26);
    org.junit.Assert.assertNotNull(loggerFormatterArray27);
    org.junit.Assert.assertNotNull(strStream28);
    org.junit.Assert.assertNotNull(uShort29);
    org.junit.Assert.assertNotNull(element30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-11) + "'", int32.equals((-11)));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(intArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
    org.junit.Assert.assertNotNull(byteArray48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
    org.junit.Assert.assertNotNull(intArray53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
    org.junit.Assert.assertNotNull(intArray59);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertNotNull(floatArray69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
    org.junit.Assert.assertNotNull(intArray79);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88);
  }

  @Test
  public void test0544() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0544");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort10 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12,
        uShortArray11);
    uShortList12.ensureCapacity(0);
    int int17 = uShortList12.indexOf((byte) 1);
    uShortList12.clear();
    java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList22 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList22, longArray21);
    java.lang.Object obj24 = longList22.clone();
    boolean boolean25 = uShortList12.contains(longList22);
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean27 = uShortList12.add(uShort26);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0, uShort3, uShort4, uShort5, uShort6, uShort7, uShort8, uShort9, uShort26 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(100);
    int int33 = uShortList29.size();
    org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList34.ensureCapacity(13);
    java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean43 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
    java.lang.Integer[] intArray46 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
    boolean boolean49 = byteList42.retainAll(intList47);
    boolean boolean50 = octetList34.containsAll(intList47);
    java.util.Iterator<java.lang.Integer> intItor51 = intList47.iterator();
    boolean boolean52 = uShortList29.containsAll(intList47);
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData54.setCounter((-1));
    simulatorData54.feedTimeElapsed(21);
    java.lang.String str59 = simulatorData54.getCurrentDay();
    java.lang.String str60 = simulatorData54.getCurrentYear();
    boolean boolean61 = intList47.equals(simulatorData54);
    java.lang.String str62 = simulatorData54.getCurrentDay();
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uShort10);
    org.junit.Assert.assertNotNull(uShortArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(longArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertNotNull(obj24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 9 + "'", int33 == 9);
    org.junit.Assert.assertNotNull(byteArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
    org.junit.Assert.assertNotNull(intArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    org.junit.Assert.assertNotNull(intItor51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
  }

  @Test
  public void test0545() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0545");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    java.util.ListIterator<java.lang.Long> longItor16 = longList12.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    java.lang.String str23 = simulatorSpacecraftState20.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    java.lang.String str30 = simulatorSpacecraftState27.toString();
    double[] doubleArray31 = simulatorSpacecraftState27.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    java.lang.String str39 = simulatorSpacecraftState36.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    double[] doubleArray47 = simulatorSpacecraftState43.getSunVector();
    simulatorSpacecraftState36.setMagnetometer(doubleArray47);
    simulatorSpacecraftState20.setMagnetometer(doubleArray47);
    float[] floatArray50 = null;
    simulatorSpacecraftState20.setRv(floatArray50);
    int int52 = longList12.lastIndexOf(simulatorSpacecraftState20);
    try {
      java.util.ListIterator<java.lang.Long> longItor54 = longList12.listIterator((-13));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: -13");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(longItor16);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str23.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str39.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray47);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
  }

  @Test
  public void test0546() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0546");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    try {
      pOpticalReceiver2.simSetSuccessRate((short) -1);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0547() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0547");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    celestiaData32.setDnx("OPS-SAT SoftSim:");
    java.lang.String str53 = celestiaData32.getAos();
    java.lang.String str54 = celestiaData32.getDnx();
    int int55 = celestiaData32.getHours();
    java.lang.String str56 = celestiaData32.getDate();
    int int57 = celestiaData32.getMinutes();
    try {
      java.lang.String str58 = celestiaData32.toString();
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNull(str53);
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "OPS-SAT SoftSim:" + "'",
        str54.equals("OPS-SAT SoftSim:"));
  }

  @Test
  public void test0548() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0548");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    boolean boolean31 = simulatorHeader12.isAutoStartTime();
    simulatorHeader12.setUpdateInternet(false);
    java.lang.String str34 = simulatorHeader12.getOrekitPropagator();
    boolean boolean36 = simulatorHeader12.validateTimeFactor((byte) 10);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
  }

  @Test
  public void test0549() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0549");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience37 = new opssat.simulator.orekit.GPSSatInViewScience(
        4.0d, (short) 100, 281475010265075L, (-4), 0.0d, (-7), 281474993487888L, (short) 255);
    double double38 = gPSSatInViewScience37.getMaxDistance();
    boolean boolean39 = uLong0.equals(gPSSatInViewScience37);
    org.ccsds.moims.mo.mal.structures.UShort uShort40 = uLong0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort41 = uLong0.getAreaNumber();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertNotNull(uShort40);
    org.junit.Assert.assertNotNull(uShort41);
  }

  @Test
  public void test0551() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0551");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    java.lang.String str9 = argumentDescriptor5.getName();
    try {
      float float11 = argumentDescriptor5.getTypeAsFloatByIndex(46);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: org.ccsds.moims.mo.mal.structures.OctetList cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "hi!" + "'", str9.equals("hi!"));
  }

  @Test
  public void test0552() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0552");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    org.ccsds.moims.mo.mal.structures.Union union5 = new org.ccsds.moims.mo.mal.structures.Union(
        "$DEFAULT");
    endlessSingleStreamOperatingBuffer1.setDataBuffer("$DEFAULT");
    byte[] byteArray8 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(20);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray8);
    java.lang.Object obj10 = endlessSingleStreamOperatingBuffer1.getDataBuffer();
    boolean boolean12 = endlessSingleStreamOperatingBuffer1.preparePath("1");
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray8);
    org.junit.Assert.assertNotNull(obj10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", !boolean12);
  }

  @Test
  public void test0553() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0553");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setUseOrekitPropagator(true);
    java.lang.String str17 = simulatorHeader12.toFileString();
    simulatorHeader12.setAutoStartTime(true);
    java.lang.String str20 = simulatorHeader12.getKeplerElements();
    boolean boolean22 = simulatorHeader12.validateTimeFactor(8);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
  }

  @Test
  public void test0554() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0554");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    int int31 = opssat.simulator.util.DateExtraction.getYearFromDate(date27);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
  }

  @Test
  public void test0556() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0556");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    int int7 = booleanList3.size();
    java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
    java.lang.Object[] objArray14 = byteList12.toArray();
    java.util.Iterator<java.lang.Byte> byteItor15 = byteList12.iterator();
    boolean boolean16 = booleanList3.contains(byteList12);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    int int23 = intList20.lastIndexOf((byte) 10);
    java.lang.String str24 = intList20.toString();
    java.lang.Byte[] byteArray29 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList30 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList30, byteArray29);
    java.lang.Integer[] intArray34 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList35 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean36 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
    boolean boolean37 = byteList30.retainAll(intList35);
    java.lang.Integer[] intArray40 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList41 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean42 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
    int int44 = intList41.lastIndexOf((byte) 10);
    boolean boolean45 = intList35.removeAll(intList41);
    intList41.ensureCapacity(48);
    boolean boolean48 = intList20.addAll(intList41);
    boolean boolean49 = byteList12.removeAll(intList41);
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    org.junit.Assert.assertNotNull(byteArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(objArray14);
    org.junit.Assert.assertNotNull(byteItor15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "[0, 1]" + "'", str24.equals("[0, 1]"));
    org.junit.Assert.assertNotNull(byteArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertNotNull(intArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertNotNull(intArray40);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
  }

  @Test
  public void test0557() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0557");
    java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList2 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean3 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList2, booleanArray1);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator4 = booleanList2.spliterator();
    java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
    java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList15 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
    boolean boolean17 = byteList10.retainAll(intList15);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean34 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
    java.lang.Integer[] intArray37 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList38 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
    boolean boolean40 = byteList33.retainAll(intList38);
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    int int47 = intList44.lastIndexOf((byte) 10);
    boolean boolean48 = intList38.removeAll(intList44);
    boolean boolean49 = intList26.retainAll(intList44);
    java.lang.Float[] floatArray53 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean55 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
    boolean boolean57 = floatList54.add((-1.0f));
    floatList54.trimToSize();
    java.lang.Integer[] intArray63 = new java.lang.Integer[] { 100, 1, (-1), 10 };
    java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
    int int67 = intList64.lastIndexOf((byte) 1);
    boolean boolean68 = floatList54.containsAll(intList64);
    boolean boolean69 = intList26.addAll(intList64);
    boolean boolean70 = intList15.retainAll(intList26);
    boolean boolean71 = booleanList2.equals(intList26);
    java.util.ListIterator<java.lang.Boolean> booleanItor72 = booleanList2.listIterator();
    opssat.simulator.util.SimulatorData simulatorData74 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date75 = simulatorData74.getCurrentTime();
    java.util.Date date76 = simulatorData74.getCurrentTime();
    int int77 = simulatorData74.getTimeFactor();
    int int78 = booleanList2.indexOf(int77);
    try {
      java.util.List<java.lang.Boolean> booleanList81 = booleanList2.subList(2019, (-7));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(2019) > toIndex(-7)");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(booleanArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(booleanSpliterator4);
    org.junit.Assert.assertNotNull(byteArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertNotNull(intArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(byteArray32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
    org.junit.Assert.assertNotNull(intArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(floatArray53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
    org.junit.Assert.assertNotNull(intArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNotNull(booleanItor72);
    org.junit.Assert.assertNotNull(date75);
    org.junit.Assert.assertNotNull(date76);
    org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
  }

  @Test
  public void test0558() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0558");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    int int31 = simulatorHeader12.getYearStartDate();
    java.util.Date date33 = simulatorHeader12.parseStringIntoDate("-0500.0000000");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertNull(date33);
  }

  @Test
  public void test0559() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0559");
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList(
        41);
    java.util.stream.Stream<java.lang.Byte> byteStream2 = octetList1.stream();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double7 = simulatorSpacecraftState6.getLatitude();
    double double8 = simulatorSpacecraftState6.getLongitude();
    java.lang.String str9 = simulatorSpacecraftState6.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState13.setLongitude(4);
    double[] doubleArray17 = new double[] { (-1.0f) };
    simulatorSpacecraftState13.setMagField(doubleArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    java.lang.String str25 = simulatorSpacecraftState22.toString();
    double[] doubleArray26 = simulatorSpacecraftState22.getSunVector();
    simulatorSpacecraftState13.setMagnetometer(doubleArray26);
    simulatorSpacecraftState6.setMagField(doubleArray26);
    boolean boolean29 = octetList1.equals(simulatorSpacecraftState6);
    org.junit.Assert.assertNotNull(byteStream2);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 340.0d + "'", double7 == 340.0d);
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    org.junit.Assert.assertNull(str9);
    org.junit.Assert.assertNotNull(doubleArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str25 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str25.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray26);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
  }

  @Test
  public void test0560() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0560");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    java.lang.Long long3 = uInteger1.getShortForm();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        uInteger1, "Alive");
    java.lang.String str6 = argumentDescriptor5.toString();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487884L + "'",
        long3.equals(281474993487884L));
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
  }

  @Test
  public void test0561() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0561");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setUseOrekitPropagator(true);
    boolean boolean18 = simulatorHeader12.isUseOrekitPropagator();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
  }

  @Test
  public void test0562() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0562");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.clear();
    java.util.stream.Stream<java.lang.Float> floatStream9 = floatList4.parallelStream();
    opssat.simulator.util.SimulatorTimer simulatorTimer12 = new opssat.simulator.util.SimulatorTimer(
        "3257812:10:11:27:876", 18);
    simulatorTimer12.setDuration(0L);
    boolean boolean15 = simulatorTimer12.isElapsed();
    int int16 = floatList4.lastIndexOf(boolean15);
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertNotNull(floatStream9);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
  }

  @Test
  public void test0563() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0563");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.lang.String str13 = simulatorHeader12.getEndDateString();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    int int18 = opssat.simulator.util.DateExtraction.getDayFromDate(date17);
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date21 = simulatorData20.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap25 = opssat.simulator.util.SimulatorData
        .computeDiff(date21, date24);
    opssat.simulator.util.SimulatorHeader simulatorHeader26 = new opssat.simulator.util.SimulatorHeader(
        false, date17, date24);
    java.util.Date date27 = simulatorHeader26.getEndDate();
    boolean boolean28 = simulatorHeader26.isAutoStartSystem();
    int int29 = simulatorHeader26.getDayStartDate();
    boolean boolean30 = simulatorHeader26.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData33 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date34 = simulatorData33.getCurrentTime();
    int int35 = opssat.simulator.util.DateExtraction.getDayFromDate(date34);
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap42 = opssat.simulator.util.SimulatorData
        .computeDiff(date38, date41);
    opssat.simulator.util.SimulatorHeader simulatorHeader43 = new opssat.simulator.util.SimulatorHeader(
        false, date34, date41);
    simulatorHeader26.setStartDate(date41);
    simulatorHeader12.setStartDate(date41);
    java.lang.String str46 = simulatorHeader12.toString();
    java.util.Date date48 = simulatorHeader12.parseStringIntoDate(
        "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=true\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:10:06 UTC\nendDate=2019:05:23 15:10:06 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(timeUnitMap25);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(timeUnitMap42);
    org.junit.Assert.assertNull(date48);
  }

  @Test
  public void test0564() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0564");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setUpdateInternet(false);
    boolean boolean21 = simulatorHeader12.isUpdateInternet();
    boolean boolean22 = simulatorHeader12.checkStartBeforeEnd();
    int int23 = simulatorHeader12.getMonthStartDate();
    java.lang.String str24 = simulatorHeader12.toFileString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
  }

  @Test
  public void test0565() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0565");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    float[] floatArray8 = simulatorSpacecraftState3.getQ();
    double double9 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray16 = new float[] { 28, 8 };
    simulatorSpacecraftState13.setQ(floatArray16);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    java.lang.String str23 = simulatorSpacecraftState21.getMagField();
    float[] floatArray24 = simulatorSpacecraftState21.getR();
    simulatorSpacecraftState13.setQ(floatArray24);
    java.lang.String str26 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray24);
    simulatorSpacecraftState3.setRv(floatArray24);
    java.lang.String str28 = simulatorSpacecraftState3.getMagField();
    java.lang.String str29 = simulatorSpacecraftState3.getSunVectorAsString();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str23.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray24);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "UnknownGUIData" + "'",
        str26.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str29.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
  }

  @Test
  public void test0566() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0566");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    boolean boolean3 = doubleList1.add(100.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = doubleList1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = doubleList1.getAreaVersion();
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData7 = new opssat.simulator.util.SimulatorDeviceData(
        "[]");
    java.lang.String str8 = simulatorDeviceData7.getName();
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList9 = simulatorDeviceData7
        .getDataList();
    int int10 = doubleList1.lastIndexOf(simulatorDeviceData7);
    java.lang.String str11 = simulatorDeviceData7.getName();
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList12 = simulatorDeviceData7
        .getDataList();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[]" + "'", str8.equals("[]"));
    org.junit.Assert.assertNotNull(argumentDescriptorList9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "[]" + "'", str11.equals("[]"));
    org.junit.Assert.assertNotNull(argumentDescriptorList12);
  }

  @Test
  public void test0567() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0567");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int4 = octetList3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
    java.lang.Object[] objArray6 = octetList3.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = octetList7.getAreaNumber();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator22 = booleanList17.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    java.lang.Object obj25 = octetList23.clone();
    octetList23.trimToSize();
    boolean boolean27 = booleanList17.contains(octetList23);
    org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int29 = octetList28.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort30 = octetList28.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList31 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int32 = octetList31.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = octetList31.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = octetList31.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList35 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int36 = octetList35.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = octetList35.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray38 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList3, octetList7, octetList23, octetList28, octetList31, octetList35 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray39 = octetList0
        .toArray(octetListArray38);
    octetList0.ensureCapacity(28);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = octetList0.getAreaVersion();
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind43 = opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_DegradationRate;
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind44 = opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_VelocityInertial;
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind45 = opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_MagneticField;
    opssat.simulator.threading.SimulatorNode.DevDatPBind[] devDatPBindArray46 = new opssat.simulator.threading.SimulatorNode.DevDatPBind[] {
        devDatPBind43, devDatPBind44, devDatPBind45 };
    opssat.simulator.threading.SimulatorNode.DevDatPBind[] devDatPBindArray47 = octetList0
        .toArray(devDatPBindArray46);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-7) + "'", int4.equals((-7)));
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertNotNull(booleanSpliterator22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(obj25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-7) + "'", int29.equals((-7)));
    org.junit.Assert.assertNotNull(uShort30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32.equals((-7)));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(uOctet34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-7) + "'", int36.equals((-7)));
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(octetListArray38);
    org.junit.Assert.assertNotNull(octetListArray39);
    org.junit.Assert.assertNotNull(uOctet42);
    org.junit.Assert.assertTrue(
        "'" + devDatPBind43 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_DegradationRate
            + "'",
        devDatPBind43.equals(
            opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_DegradationRate));
    org.junit.Assert.assertTrue(
        "'" + devDatPBind44 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_VelocityInertial + "'",
        devDatPBind44.equals(
            opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_VelocityInertial));
    org.junit.Assert.assertTrue(
        "'" + devDatPBind45 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_MagneticField + "'",
        devDatPBind45
            .equals(opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_MagneticField));
    org.junit.Assert.assertNotNull(devDatPBindArray46);
    org.junit.Assert.assertNotNull(devDatPBindArray47);
  }

  @Test
  public void test0568() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0568");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind1 = opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels;
    boolean boolean2 = stringList0.equals(devDatPBind1);
    org.ccsds.moims.mo.mal.structures.Element element3 = stringList0.createElement();
    java.util.Iterator<java.lang.String> strItor4 = stringList0.iterator();
    opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL gLMLA_COL5 = new opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL();
    opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL gLMLA_COL6 = new opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL();
    opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL gLMLA_COL7 = new opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL();
    opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL[] gLMLA_COLArray8 = new opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL[] {
        gLMLA_COL5, gLMLA_COL6, gLMLA_COL7 };
    opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16.GLMLA_COL[] gLMLA_COLArray9 = stringList0
        .toArray(gLMLA_COLArray8);
    java.lang.Long[] longArray16 = new java.lang.Long[] { 281475010265070L, 100L, 0L,
        281475010265070L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
    boolean boolean19 = longList17.isEmpty();
    java.lang.Long[] longArray22 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList23 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean24 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList23, longArray22);
    java.lang.Object obj25 = longList23.clone();
    java.util.ListIterator<java.lang.Long> longItor27 = longList23.listIterator((byte) 1);
    boolean boolean28 = longList17.remove((java.lang.Object) (byte) 1);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState32 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double33 = simulatorSpacecraftState32.getLatitude();
    double double34 = simulatorSpacecraftState32.getLongitude();
    java.lang.String str35 = simulatorSpacecraftState32.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState39 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState39.setLongitude(4);
    double[] doubleArray43 = new double[] { (-1.0f) };
    simulatorSpacecraftState39.setMagField(doubleArray43);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState48 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double49 = simulatorSpacecraftState48.getLatitude();
    java.lang.String str50 = simulatorSpacecraftState48.getMagField();
    java.lang.String str51 = simulatorSpacecraftState48.toString();
    double[] doubleArray52 = simulatorSpacecraftState48.getSunVector();
    simulatorSpacecraftState39.setMagnetometer(doubleArray52);
    simulatorSpacecraftState32.setMagField(doubleArray52);
    simulatorSpacecraftState32.setModeOperation("0");
    simulatorSpacecraftState32.setModeOperation("030936.762");
    simulatorSpacecraftState32.setAltitude(60);
    int int61 = longList17.lastIndexOf(60);
    int int62 = stringList0.indexOf(60);
    org.junit.Assert.assertTrue(
        "'" + devDatPBind1 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels + "'",
        devDatPBind1
            .equals(opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels));
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    org.junit.Assert.assertNotNull(element3);
    org.junit.Assert.assertNotNull(strItor4);
    org.junit.Assert.assertNotNull(gLMLA_COLArray8);
    org.junit.Assert.assertNotNull(gLMLA_COLArray9);
    org.junit.Assert.assertNotNull(longArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    org.junit.Assert.assertNotNull(longArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertNotNull(obj25);
    org.junit.Assert.assertNotNull(longItor27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + (-1.0d) + "'", double34 == (-1.0d));
    org.junit.Assert.assertNull(str35);
    org.junit.Assert.assertNotNull(doubleArray43);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 340.0d + "'", double49 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str50 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str50.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str51 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str51.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray52);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
  }

  @Test
  public void test0569() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0569");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Date date26 = simulatorData24.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        17, date26);
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    int int32 = opssat.simulator.util.DateExtraction.getDayFromDate(date31);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap39 = opssat.simulator.util.SimulatorData
        .computeDiff(date35, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader40 = new opssat.simulator.util.SimulatorHeader(
        false, date31, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader41 = new opssat.simulator.util.SimulatorHeader(
        false, date26, date31);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap42 = opssat.simulator.util.SimulatorData
        .computeDiff(date10, date26);
    int int43 = opssat.simulator.util.DateExtraction.getMinuteFromDate(date26);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(timeUnitMap39);
    org.junit.Assert.assertNotNull(timeUnitMap42);
  }

  @Test
  public void test0570() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0570");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        60, 14, "01700.0000000");
    long long4 = simulatorSchedulerPiece3.getTime();
    java.lang.String str5 = simulatorSchedulerPiece3.getFileString();
    long long6 = simulatorSchedulerPiece3.getTime();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 60L + "'", long4 == 60L);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '" + "00000:00:00:00:060|0000000000000000060|14|01700.0000000" + "'",
        str5.equals("00000:00:00:00:060|0000000000000000060|14|01700.0000000"));
    org.junit.Assert.assertTrue("'" + long6 + "' != '" + 60L + "'", long6 == 60L);
  }

  @Test
  public void test0571() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0571");
    opssat.simulator.util.SimulatorTimer simulatorTimer2 = new opssat.simulator.util.SimulatorTimer(
        "SimulatorData", 1L);
    boolean boolean3 = simulatorTimer2.isElapsed();
    simulatorTimer2.setDuration((-10));
    simulatorTimer2.setDuration((-4));
    simulatorTimer2.setDuration((-10));
    boolean boolean10 = simulatorTimer2.isElapsed();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
  }

  @Test
  public void test0572() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0572");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList11 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean12 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList11, booleanArray10);
    int int14 = booleanList11.indexOf(10);
    int int15 = booleanList11.size();
    java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
    java.lang.Object[] objArray22 = byteList20.toArray();
    java.util.Iterator<java.lang.Byte> byteItor23 = byteList20.iterator();
    boolean boolean24 = booleanList11.contains(byteList20);
    org.ccsds.moims.mo.mal.structures.UShortList uShortList25 = new org.ccsds.moims.mo.mal.structures.UShortList();
    java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList29, booleanArray28);
    int int32 = booleanList29.indexOf(10);
    int int33 = booleanList29.size();
    java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
    java.lang.Object[] objArray40 = byteList38.toArray();
    java.util.Iterator<java.lang.Byte> byteItor41 = byteList38.iterator();
    boolean boolean42 = booleanList29.contains(byteList38);
    java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList29.stream();
    int int44 = uShortList25.lastIndexOf(booleanList29);
    int int45 = byteList20.lastIndexOf(booleanList29);
    java.lang.Float[] floatArray49 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList50 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean51 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList50, floatArray49);
    boolean boolean53 = floatList50.add((-1.0f));
    floatList50.trimToSize();
    org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList55.ensureCapacity(13);
    java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean64 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
    java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList68 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean69 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
    boolean boolean70 = byteList63.retainAll(intList68);
    boolean boolean71 = octetList55.containsAll(intList68);
    boolean boolean72 = floatList50.containsAll(intList68);
    boolean boolean73 = booleanList29.removeAll(intList68);
    java.lang.Boolean boolean75 = booleanList29.remove(0);
    endlessSingleStreamOperatingBuffer1.setDataBuffer(booleanList29);
    byte[] byteArray78 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int2ByteArray(4);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray78);
    java.lang.Object obj80 = endlessSingleStreamOperatingBuffer1.getDataBuffer();
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertNotNull(booleanArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertNotNull(byteArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertNotNull(objArray22);
    org.junit.Assert.assertNotNull(byteItor23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertNotNull(booleanArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    org.junit.Assert.assertNotNull(byteArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertNotNull(objArray40);
    org.junit.Assert.assertNotNull(byteItor41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    org.junit.Assert.assertNotNull(booleanStream43);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    org.junit.Assert.assertNotNull(floatArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertNotNull(byteArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertNotNull(intArray67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75.equals(true));
    org.junit.Assert.assertNotNull(byteArray78);
    org.junit.Assert.assertNotNull(obj80);
  }

  @Test
  public void test0573() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0573");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    org.ccsds.moims.mo.mal.structures.UShort uShort16 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean17 = uShortList2.add(uShort16);
    java.lang.Double[] doubleArray22 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList23 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean24 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList23, doubleArray22);
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort25 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27,
        uShortArray26);
    uShortList27.ensureCapacity(0);
    int int32 = uShortList27.indexOf((byte) 1);
    uShortList27.clear();
    java.lang.Long[] longArray36 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList37 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList37, longArray36);
    java.lang.Object obj39 = longList37.clone();
    boolean boolean40 = uShortList27.contains(longList37);
    boolean boolean41 = doubleList23.equals(boolean40);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    int int48 = intList45.lastIndexOf((byte) 10);
    boolean boolean49 = doubleList23.removeAll(intList45);
    org.ccsds.moims.mo.mal.structures.OctetList octetList50 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList50.ensureCapacity(13);
    java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean59 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
    java.lang.Integer[] intArray62 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList63 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean64 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
    boolean boolean65 = byteList58.retainAll(intList63);
    boolean boolean66 = octetList50.containsAll(intList63);
    boolean boolean67 = doubleList23.removeAll(intList63);
    boolean boolean68 = uShortList2.containsAll(intList63);
    org.ccsds.moims.mo.mal.structures.Duration duration70 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = duration70.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort72 = duration70.getAreaNumber();
    int int73 = uShortList2.indexOf(duration70);
    java.lang.Integer int74 = duration70.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.OctetList octetList75 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int76 = octetList75.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort77 = octetList75.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet78 = octetList75.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException80 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray81 = wavFileException80.getSuppressed();
    boolean boolean82 = octetList75.equals(wavFileException80);
    org.ccsds.moims.mo.mal.structures.FloatList floatList84 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int85 = floatList84.getTypeShortForm();
    java.lang.Integer int86 = floatList84.getTypeShortForm();
    floatList84.clear();
    boolean boolean88 = octetList75.remove(floatList84);
    org.ccsds.moims.mo.mal.structures.UShort uShort89 = floatList84.getServiceNumber();
    boolean boolean90 = duration70.equals(floatList84);
    java.lang.Long long91 = duration70.getShortForm();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet92 = duration70.getAreaVersion();
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(uShort16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertNotNull(doubleArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShortArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertNotNull(longArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertNotNull(obj39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertNotNull(byteArray57);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
    org.junit.Assert.assertNotNull(intArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    org.junit.Assert.assertNotNull(uOctet71);
    org.junit.Assert.assertNotNull(uShort72);
    org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74.equals(3));
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-7) + "'", int76.equals((-7)));
    org.junit.Assert.assertNotNull(uShort77);
    org.junit.Assert.assertNotNull(uOctet78);
    org.junit.Assert.assertNotNull(throwableArray81);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-4) + "'", int85.equals((-4)));
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-4) + "'", int86.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    org.junit.Assert.assertNotNull(uShort89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    org.junit.Assert.assertTrue("'" + long91 + "' != '" + 281474993487875L + "'",
        long91.equals(281474993487875L));
    org.junit.Assert.assertNotNull(uOctet92);
  }

  @Test
  public void test0574() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0574");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    simulatorHeader20.setUpdateInternet(true);
    int int23 = simulatorHeader20.getHourStartDate();
    simulatorHeader20.setAutoStartSystem(false);
    int int26 = simulatorHeader20.getDayStartDate();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
  }

  @Test
  public void test0575() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0575");
    opssat.simulator.util.MyFormatter myFormatter0 = new opssat.simulator.util.MyFormatter();
    java.util.logging.LogRecord logRecord1 = null;
    try {
      java.lang.String str2 = myFormatter0.format(logRecord1);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0576() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0576");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    shortList3.clear();
    int int6 = shortList3.size();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    java.util.Date date20 = simulatorHeader19.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Date date26 = simulatorData24.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        17, date26);
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    int int32 = opssat.simulator.util.DateExtraction.getDayFromDate(date31);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap39 = opssat.simulator.util.SimulatorData
        .computeDiff(date35, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader40 = new opssat.simulator.util.SimulatorHeader(
        false, date31, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader41 = new opssat.simulator.util.SimulatorHeader(
        false, date26, date31);
    simulatorHeader19.setEndDate(date26);
    int int43 = simulatorHeader19.getHourStartDate();
    java.util.Date date44 = simulatorHeader19.getStartDate();
    int int45 = shortList3.indexOf(simulatorHeader19);
    boolean boolean46 = simulatorHeader19.isUseCelestia();
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(timeUnitMap39);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
  }

  @Test
  public void test0577() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0577");
    java.lang.String str1 = opssat.simulator.threading.SimulatorNode.calcNMEAChecksum("52");
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "*32" + "'", str1.equals("*32"));
  }

  @Test
  public void test0578() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0578");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    java.lang.String str6 = simulatorSpacecraftState3.getRotationAsString();
    double[] doubleArray7 = simulatorSpacecraftState3.getSunVector();
    simulatorSpacecraftState3.setModeOperation("2019:05:23 15:09:37 UTC");
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertTrue("'" + str6 + "' != '"
        + "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"
        + "'",
        str6.equals(
            "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"));
    org.junit.Assert.assertNotNull(doubleArray7);
  }

  @Test
  public void test0579() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0579");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    java.lang.Float[] floatArray7 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList8 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean9 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList8, floatArray7);
    boolean boolean11 = floatList8.add((-1.0f));
    floatList8.trimToSize();
    org.ccsds.moims.mo.mal.structures.URI uRI14 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int15 = uRI14.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI17 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet18 = uRI17.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI20 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray21 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI14, uRI17, uRI20 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList22 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean23 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList22, uRIArray21);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime24 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int25 = uRIList22.indexOf(fineTime24);
    uRIList22.ensureCapacity(40);
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
    boolean boolean29 = uRIList22.remove(uShort28);
    java.lang.Byte[] byteArray34 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList35 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean36 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList35, byteArray34);
    java.lang.Integer[] intArray39 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList40 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
    boolean boolean42 = byteList35.retainAll(intList40);
    java.lang.Integer[] intArray45 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList46 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean47 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList46, intArray45);
    int int49 = intList46.lastIndexOf((byte) 10);
    boolean boolean50 = intList40.removeAll(intList46);
    boolean boolean51 = uRIList22.removeAll(intList40);
    boolean boolean52 = floatList8.containsAll(intList40);
    boolean boolean53 = octetList0.removeAll(intList40);
    java.lang.String str54 = octetList0.toString();
    org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int56 = octetList55.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort57 = octetList55.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList58 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int59 = octetList58.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort60 = octetList58.getAreaNumber();
    java.lang.Object[] objArray61 = octetList58.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList62 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int63 = octetList62.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort64 = octetList62.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor65 = octetList62.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor67 = new opssat.simulator.util.ArgumentDescriptor(
        octetList62, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort68 = octetList62.getAreaNumber();
    java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList72 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean73 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList72, booleanArray71);
    int int75 = booleanList72.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor76 = booleanList72.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator77 = booleanList72.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList78 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int79 = octetList78.getTypeShortForm();
    java.lang.Object obj80 = octetList78.clone();
    octetList78.trimToSize();
    boolean boolean82 = booleanList72.contains(octetList78);
    org.ccsds.moims.mo.mal.structures.OctetList octetList83 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int84 = octetList83.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort85 = octetList83.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList86 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int87 = octetList86.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort88 = octetList86.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet89 = octetList86.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList90 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int91 = octetList90.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort92 = octetList90.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray93 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList58, octetList62, octetList78, octetList83, octetList86, octetList90 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray94 = octetList55
        .toArray(octetListArray93);
    java.util.RandomAccess[] randomAccessArray95 = octetList0
        .toArray((java.util.RandomAccess[]) octetListArray93);
    octetList0.trimToSize();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(floatArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 18 + "'", int15.equals(18));
    org.junit.Assert.assertNotNull(uOctet18);
    org.junit.Assert.assertNotNull(uRIArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    org.junit.Assert.assertNotNull(uShort28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    org.junit.Assert.assertNotNull(byteArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertNotNull(intArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
    org.junit.Assert.assertNotNull(intArray45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
    org.junit.Assert.assertTrue("'" + str54 + "' != '" + "[]" + "'", str54.equals("[]"));
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-7) + "'", int56.equals((-7)));
    org.junit.Assert.assertNotNull(uShort57);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-7) + "'", int59.equals((-7)));
    org.junit.Assert.assertNotNull(uShort60);
    org.junit.Assert.assertNotNull(objArray61);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-7) + "'", int63.equals((-7)));
    org.junit.Assert.assertNotNull(uShort64);
    org.junit.Assert.assertNotNull(byteItor65);
    org.junit.Assert.assertNotNull(uShort68);
    org.junit.Assert.assertNotNull(booleanArray71);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    org.junit.Assert.assertNotNull(booleanItor76);
    org.junit.Assert.assertNotNull(booleanSpliterator77);
    org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-7) + "'", int79.equals((-7)));
    org.junit.Assert.assertNotNull(obj80);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-7) + "'", int84.equals((-7)));
    org.junit.Assert.assertNotNull(uShort85);
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-7) + "'", int87.equals((-7)));
    org.junit.Assert.assertNotNull(uShort88);
    org.junit.Assert.assertNotNull(uOctet89);
    org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-7) + "'", int91.equals((-7)));
    org.junit.Assert.assertNotNull(uShort92);
    org.junit.Assert.assertNotNull(octetListArray93);
    org.junit.Assert.assertNotNull(octetListArray94);
    org.junit.Assert.assertNotNull(randomAccessArray95);
  }

  @Test
  public void test0580() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0580");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    double[] doubleArray7 = new double[] { (-1.0f) };
    simulatorSpacecraftState3.setMagField(doubleArray7);
    double[] doubleArray9 = simulatorSpacecraftState3.getSunVector();
    float[] floatArray10 = simulatorSpacecraftState3.getRv();
    float[] floatArray11 = simulatorSpacecraftState3.getMagnetometer();
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertNotNull(doubleArray9);
    org.junit.Assert.assertNotNull(floatArray10);
    org.junit.Assert.assertNotNull(floatArray11);
  }

  @Test
  public void test0581() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0581");
    java.lang.String str1 = opssat.simulator.threading.SimulatorNode
        .calcNMEAChecksum("UnknownDeviceDataTypeString{00000:00:00:00:-02}");
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "*01" + "'", str1.equals("*01"));
  }

  @Test
  public void test0582() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0582");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    float[] floatArray8 = simulatorSpacecraftState3.getQ();
    double double9 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray16 = new float[] { 28, 8 };
    simulatorSpacecraftState13.setQ(floatArray16);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    java.lang.String str23 = simulatorSpacecraftState21.getMagField();
    float[] floatArray24 = simulatorSpacecraftState21.getR();
    simulatorSpacecraftState13.setQ(floatArray24);
    java.lang.String str26 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray24);
    simulatorSpacecraftState3.setRv(floatArray24);
    java.lang.String str28 = simulatorSpacecraftState3.getSunVectorAsString();
    float[] floatArray29 = simulatorSpacecraftState3.getR();
    int int30 = simulatorSpacecraftState3.getSatsInView();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str23.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray24);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "UnknownGUIData" + "'",
        str26.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str28.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
  }

  @Test
  public void test0583() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0583");
    float[] floatArray0 = null;
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState4 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray7 = new float[] { 28, 8 };
    simulatorSpacecraftState4.setQ(floatArray7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double13 = simulatorSpacecraftState12.getLatitude();
    java.lang.String str14 = simulatorSpacecraftState12.getMagField();
    float[] floatArray15 = simulatorSpacecraftState12.getR();
    simulatorSpacecraftState4.setQ(floatArray15);
    java.lang.String str17 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray15);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    double double23 = simulatorSpacecraftState21.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    float[] floatArray30 = simulatorSpacecraftState27.getR();
    simulatorSpacecraftState21.setQ(floatArray30);
    float[] floatArray32 = simulatorSpacecraftState21.getV();
    opssat.simulator.celestia.CelestiaData celestiaData33 = new opssat.simulator.celestia.CelestiaData(
        floatArray15, floatArray32);
    float[] floatArray34 = celestiaData33.getQ();
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    int int40 = opssat.simulator.util.DateExtraction.getDayFromDate(date39);
    opssat.simulator.util.SimulatorData simulatorData42 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date43 = simulatorData42.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap47 = opssat.simulator.util.SimulatorData
        .computeDiff(date43, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader48 = new opssat.simulator.util.SimulatorHeader(
        false, date39, date46);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (short) 0, date39);
    celestiaData33.setDate(date39);
    int int51 = celestiaData33.getMonths();
    float[] floatArray52 = celestiaData33.getRv();
    opssat.simulator.celestia.CelestiaData celestiaData53 = new opssat.simulator.celestia.CelestiaData(
        floatArray0, floatArray52);
    try {
      int int54 = celestiaData53.getMinutes();
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(floatArray7);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 340.0d + "'", double13 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str14.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "UnknownGUIData" + "'",
        str17.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray30);
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date43);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(timeUnitMap47);
    org.junit.Assert.assertNotNull(floatArray52);
  }

  @Test
  public void test0584() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0584");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS
        .float2ByteArray(281475010265084L);
    try {
      byte[] byteArray6 = pOpticalReceiver2.runRawCommand((-13), byteArray5);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray5);
  }

  @Test
  public void test0585() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0585");
    java.math.BigInteger bigInteger0 = org.ccsds.moims.mo.mal.structures.ULong.MAX_VALUE;
    org.ccsds.moims.mo.mal.structures.ULong uLong1 = new org.ccsds.moims.mo.mal.structures.ULong(
        bigInteger0);
    java.lang.String str2 = uLong1.toString();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = uLong1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element4 = uLong1.createElement();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uLong1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int7 = octetList6.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = octetList6.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = octetList6.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException11 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray12 = wavFileException11.getSuppressed();
    boolean boolean13 = octetList6.equals(wavFileException11);
    org.ccsds.moims.mo.mal.structures.FloatList floatList15 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int16 = floatList15.getTypeShortForm();
    java.lang.Integer int17 = floatList15.getTypeShortForm();
    floatList15.clear();
    boolean boolean19 = octetList6.remove(floatList15);
    java.util.ListIterator<java.lang.Float> floatItor20 = floatList15.listIterator();
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = floatList15.getAreaNumber();
    boolean boolean22 = uLong1.equals(floatList15);
    floatList15.ensureCapacity(17);
    org.junit.Assert.assertNotNull(bigInteger0);
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "18446744073709551615" + "'",
        str2.equals("18446744073709551615"));
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(element4);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uOctet9);
    org.junit.Assert.assertNotNull(throwableArray12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-4) + "'", int16.equals((-4)));
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-4) + "'", int17.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    org.junit.Assert.assertNotNull(floatItor20);
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
  }

  @Test
  public void test0586() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0586");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    simulatorSpacecraftState3.setLongitude(13);
    simulatorSpacecraftState3.setAltitude(66);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray15 = new float[] { 28, 8 };
    simulatorSpacecraftState12.setQ(floatArray15);
    float[] floatArray17 = simulatorSpacecraftState12.getR();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState21.setLongitude(4);
    double[] doubleArray25 = new double[] { (-1.0f) };
    simulatorSpacecraftState21.setMagField(doubleArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState30 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double31 = simulatorSpacecraftState30.getLatitude();
    java.lang.String str32 = simulatorSpacecraftState30.getMagField();
    java.lang.String str33 = simulatorSpacecraftState30.toString();
    double[] doubleArray34 = simulatorSpacecraftState30.getSunVector();
    simulatorSpacecraftState21.setMagnetometer(doubleArray34);
    simulatorSpacecraftState12.setSunVector(doubleArray34);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState40 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState40.setLongitude(4);
    double[] doubleArray44 = new double[] { (-1.0f) };
    simulatorSpacecraftState40.setMagField(doubleArray44);
    simulatorSpacecraftState40.setLatitude(0.0d);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState51 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray54 = new float[] { 28, 8 };
    simulatorSpacecraftState51.setQ(floatArray54);
    float[] floatArray56 = simulatorSpacecraftState51.getR();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState60 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState60.setLongitude(4);
    double[] doubleArray64 = new double[] { (-1.0f) };
    simulatorSpacecraftState60.setMagField(doubleArray64);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState69 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double70 = simulatorSpacecraftState69.getLatitude();
    java.lang.String str71 = simulatorSpacecraftState69.getMagField();
    java.lang.String str72 = simulatorSpacecraftState69.toString();
    double[] doubleArray73 = simulatorSpacecraftState69.getSunVector();
    simulatorSpacecraftState60.setMagnetometer(doubleArray73);
    simulatorSpacecraftState51.setSunVector(doubleArray73);
    simulatorSpacecraftState40.setSunVector(doubleArray73);
    simulatorSpacecraftState12.setSunVector(doubleArray73);
    simulatorSpacecraftState3.setSunVector(doubleArray73);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertNotNull(doubleArray25);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 340.0d + "'", double31 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str32 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str32.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str33 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str33.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray34);
    org.junit.Assert.assertNotNull(doubleArray44);
    org.junit.Assert.assertNotNull(floatArray54);
    org.junit.Assert.assertNotNull(floatArray56);
    org.junit.Assert.assertNotNull(doubleArray64);
    org.junit.Assert.assertTrue("'" + double70 + "' != '" + 340.0d + "'", double70 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str71 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str71.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str72 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str72.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray73);
  }

  @Test
  public void test0587() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0587");
    opssat.simulator.models.AbstractModel abstractModel1 = new opssat.simulator.models.AbstractModel(
        "SimulatorHeader{autoStartSystem=false, autoStartTime=false, timeFactor=1, startDate=Thu May 23 15:09:39 UTC 2019, endDate=Thu May 23 15:09:39 UTC 2019}");
  }

  @Test
  public void test0588() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0588");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    float[] floatArray8 = simulatorSpacecraftState3.getQ();
    double double9 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray16 = new float[] { 28, 8 };
    simulatorSpacecraftState13.setQ(floatArray16);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    java.lang.String str23 = simulatorSpacecraftState21.getMagField();
    float[] floatArray24 = simulatorSpacecraftState21.getR();
    simulatorSpacecraftState13.setQ(floatArray24);
    java.lang.String str26 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray24);
    simulatorSpacecraftState3.setRv(floatArray24);
    java.lang.String str28 = simulatorSpacecraftState3.getMagField();
    float[] floatArray29 = simulatorSpacecraftState3.getQ();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str23.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray24);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "UnknownGUIData" + "'",
        str26.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
  }

  @Test
  public void test0589() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0589");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMinElevation();
    double double10 = gPSSatInViewScience8.getMaxElevation();
    double double11 = gPSSatInViewScience8.getMaxDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 48.0d + "'", double9 == 48.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 56.0d + "'", double10 == 56.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
  }

  @Test
  public void test0590() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0590");
    opssat.simulator.util.wav.WavFileException wavFileException1 = new opssat.simulator.util.wav.WavFileException(
        "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]");
  }

  @Test
  public void test0591() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0591");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    long long4 = simulatorSchedulerPiece3.getTime();
    int int5 = simulatorSchedulerPiece3.getInternalID();
    simulatorSchedulerPiece3.setExecuted(false);
    java.lang.String str8 = simulatorSchedulerPiece3.getFileString();
    long long9 = simulatorSchedulerPiece3.getTime();
    long long10 = simulatorSchedulerPiece3.getTime();
    java.lang.String str11 = simulatorSchedulerPiece3.getFileString();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str8.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 13L + "'", long9 == 13L);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 13L + "'", long10 == 13L);
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str11.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
  }

  @Test
  public void test0592() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0592");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    java.util.Date date8 = simulatorData1.getCurrentTime();
    simulatorData1.setMethodsExecuted(12);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertNotNull(date8);
  }

  @Test
  public void test0594() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0594");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    try {
      byte[] byteArray4 = pOpticalReceiver2.readFromMessageBuffer(16);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0596() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0596");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str28 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setTimeFactor(8);
    java.lang.String str31 = simulatorHeader20.getOrekitTLE2();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str28.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertNull(str31);
  }

  @Test
  public void test0597() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0597");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    endlessSingleStreamOperatingBuffer1.setOperatingIndex(41);
    int int9 = endlessSingleStreamOperatingBuffer1.getOperatingIndex();
    java.lang.String str10 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 41 + "'", int9 == 41);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str10.equals("byte[] {0x00,0x0F}"));
  }

  @Test
  public void test0598() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0598");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    java.util.logging.Logger logger3 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer4 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger3);
    byte[] byteArray6 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    endlessSingleStreamOperatingBuffer4.setDataFromByteArray(byteArray6);
    try {
      pOpticalReceiver2.simSetMessageBuffer(byteArray6);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray6);
  }

  @Test
  public void test0599() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0599");
    org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
        281475010265083L);
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date5 = simulatorData4.getCurrentTime();
    int int6 = opssat.simulator.util.DateExtraction.getDayFromDate(date5);
    opssat.simulator.util.SimulatorData simulatorData8 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date9 = simulatorData8.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData11 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date12 = simulatorData11.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap13 = opssat.simulator.util.SimulatorData
        .computeDiff(date9, date12);
    opssat.simulator.util.SimulatorHeader simulatorHeader14 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date12);
    java.util.Date date15 = simulatorHeader14.getEndDate();
    int int16 = simulatorHeader14.getMinuteStartDate();
    opssat.simulator.util.SimulatorData simulatorData18 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long19 = simulatorData18.getCurrentTimeMillis();
    java.lang.String str20 = simulatorData18.getCurrentDay();
    java.lang.String str21 = simulatorData18.getUTCCurrentTime2();
    java.lang.String str22 = simulatorData18.getCurrentDay();
    java.util.Date date23 = simulatorData18.getCurrentTime();
    int int24 = opssat.simulator.util.DateExtraction.getMinuteFromDate(date23);
    simulatorHeader14.setEndDate(date23);
    int int26 = opssat.simulator.util.DateExtraction.getHourFromDate(date23);
    boolean boolean27 = duration1.equals(int26);
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = duration1.getServiceNumber();
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertNotNull(timeUnitMap13);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertNotNull(uShort28);
  }

  @Test
  public void test0600() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0600");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    int int5 = opssat.simulator.util.DateExtraction.getDayFromDate(date4);
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap12 = opssat.simulator.util.SimulatorData
        .computeDiff(date8, date11);
    opssat.simulator.util.SimulatorHeader simulatorHeader13 = new opssat.simulator.util.SimulatorHeader(
        false, date4, date11);
    java.lang.String str14 = simulatorHeader13.getEndDateString();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    int int19 = opssat.simulator.util.DateExtraction.getDayFromDate(date18);
    opssat.simulator.util.SimulatorData simulatorData21 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date22 = simulatorData21.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap26 = opssat.simulator.util.SimulatorData
        .computeDiff(date22, date25);
    opssat.simulator.util.SimulatorHeader simulatorHeader27 = new opssat.simulator.util.SimulatorHeader(
        false, date18, date25);
    java.util.Date date28 = simulatorHeader27.getEndDate();
    boolean boolean29 = simulatorHeader27.isAutoStartSystem();
    int int30 = simulatorHeader27.getDayStartDate();
    boolean boolean31 = simulatorHeader27.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    int int36 = opssat.simulator.util.DateExtraction.getDayFromDate(date35);
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap43 = opssat.simulator.util.SimulatorData
        .computeDiff(date39, date42);
    opssat.simulator.util.SimulatorHeader simulatorHeader44 = new opssat.simulator.util.SimulatorHeader(
        false, date35, date42);
    simulatorHeader27.setStartDate(date42);
    simulatorHeader13.setStartDate(date42);
    int int47 = opssat.simulator.util.DateExtraction.getHourFromDate(date42);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date50 = simulatorData49.getCurrentTime();
    java.util.Date date51 = simulatorData49.getCurrentTime();
    opssat.simulator.util.SimulatorHeader simulatorHeader52 = new opssat.simulator.util.SimulatorHeader(
        false, date42, date51);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(timeUnitMap12);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(timeUnitMap26);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(timeUnitMap43);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertNotNull(date51);
  }

  @Test
  public void test0601() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0601");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setUseOrekitPropagator(true);
    simulatorHeader12.setUseCelestia(false);
    boolean boolean19 = simulatorHeader12.isAutoStartTime();
    java.lang.String str20 = simulatorHeader12.getStartDateString();
    java.lang.String str21 = simulatorHeader12.toString();
    boolean boolean23 = simulatorHeader12.validateTimeFactor(56);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
  }

  @Test
  public void test0603() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0603");
    java.util.logging.Logger logger2 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer3 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger2);
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    endlessSingleStreamOperatingBuffer3.setDataFromByteArray(byteArray5);
    byte[] byteArray8 = endlessSingleStreamOperatingBuffer3.getDataAsByteArray(42);
    try {
      opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.putInt16InByteArray(32, 97, byteArray8);
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 97");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertNotNull(byteArray8);
  }

  @Test
  public void test0604() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0604");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    java.util.Iterator<java.lang.String> strItor1 = stringList0.iterator();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = stringList0.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray9 = new float[] { 28, 8 };
    simulatorSpacecraftState6.setQ(floatArray9);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double15 = simulatorSpacecraftState14.getLatitude();
    java.lang.String str16 = simulatorSpacecraftState14.getMagField();
    float[] floatArray17 = simulatorSpacecraftState14.getR();
    simulatorSpacecraftState6.setQ(floatArray17);
    java.lang.String str19 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double24 = simulatorSpacecraftState23.getLatitude();
    double double25 = simulatorSpacecraftState23.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    float[] floatArray32 = simulatorSpacecraftState29.getR();
    simulatorSpacecraftState23.setQ(floatArray32);
    float[] floatArray34 = simulatorSpacecraftState23.getV();
    opssat.simulator.celestia.CelestiaData celestiaData35 = new opssat.simulator.celestia.CelestiaData(
        floatArray17, floatArray34);
    float[] floatArray36 = celestiaData35.getQ();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (short) 0, date41);
    celestiaData35.setDate(date41);
    int int53 = celestiaData35.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState57 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray60 = new float[] { 28, 8 };
    simulatorSpacecraftState57.setQ(floatArray60);
    celestiaData35.setQ(floatArray60);
    int int63 = stringList0.lastIndexOf(celestiaData35);
    celestiaData35
        .setDate("{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:32 UTC 2019}");
    int int66 = celestiaData35.getDays();
    celestiaData35.setDnx("0.0");
    opssat.simulator.util.SimulatorData simulatorData70 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long71 = simulatorData70.getCurrentTimeMillis();
    java.lang.String str72 = simulatorData70.getCurrentDay();
    java.lang.String str73 = simulatorData70.getUTCCurrentTime2();
    java.lang.String str74 = simulatorData70.getCurrentDay();
    java.util.Date date75 = simulatorData70.getCurrentTime();
    int int76 = opssat.simulator.util.DateExtraction.getMonthFromDate(date75);
    int int77 = opssat.simulator.util.DateExtraction.getYearFromDate(date75);
    celestiaData35.setDate(date75);
    org.junit.Assert.assertNotNull(strItor1);
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(floatArray9);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 340.0d + "'", double15 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str16.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "UnknownGUIData" + "'",
        str19.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 340.0d + "'", double24 == 340.0d);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
    org.junit.Assert.assertNotNull(date75);
  }

  @Test
  public void test0605() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0605");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        50, (-11), "01000.0000");
    java.lang.String str4 = simulatorSchedulerPiece3.getSchedulerOutput();
    java.lang.String str5 = simulatorSchedulerPiece3.getFileString();
    org.junit.Assert.assertTrue(
        "'" + str4 + "' != '" + "00000:00:00:00:050  -11   01000.0000   executed false   | " + "'",
        str4.equals("00000:00:00:00:050  -11   01000.0000   executed false   | "));
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '" + "00000:00:00:00:050|0000000000000000050|-11|01000.0000" + "'",
        str5.equals("00000:00:00:00:050|0000000000000000050|-11|01000.0000"));
  }

  @Test
  public void test0606() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0606");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    int int72 = celestiaData43.getMonths();
    int int73 = celestiaData43.getYears();
    org.ccsds.moims.mo.mal.structures.Identifier identifier74 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.OctetList octetList75 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int76 = octetList75.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort77 = octetList75.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor78 = octetList75.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor80 = new opssat.simulator.util.ArgumentDescriptor(
        octetList75, "hi!");
    argumentDescriptor80.restoreArgument();
    argumentDescriptor80.restoreArgument();
    argumentDescriptor80.restoreArgument();
    java.lang.String str84 = argumentDescriptor80.toString();
    boolean boolean85 = identifier74.equals(str84);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState89 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray92 = new float[] { 28, 8 };
    simulatorSpacecraftState89.setQ(floatArray92);
    float[] floatArray94 = simulatorSpacecraftState89.getQ();
    double double95 = simulatorSpacecraftState89.getLongitude();
    boolean boolean96 = identifier74.equals(simulatorSpacecraftState89);
    float[] floatArray97 = simulatorSpacecraftState89.getQ();
    celestiaData43.setRv(floatArray97);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-7) + "'", int76.equals((-7)));
    org.junit.Assert.assertNotNull(uShort77);
    org.junit.Assert.assertNotNull(byteItor78);
    org.junit.Assert.assertTrue("'" + str84 + "' != '" + "" + "'", str84.equals(""));
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    org.junit.Assert.assertNotNull(floatArray92);
    org.junit.Assert.assertNotNull(floatArray94);
    org.junit.Assert.assertTrue("'" + double95 + "' != '" + (-1.0d) + "'", double95 == (-1.0d));
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
    org.junit.Assert.assertNotNull(floatArray97);
  }

  @Test
  public void test0607() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0607");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.incrementMethods();
    simulatorData1.toggleSimulatorRunning();
    int int6 = simulatorData1.getTimeFactor();
    simulatorData1.setTimeFactor(37);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
  }

  @Test
  public void test0608() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0608");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        44);
    boolean boolean2 = simulatorData1.isTimeRunning();
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
  }

  @Test
  public void test0612() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0612");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    float[] floatArray6 = simulatorSpacecraftState3.getR();
    int int7 = simulatorSpacecraftState3.getSatsInView();
    int int8 = simulatorSpacecraftState3.getSatsInView();
    java.lang.String str9 = simulatorSpacecraftState3.getSunVectorAsString();
    simulatorSpacecraftState3.setLatitude(281475010265073L);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue(
        "'" + str9 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str9.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
  }

  @Test
  public void test0614() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0614");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    endlessSingleStreamOperatingBuffer1.setOperatingIndex(33);
    java.lang.String str11 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    boolean boolean13 = endlessSingleStreamOperatingBuffer1
        .preparePath("{counter=-18, methodsExecuted=0, currentTime=Thu May 23 15:09:50 UTC 2019}");
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str11.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
  }

  @Test
  public void test0615() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0615");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long2 = simulatorData1.getCurrentTimeMillis();
    boolean boolean3 = simulatorData1.isSimulatorRunning();
    java.lang.String str4 = simulatorData1.getUTCCurrentTime2();
    boolean boolean5 = simulatorData1.isSimulatorRunning();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
  }

  @Test
  public void test0616() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0616");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    simulatorHeader12.setOrekitTLE1("");
    java.util.Date date17 = simulatorHeader12.parseStringIntoDate("2019/05/23-15:09:35");
    java.lang.String str18 = simulatorHeader12.toFileString();
    simulatorHeader12.setOrekitTLE2("[1, 11111]");
    boolean boolean21 = simulatorHeader12.isAutoStartSystem();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(date17);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
  }

  @Test
  public void test0617() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0617");
    opssat.simulator.util.SimulatorTimer simulatorTimer2 = new opssat.simulator.util.SimulatorTimer(
        "SimulatorData", 1L);
    boolean boolean3 = simulatorTimer2.isElapsed();
    simulatorTimer2.setDuration(100L);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
  }

  @Test
  public void test0619() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0619");
    java.lang.Long[] longArray3 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList4 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList4, longArray3);
    boolean boolean7 = longList4.add(281474993487885L);
    java.util.Iterator<java.lang.Long> longItor8 = longList4.iterator();
    opssat.simulator.models.AbstractModel abstractModel10 = new opssat.simulator.models.AbstractModel(
        "SimulatorHeader{autoStartSystem=false, autoStartTime=false, timeFactor=1, startDate=Thu May 23 15:09:39 UTC 2019, endDate=Thu May 23 15:09:39 UTC 2019}");
    opssat.simulator.models.AbstractModel abstractModel12 = new opssat.simulator.models.AbstractModel(
        "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]");
    java.lang.Long[] longArray16 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList17 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList17, longArray16);
    boolean boolean20 = longList17.add(281474993487885L);
    org.ccsds.moims.mo.mal.structures.URI uRI22 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet23 = uRI22.getAreaVersion();
    opssat.simulator.models.AbstractModel abstractModel25 = new opssat.simulator.models.AbstractModel(
        "0100.0000");
    boolean boolean26 = uOctet23.equals(abstractModel25);
    boolean boolean27 = longList17.contains(abstractModel25);
    opssat.simulator.models.AbstractModel abstractModel29 = new opssat.simulator.models.AbstractModel(
        "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]");
    opssat.simulator.models.AbstractModel abstractModel31 = new opssat.simulator.models.AbstractModel(
        "SimulatorHeader{autoStartSystem=true, autoStartTime=false, timeFactor=1, startDate=Thu May 23 15:09:44 UTC 2019, endDate=Thu May 23 15:09:44 UTC 2019}");
    opssat.simulator.models.AbstractModel abstractModel33 = new opssat.simulator.models.AbstractModel(
        "52");
    opssat.simulator.models.AbstractModel[] abstractModelArray34 = new opssat.simulator.models.AbstractModel[] {
        abstractModel10, abstractModel12, abstractModel25, abstractModel29, abstractModel31,
        abstractModel33 };
    try {
      opssat.simulator.models.AbstractModel[] abstractModelArray35 = longList4
          .toArray(abstractModelArray34);
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayStoreException; message: null");
    } catch (java.lang.ArrayStoreException e) {
    }
    org.junit.Assert.assertNotNull(longArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertNotNull(longItor8);
    org.junit.Assert.assertNotNull(longArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(uOctet23);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertNotNull(abstractModelArray34);
  }

  @Test
  public void test0620() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0620");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    celestiaData32.setDate(":");
    try {
      java.lang.String str35 = celestiaData32.toString();
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
  }

  @Test
  public void test0621() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0621");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        12, 11, "-100.0000");
    simulatorSchedulerPiece3.setExecuted(true);
  }

  @Test
  public void test0622() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0622");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    long long3 = uInteger1.getValue();
    long long4 = uInteger1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uInteger1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = uInteger1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    java.lang.Integer int13 = octetList7.getTypeShortForm();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    boolean boolean23 = booleanList17.remove(10.0f);
    int int24 = octetList7.indexOf(booleanList17);
    octetList7.trimToSize();
    org.ccsds.moims.mo.mal.structures.Element element26 = octetList7.createElement();
    boolean boolean27 = uInteger1.equals(octetList7);
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = uInteger1.getServiceNumber();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 13L + "'", long3 == 13L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-7) + "'", int13.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    org.junit.Assert.assertNotNull(element26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertNotNull(uShort28);
  }

  @Test
  public void test0623() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0623");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    java.lang.Float[] floatArray6 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList7 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean8 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList7, floatArray6);
    boolean boolean10 = floatList7.add((-1.0f));
    floatList7.clear();
    java.util.stream.Stream<java.lang.Float> floatStream12 = floatList7.stream();
    java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean19 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
    java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean24 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
    boolean boolean25 = byteList18.retainAll(intList23);
    java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList29 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
    int int32 = intList29.lastIndexOf((byte) 10);
    boolean boolean33 = intList23.retainAll(intList29);
    boolean boolean34 = floatList7.containsAll(intList29);
    java.util.Spliterator<java.lang.Integer> intSpliterator35 = intList29.spliterator();
    java.util.stream.Stream<java.lang.Integer> intStream36 = intList29.parallelStream();
    java.lang.String str37 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(intList29);
    java.util.ListIterator<java.lang.Integer> intItor38 = intList29.listIterator();
    boolean boolean39 = octetList0.removeAll(intList29);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertNotNull(floatStream12);
    org.junit.Assert.assertNotNull(byteArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertNotNull(intArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertNotNull(intArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    org.junit.Assert.assertNotNull(intSpliterator35);
    org.junit.Assert.assertNotNull(intStream36);
    org.junit.Assert.assertTrue("'" + str37 + "' != '" + "UnknownGUIData" + "'",
        str37.equals("UnknownGUIData"));
    org.junit.Assert.assertNotNull(intItor38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
  }

  @Test
  public void test0624() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0624");
    opssat.simulator.models.AbstractModel abstractModel1 = new opssat.simulator.models.AbstractModel(
        "hi!");
  }

  @Test
  public void test0625() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0625");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    boolean boolean31 = simulatorHeader12.isAutoStartTime();
    simulatorHeader12.setUpdateInternet(false);
    simulatorHeader12.setCelestiaPort(14);
    java.lang.String str36 = simulatorHeader12.getOrekitTLE2();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNull(str36);
  }

  @Test
  public void test0626() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0626");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    celestiaData32.setDate(":");
    celestiaData32.setAos("030949.909");
    float[] floatArray37 = celestiaData32.getQ();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray37);
  }

  @Test
  public void test0627() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0627");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getMonths();
    java.lang.String str51 = celestiaData32.getDnx();
    int int52 = celestiaData32.getSeconds();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNull(str51);
  }

  @Test
  public void test0628() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0628");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    int int72 = celestiaData43.getYears();
    celestiaData43.setAos(
        "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:09:41 UTC\nendDate=2019:05:23 15:09:41 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO");
    int int75 = celestiaData43.getHours();
    int int76 = celestiaData43.getMinutes();
    opssat.simulator.util.SimulatorData simulatorData78 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData78.setCounter((-1));
    simulatorData78.feedTimeElapsed(21);
    java.lang.String str83 = simulatorData78.getCurrentDay();
    simulatorData78.toggleSimulatorRunning();
    java.util.Date date85 = simulatorData78.getCurrentTime();
    celestiaData43.setDate(date85);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNotNull(date85);
  }

  @Test
  public void test0629() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0629");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int4 = octetList3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
    java.lang.Object[] objArray6 = octetList3.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = octetList7.getAreaNumber();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator22 = booleanList17.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    java.lang.Object obj25 = octetList23.clone();
    octetList23.trimToSize();
    boolean boolean27 = booleanList17.contains(octetList23);
    org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int29 = octetList28.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort30 = octetList28.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList31 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int32 = octetList31.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = octetList31.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = octetList31.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList35 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int36 = octetList35.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = octetList35.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray38 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList3, octetList7, octetList23, octetList28, octetList31, octetList35 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray39 = octetList0
        .toArray(octetListArray38);
    octetList0.ensureCapacity(28);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = octetList0.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element43 = octetList0.createElement();
    java.lang.String str44 = octetList0.toString();
    org.ccsds.moims.mo.mal.structures.LongList longList46 = new org.ccsds.moims.mo.mal.structures.LongList(
        (short) 100);
    boolean boolean48 = longList46.add(281475010265075L);
    int int49 = octetList0.lastIndexOf(boolean48);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-7) + "'", int4.equals((-7)));
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertNotNull(booleanSpliterator22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(obj25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-7) + "'", int29.equals((-7)));
    org.junit.Assert.assertNotNull(uShort30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32.equals((-7)));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(uOctet34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-7) + "'", int36.equals((-7)));
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(octetListArray38);
    org.junit.Assert.assertNotNull(octetListArray39);
    org.junit.Assert.assertNotNull(uOctet42);
    org.junit.Assert.assertNotNull(element43);
    org.junit.Assert.assertTrue("'" + str44 + "' != '" + "[]" + "'", str44.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
  }

  @Test
  public void test0630() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0630");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date2 = simulatorData1.getCurrentTime();
    java.util.Date date3 = simulatorData1.getCurrentTime();
    int int4 = simulatorData1.getTimeFactor();
    simulatorData1.setCounter(65535);
    java.lang.String str7 = simulatorData1.getCurrentDay();
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0631() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0631");
    org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
        7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState5 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray8 = new float[] { 28, 8 };
    simulatorSpacecraftState5.setQ(floatArray8);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double14 = simulatorSpacecraftState13.getLatitude();
    java.lang.String str15 = simulatorSpacecraftState13.getMagField();
    float[] floatArray16 = simulatorSpacecraftState13.getR();
    simulatorSpacecraftState5.setQ(floatArray16);
    boolean boolean18 = duration1.equals(simulatorSpacecraftState5);
    java.lang.Integer int19 = duration1.getTypeShortForm();
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 340.0d + "'", double14 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str15.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19.equals(3));
  }

  @Test
  public void test0632() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0632");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "*5D");
  }

  @Test
  public void test0633() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0633");
    org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList1.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor6 = new opssat.simulator.util.ArgumentDescriptor(
        octetList1, "hi!");
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    java.lang.String str10 = argumentDescriptor6.toString();
    boolean boolean11 = identifier0.equals(str10);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray18 = new float[] { 28, 8 };
    simulatorSpacecraftState15.setQ(floatArray18);
    float[] floatArray20 = simulatorSpacecraftState15.getQ();
    double double21 = simulatorSpacecraftState15.getLongitude();
    boolean boolean22 = identifier0.equals(simulatorSpacecraftState15);
    float[] floatArray23 = simulatorSpacecraftState15.getQ();
    float[] floatArray24 = simulatorSpacecraftState15.getR();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertNotNull(floatArray18);
    org.junit.Assert.assertNotNull(floatArray20);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertNotNull(floatArray23);
    org.junit.Assert.assertNotNull(floatArray24);
  }

  @Test
  public void test0634() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0634");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        '#', 281474993487874L, 281474993487880L, 10.0f, 31, 1.0d, (-9), 'a');
    double double9 = gPSSatInViewScience8.getMaxElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
  }

  @Test
  public void test0635() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0635");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    java.lang.Object obj2 = octetList0.clone();
    octetList0.trimToSize();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList0.iterator();
    java.util.stream.Stream<java.lang.Byte> byteStream5 = octetList0.stream();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience14 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double15 = gPSSatInViewScience14.getMaxDistance();
    double double16 = gPSSatInViewScience14.getMaxDistance();
    double double17 = gPSSatInViewScience14.getStdDevElevation();
    double double18 = gPSSatInViewScience14.getMaxDistance();
    double double19 = gPSSatInViewScience14.getMinElevation();
    double double20 = gPSSatInViewScience14.getMaxDistance();
    int int21 = octetList0.indexOf(double20);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertNotNull(byteStream5);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 11111.0d + "'", double17 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 48.0d + "'", double19 == 48.0d);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
  }

  @Test
  public void test0636() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0636");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    int int7 = booleanList3.size();
    java.lang.Byte[] byteArray11 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList12 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList12, byteArray11);
    java.lang.Object[] objArray14 = byteList12.toArray();
    java.util.Iterator<java.lang.Byte> byteItor15 = byteList12.iterator();
    boolean boolean16 = booleanList3.contains(byteList12);
    java.util.Iterator<java.lang.Boolean> booleanItor17 = booleanList3.iterator();
    org.ccsds.moims.mo.mal.structures.Duration duration19 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet20 = duration19.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = duration19.getAreaNumber();
    boolean boolean22 = booleanList3.remove(duration19);
    org.ccsds.moims.mo.mal.structures.Element element23 = duration19.createElement();
    org.ccsds.moims.mo.mal.structures.UShort uShort24 = duration19.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList25 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int26 = octetList25.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = octetList25.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet28 = octetList25.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException30 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray31 = wavFileException30.getSuppressed();
    boolean boolean32 = octetList25.equals(wavFileException30);
    org.ccsds.moims.mo.mal.structures.FloatList floatList34 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int35 = floatList34.getTypeShortForm();
    java.lang.Integer int36 = floatList34.getTypeShortForm();
    floatList34.clear();
    boolean boolean38 = octetList25.remove(floatList34);
    java.lang.Object obj39 = octetList25.clone();
    org.ccsds.moims.mo.mal.structures.StringList stringList40 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList42 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor43 = shortList42.listIterator();
    boolean boolean44 = stringList40.equals(shortList42);
    boolean boolean45 = shortList42.isEmpty();
    org.ccsds.moims.mo.mal.structures.UShort uShort46 = shortList42.getServiceNumber();
    java.lang.Short[] shortArray49 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList50 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean51 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList50, shortArray49);
    shortList50.clear();
    boolean boolean53 = shortList50.isEmpty();
    boolean boolean55 = shortList50.equals(5);
    org.ccsds.moims.mo.mal.structures.StringList stringList56 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList58 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor59 = shortList58.listIterator();
    boolean boolean60 = stringList56.equals(shortList58);
    java.lang.Integer int61 = stringList56.getTypeShortForm();
    int int62 = shortList50.indexOf(int61);
    boolean boolean63 = shortList42.equals(shortList50);
    java.lang.Byte[] byteArray68 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList69 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean70 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList69, byteArray68);
    java.lang.Integer[] intArray73 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList74 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean75 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList74, intArray73);
    boolean boolean76 = byteList69.retainAll(intList74);
    java.lang.Integer[] intArray79 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList80 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean81 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList80, intArray79);
    int int83 = intList80.lastIndexOf((byte) 10);
    boolean boolean84 = intList74.removeAll(intList80);
    java.util.Spliterator<java.lang.Integer> intSpliterator85 = intList74.spliterator();
    java.util.Iterator<java.lang.Integer> intItor86 = intList74.iterator();
    boolean boolean87 = shortList50.retainAll(intList74);
    boolean boolean88 = octetList25.retainAll(intList74);
    boolean boolean89 = duration19.equals(octetList25);
    try {
      java.util.List<java.lang.Byte> byteList92 = octetList25.subList(52, (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 1");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    org.junit.Assert.assertNotNull(byteArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(objArray14);
    org.junit.Assert.assertNotNull(byteItor15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(booleanItor17);
    org.junit.Assert.assertNotNull(uOctet20);
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertNotNull(element23);
    org.junit.Assert.assertNotNull(uShort24);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-7) + "'", int26.equals((-7)));
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertNotNull(uOctet28);
    org.junit.Assert.assertNotNull(throwableArray31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", !boolean32);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-4) + "'", int35.equals((-4)));
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-4) + "'", int36.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    org.junit.Assert.assertNotNull(obj39);
    org.junit.Assert.assertNotNull(shortItor43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertNotNull(uShort46);
    org.junit.Assert.assertNotNull(shortArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    org.junit.Assert.assertNotNull(shortItor59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-15) + "'", int61.equals((-15)));
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertNotNull(byteArray68);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertNotNull(intArray73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    org.junit.Assert.assertNotNull(intArray79);
    org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84);
    org.junit.Assert.assertNotNull(intSpliterator85);
    org.junit.Assert.assertNotNull(intItor86);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", !boolean87);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", !boolean89);
  }

  @Test
  public void test0637() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0637");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    java.lang.Long long3 = uInteger1.getShortForm();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        uInteger1, "Alive");
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = uInteger1.getAreaNumber();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 281474993487884L + "'",
        long3.equals(281474993487884L));
    org.junit.Assert.assertNotNull(uShort6);
  }

  @Test
  public void test0638() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0638");
    org.ccsds.moims.mo.mal.structures.Identifier identifier1 = new org.ccsds.moims.mo.mal.structures.Identifier(
        "SimulatorData");
    java.lang.String str2 = identifier1.toString();
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long5 = simulatorData4.getCurrentTimeMillis();
    java.lang.String str6 = simulatorData4.getCurrentDay();
    java.lang.String str7 = simulatorData4.getUTCCurrentTime2();
    java.lang.String str8 = simulatorData4.getCurrentDay();
    boolean boolean9 = simulatorData4.isSimulatorRunning();
    long long10 = simulatorData4.getCurrentTimeMillis();
    boolean boolean11 = identifier1.equals(simulatorData4);
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "SimulatorData" + "'",
        str2.equals("SimulatorData"));
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
  }

  @Test
  public void test0639() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0639");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "SimulatorData");
    java.lang.String str2 = simulatorDeviceData1.getName();
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "SimulatorData" + "'",
        str2.equals("SimulatorData"));
  }

  @Test
  public void test0641() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0641");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    simulatorHeader20.setUpdateInternet(true);
    java.util.Date date23 = null;
    simulatorHeader20.setEndDate(date23);
    java.util.Date date25 = simulatorHeader20.getStartDate();
    simulatorHeader20.setUseOrekitPropagator(false);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date25);
  }

  @Test
  public void test0642() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0642");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    java.lang.String str17 = simulatorHeader12.toString();
    boolean boolean18 = simulatorHeader12.isUseOrekitPropagator();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
  }

  @Test
  public void test0643() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0643");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.setName("[-1.0, 100.0, 10.0, 10.0]");
    try {
      argumentDescriptor5.setFloatTypeByIndex(281475010265075L, 45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: org.ccsds.moims.mo.mal.structures.OctetList cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
  }

  @Test
  public void test0644() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0644");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setLatitude((-4));
    java.lang.String str8 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setSatsInView((-4));
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double15 = simulatorSpacecraftState14.getLatitude();
    java.lang.String str16 = simulatorSpacecraftState14.getMagField();
    java.lang.String str17 = simulatorSpacecraftState14.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    java.lang.String str23 = simulatorSpacecraftState21.getMagField();
    java.lang.String str24 = simulatorSpacecraftState21.toString();
    double[] doubleArray25 = simulatorSpacecraftState21.getSunVector();
    simulatorSpacecraftState14.setMagnetometer(doubleArray25);
    simulatorSpacecraftState3.setSunVector(doubleArray25);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str8.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 340.0d + "'", double15 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str16.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str17 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str17.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str23.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str24.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray25);
  }

  @Test
  public void test0645() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0645");
    try {
      opssat.simulator.orekit.GPSSatInView gPSSatInView2 = new opssat.simulator.orekit.GPSSatInView(
          "2019", 281475010265070L);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
    } catch (java.lang.StringIndexOutOfBoundsException e) {
    }
  }

  @Test
  public void test0646() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0646");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    java.lang.Long long57 = shortList2.getShortForm();
    try {
      java.lang.Short short59 = shortList2.get((short) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 1, Size: 0");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertTrue("'" + long57 + "' != '" + 281475010265079L + "'",
        long57.equals(281475010265079L));
  }

  @Test
  public void test0647() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0647");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI4.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI1, uRI4, uRI7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean10 = java.util.Collections
        .addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime11 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int12 = uRIList9.indexOf(fineTime11);
    uRIList9.ensureCapacity(40);
    java.lang.Object obj15 = uRIList9.clone();
    java.util.ListIterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor16 = uRIList9
        .listIterator();
    java.lang.Double[] doubleArray21 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList22 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList22, doubleArray21);
    org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray25 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort24 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList26 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean27 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList26,
        uShortArray25);
    uShortList26.ensureCapacity(0);
    int int31 = uShortList26.indexOf((byte) 1);
    uShortList26.clear();
    java.lang.Long[] longArray35 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList36 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean37 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList36, longArray35);
    java.lang.Object obj38 = longList36.clone();
    boolean boolean39 = uShortList26.contains(longList36);
    boolean boolean40 = doubleList22.equals(boolean39);
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    int int47 = intList44.lastIndexOf((byte) 10);
    boolean boolean48 = doubleList22.removeAll(intList44);
    org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList49.ensureCapacity(13);
    java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean58 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
    java.lang.Integer[] intArray61 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList62 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean63 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
    boolean boolean64 = byteList57.retainAll(intList62);
    boolean boolean65 = octetList49.containsAll(intList62);
    boolean boolean66 = doubleList22.removeAll(intList62);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState70 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double71 = simulatorSpacecraftState70.getLatitude();
    java.lang.String str72 = simulatorSpacecraftState70.getMagField();
    java.lang.String str73 = simulatorSpacecraftState70.toString();
    double[] doubleArray74 = simulatorSpacecraftState70.getSunVector();
    simulatorSpacecraftState70.setSatsInView((short) 10);
    double double77 = simulatorSpacecraftState70.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState81 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double82 = simulatorSpacecraftState81.getLatitude();
    double double83 = simulatorSpacecraftState81.getLongitude();
    float[] floatArray84 = simulatorSpacecraftState81.getQ();
    simulatorSpacecraftState70.setRv(floatArray84);
    int int86 = intList62.lastIndexOf(simulatorSpacecraftState70);
    int int87 = uRIList9.indexOf(intList62);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertNotNull(uRIArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    org.junit.Assert.assertNotNull(obj15);
    org.junit.Assert.assertNotNull(uRIItor16);
    org.junit.Assert.assertNotNull(doubleArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertNotNull(uShort24);
    org.junit.Assert.assertNotNull(uShortArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
    org.junit.Assert.assertNotNull(longArray35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertNotNull(obj38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertNotNull(byteArray56);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
    org.junit.Assert.assertNotNull(intArray61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + 340.0d + "'", double71 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str72 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str72.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str73 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str73.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray74);
    org.junit.Assert.assertTrue("'" + double77 + "' != '" + 340.0d + "'", double77 == 340.0d);
    org.junit.Assert.assertTrue("'" + double82 + "' != '" + 340.0d + "'", double82 == 340.0d);
    org.junit.Assert.assertTrue("'" + double83 + "' != '" + (-1.0d) + "'", double83 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray84);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
  }

  @Test
  public void test0648() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0648");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    java.lang.String str10 = argumentDescriptor5.toString();
    try {
      argumentDescriptor5.setFloatTypeByIndex(281475010265078L, (-7));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: org.ccsds.moims.mo.mal.structures.OctetList cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
  }

  @Test
  public void test0650() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0650");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.Element element6 = doubleList1.createElement();
    java.lang.Long long7 = doubleList1.getShortForm();
    java.util.stream.Stream<java.lang.Double> doubleStream8 = doubleList1.stream();
    java.lang.Long long9 = doubleList1.getShortForm();
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(element6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281475010265083L + "'",
        long7.equals(281475010265083L));
    org.junit.Assert.assertNotNull(doubleStream8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265083L + "'",
        long9.equals(281475010265083L));
  }

  @Test
  public void test0652() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0652");
    org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(
        16);
    long long2 = fineTime1.getValue();
    java.lang.Integer int3 = fineTime1.getTypeShortForm();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 16L + "'", long2 == 16L);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + 17 + "'", int3.equals(17));
  }

  @Test
  public void test0653() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0653");
    opssat.simulator.util.wav.WavFileException wavFileException1 = new opssat.simulator.util.wav.WavFileException(
        "{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:34 UTC 2019}");
    java.lang.Throwable[] throwableArray2 = wavFileException1.getSuppressed();
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException();
    java.lang.Throwable[] throwableArray4 = wavFileException3.getSuppressed();
    wavFileException1.addSuppressed(wavFileException3);
    org.junit.Assert.assertNotNull(throwableArray2);
    org.junit.Assert.assertNotNull(throwableArray4);
  }

  @Test
  public void test0654() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0654");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    try {
      pOpticalReceiver2.simSetSuccessRate(54);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0655() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0655");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor7 = booleanList3.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator8 = booleanList3.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList9 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int10 = octetList9.getTypeShortForm();
    java.lang.Object obj11 = octetList9.clone();
    octetList9.trimToSize();
    boolean boolean13 = booleanList3.contains(octetList9);
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor16 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885", "[-1.0, 100.0, 10.0, 10.0]");
    boolean boolean17 = octetList9.remove("[-1.0, 100.0, 10.0, 10.0]");
    java.util.ListIterator<java.lang.Byte> byteItor18 = octetList9.listIterator();
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertNotNull(booleanItor7);
    org.junit.Assert.assertNotNull(booleanSpliterator8);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-7) + "'", int10.equals((-7)));
    org.junit.Assert.assertNotNull(obj11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertNotNull(byteItor18);
  }

  @Test
  public void test0656() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0656");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "%05d:%02d:%02d:%02d:%03d");
    java.lang.String str2 = simulatorDeviceData1.getName();
    java.lang.String str3 = simulatorDeviceData1.getName();
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "%05d:%02d:%02d:%02d:%03d" + "'",
        str2.equals("%05d:%02d:%02d:%02d:%03d"));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "%05d:%02d:%02d:%02d:%03d" + "'",
        str3.equals("%05d:%02d:%02d:%02d:%03d"));
  }

  @Test
  public void test0657() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0657");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    java.lang.String str6 = simulatorSpacecraftState3.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState10 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState10.setLongitude(4);
    double[] doubleArray14 = new double[] { (-1.0f) };
    simulatorSpacecraftState10.setMagField(doubleArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState19 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double20 = simulatorSpacecraftState19.getLatitude();
    java.lang.String str21 = simulatorSpacecraftState19.getMagField();
    java.lang.String str22 = simulatorSpacecraftState19.toString();
    double[] doubleArray23 = simulatorSpacecraftState19.getSunVector();
    simulatorSpacecraftState10.setMagnetometer(doubleArray23);
    simulatorSpacecraftState3.setMagField(doubleArray23);
    float[] floatArray26 = simulatorSpacecraftState3.getRv();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState30 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray33 = new float[] { 28, 8 };
    simulatorSpacecraftState30.setQ(floatArray33);
    float[] floatArray38 = new float[] { 281474993487887L, 281475010265070L, 281474993487881L };
    simulatorSpacecraftState30.setRv(floatArray38);
    double[][] doubleArray40 = null;
    simulatorSpacecraftState30.setRotation(doubleArray40);
    float[] floatArray42 = simulatorSpacecraftState30.getR();
    double[] doubleArray43 = simulatorSpacecraftState30.getSunVector();
    simulatorSpacecraftState3.setMagField(doubleArray43);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertNotNull(doubleArray14);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 340.0d + "'", double20 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str21 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str21.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str22.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray23);
    org.junit.Assert.assertNotNull(floatArray26);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(floatArray38);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(doubleArray43);
  }

  @Test
  public void test0658() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0658");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    endlessSingleStreamOperatingBuffer1.setOperatingIndex(33);
    java.lang.String str11 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    try {
      boolean boolean13 = endlessSingleStreamOperatingBuffer1.loadFromPath("030958.944");
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str11.equals("byte[] {0x00,0x0F}"));
  }

  @Test
  public void test0659() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0659");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        (-7), 64, "0.0");
    java.lang.String str4 = simulatorSchedulerPiece3.getFileString();
    long long5 = simulatorSchedulerPiece3.getTime();
    org.junit.Assert.assertTrue(
        "'" + str4 + "' != '" + "00000:00:00:00:-07|-000000000000000007|64|0.0" + "'",
        str4.equals("00000:00:00:00:-07|-000000000000000007|64|0.0"));
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-7L) + "'", long5 == (-7L));
  }

  @Test
  public void test0660() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0660");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.PNanomind pNanomind2 = new opssat.simulator.peripherals.PNanomind(
        simulatorNode0, "2019:05:23 15:09:44 UTC");
    try {
      pNanomind2.SetPowerState((byte) 100);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0661() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0661");
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor2 = new opssat.simulator.util.ArgumentDescriptor(
        "00000:00:00:00:-02", "2019:05:23 15:09:36 UTC");
    java.lang.Float[] floatArray6 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList7 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean8 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList7, floatArray6);
    boolean boolean10 = floatList7.add((-1.0f));
    floatList7.clear();
    java.util.stream.Stream<java.lang.Float> floatStream12 = floatList7.stream();
    java.lang.Byte[] byteArray17 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList18 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean19 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList18, byteArray17);
    java.lang.Integer[] intArray22 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList23 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean24 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList23, intArray22);
    boolean boolean25 = byteList18.retainAll(intList23);
    java.lang.Integer[] intArray28 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList29 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
    int int32 = intList29.lastIndexOf((byte) 10);
    boolean boolean33 = intList23.retainAll(intList29);
    boolean boolean34 = floatList7.containsAll(intList29);
    argumentDescriptor2.setType(floatList7);
    try {
      argumentDescriptor2.setIntTypeByIndex((short) 255, 97);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: java.util.ArrayList cannot be cast to [I");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertNotNull(floatStream12);
    org.junit.Assert.assertNotNull(byteArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertNotNull(intArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertNotNull(intArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
  }

  @Test
  public void test0662() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0662");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    celestiaData32.setDnx("OPS-SAT SoftSim:");
    java.lang.String str53 = celestiaData32.getAos();
    celestiaData32.setDnx("[true, false]");
    celestiaData32.setLos("00000:00:00:00:-02");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNull(str53);
  }

  @Test
  public void test0663() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0663");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.Boolean[] booleanArray10 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList11 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean12 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList11, booleanArray10);
    int int14 = booleanList11.indexOf(10);
    int int15 = booleanList11.size();
    java.lang.Byte[] byteArray19 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList20 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList20, byteArray19);
    java.lang.Object[] objArray22 = byteList20.toArray();
    java.util.Iterator<java.lang.Byte> byteItor23 = byteList20.iterator();
    boolean boolean24 = booleanList11.contains(byteList20);
    org.ccsds.moims.mo.mal.structures.UShortList uShortList25 = new org.ccsds.moims.mo.mal.structures.UShortList();
    java.lang.Boolean[] booleanArray28 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList29 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList29, booleanArray28);
    int int32 = booleanList29.indexOf(10);
    int int33 = booleanList29.size();
    java.lang.Byte[] byteArray37 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList38 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList38, byteArray37);
    java.lang.Object[] objArray40 = byteList38.toArray();
    java.util.Iterator<java.lang.Byte> byteItor41 = byteList38.iterator();
    boolean boolean42 = booleanList29.contains(byteList38);
    java.util.stream.Stream<java.lang.Boolean> booleanStream43 = booleanList29.stream();
    int int44 = uShortList25.lastIndexOf(booleanList29);
    int int45 = byteList20.lastIndexOf(booleanList29);
    java.lang.Float[] floatArray49 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList50 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean51 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList50, floatArray49);
    boolean boolean53 = floatList50.add((-1.0f));
    floatList50.trimToSize();
    org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList55.ensureCapacity(13);
    java.lang.Byte[] byteArray62 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList63 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean64 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList63, byteArray62);
    java.lang.Integer[] intArray67 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList68 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean69 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList68, intArray67);
    boolean boolean70 = byteList63.retainAll(intList68);
    boolean boolean71 = octetList55.containsAll(intList68);
    boolean boolean72 = floatList50.containsAll(intList68);
    boolean boolean73 = booleanList29.removeAll(intList68);
    java.lang.Boolean boolean75 = booleanList29.remove(0);
    endlessSingleStreamOperatingBuffer1.setDataBuffer(booleanList29);
    java.lang.String str77 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    org.ccsds.moims.mo.mal.structures.UShortList uShortList78 = new org.ccsds.moims.mo.mal.structures.UShortList();
    org.ccsds.moims.mo.mal.structures.UShort uShort79 = uShortList78.getServiceNumber();
    java.lang.Integer int80 = uShortList78.getTypeShortForm();
    endlessSingleStreamOperatingBuffer1.setDataBuffer(uShortList78);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertNotNull(booleanArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    org.junit.Assert.assertNotNull(byteArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertNotNull(objArray22);
    org.junit.Assert.assertNotNull(byteItor23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertNotNull(booleanArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    org.junit.Assert.assertNotNull(byteArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertNotNull(objArray40);
    org.junit.Assert.assertNotNull(byteItor41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    org.junit.Assert.assertNotNull(booleanStream43);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    org.junit.Assert.assertNotNull(floatArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertNotNull(byteArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertNotNull(intArray67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", !boolean73);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75.equals(true));
    org.junit.Assert.assertTrue(
        "'" + str77 + "' != '" + "Unknown data type [java.util.ArrayList]" + "'",
        str77.equals("Unknown data type [java.util.ArrayList]"));
    org.junit.Assert.assertNotNull(uShort79);
    org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-10) + "'", int80.equals((-10)));
  }

  @Test
  public void test0664() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0664");
    java.util.logging.Logger logger2 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer3 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger2);
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    endlessSingleStreamOperatingBuffer3.setDataFromByteArray(byteArray5);
    byte[] byteArray8 = endlessSingleStreamOperatingBuffer3.getDataAsByteArray(42);
    opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.putLongInByteArray(281475010265084L, 0,
        byteArray8);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertNotNull(byteArray8);
  }

  @Test
  public void test0665() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0665");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date2 = simulatorData1.getCurrentTime();
    java.util.Date date3 = simulatorData1.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getYearFromDate(date3);
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertNotNull(date3);
  }

  @Test
  public void test0666() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0666");
    opssat.simulator.util.wav.WavFileException wavFileException1 = new opssat.simulator.util.wav.WavFileException(
        "byte[] {0x00,0x0F}");
    java.lang.Throwable[] throwableArray2 = wavFileException1.getSuppressed();
    org.junit.Assert.assertNotNull(throwableArray2);
  }

  @Test
  public void test0668() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0668");
    try {
      opssat.simulator.orekit.GPSSatInView gPSSatInView2 = new opssat.simulator.orekit.GPSSatInView(
          "2019:05:23 15:10:01 UTC", 41);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
    } catch (java.lang.StringIndexOutOfBoundsException e) {
    }
  }

  @Test
  public void test0669() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0669");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getAvgDistance();
    double double10 = gPSSatInViewScience8.getStdDevElevation();
    double double11 = gPSSatInViewScience8.getAvgElevation();
    double double12 = gPSSatInViewScience8.getMinDistance();
    double double13 = gPSSatInViewScience8.getMaxDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 11111.0d + "'", double10 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 2.81474993487878E14d + "'",
        double11 == 2.81474993487878E14d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 9.0d + "'", double12 == 9.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
  }

  @Test
  public void test0670() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0670");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    simulatorHeader12.setOrekitTLE1("");
    java.util.Date date17 = simulatorHeader12.parseStringIntoDate("2019/05/23-15:09:35");
    java.lang.String str18 = simulatorHeader12.toFileString();
    java.util.Date date19 = simulatorHeader12.getEndDate();
    java.lang.String str20 = simulatorHeader12.getKeplerElements();
    java.lang.String str21 = simulatorHeader12.toFileString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(date17);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNull(str20);
  }

  @Test
  public void test0671() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0671");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.util.Date date28 = simulatorHeader20.getEndDate();
    int int29 = opssat.simulator.util.DateExtraction.getMinuteFromDate(date28);
    int int30 = opssat.simulator.util.DateExtraction.getYearFromDate(date28);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertNotNull(date28);
  }

  @Test
  public void test0672() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0672");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    int int51 = celestiaData32.getDays();
    java.lang.String str52 = celestiaData32.getDate();
    float[] floatArray53 = celestiaData32.getQ();
    celestiaData32.setInfo("00000:00:00:00:-02");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray53);
  }

  @Test
  public void test0673() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0673");
    org.ccsds.moims.mo.mal.structures.LongList longList0 = new org.ccsds.moims.mo.mal.structures.LongList();
    java.util.ListIterator<java.lang.Long> longItor1 = longList0.listIterator();
    java.util.Spliterator<java.lang.Long> longSpliterator2 = longList0.spliterator();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = longList0.getAreaVersion();
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    java.util.Date date9 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        17, date9);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    int int15 = opssat.simulator.util.DateExtraction.getDayFromDate(date14);
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date21 = simulatorData20.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap22 = opssat.simulator.util.SimulatorData
        .computeDiff(date18, date21);
    opssat.simulator.util.SimulatorHeader simulatorHeader23 = new opssat.simulator.util.SimulatorHeader(
        false, date14, date21);
    opssat.simulator.util.SimulatorHeader simulatorHeader24 = new opssat.simulator.util.SimulatorHeader(
        false, date9, date14);
    boolean boolean25 = simulatorHeader24.checkStartBeforeEnd();
    boolean boolean26 = uOctet3.equals(simulatorHeader24);
    int int27 = simulatorHeader24.getMinuteStartDate();
    org.junit.Assert.assertNotNull(longItor1);
    org.junit.Assert.assertNotNull(longSpliterator2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertNotNull(timeUnitMap22);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
  }

  @Test
  public void test0674() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0674");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    simulatorHeader20.setUpdateInternet(true);
    java.util.Date date23 = null;
    simulatorHeader20.setEndDate(date23);
    java.util.Date date25 = simulatorHeader20.getStartDate();
    int int26 = opssat.simulator.util.DateExtraction.getMonthFromDate(date25);
    int int27 = opssat.simulator.util.DateExtraction.getDayFromDate(date25);
    int int28 = opssat.simulator.util.DateExtraction.getYearFromDate(date25);
    int int29 = opssat.simulator.util.DateExtraction.getSecondsFromDate(date25);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date25);
  }

  @Test
  public void test0675() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0675");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    java.util.ListIterator<java.lang.Long> longItor16 = longList12.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    java.lang.String str23 = simulatorSpacecraftState20.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    java.lang.String str30 = simulatorSpacecraftState27.toString();
    double[] doubleArray31 = simulatorSpacecraftState27.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    java.lang.String str39 = simulatorSpacecraftState36.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    double[] doubleArray47 = simulatorSpacecraftState43.getSunVector();
    simulatorSpacecraftState36.setMagnetometer(doubleArray47);
    simulatorSpacecraftState20.setMagnetometer(doubleArray47);
    float[] floatArray50 = null;
    simulatorSpacecraftState20.setRv(floatArray50);
    int int52 = longList12.lastIndexOf(simulatorSpacecraftState20);
    double double53 = simulatorSpacecraftState20.getAltitude();
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(longItor16);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str23.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str39.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray47);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 14.0d + "'", double53 == 14.0d);
  }

  @Test
  public void test0676() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0676");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxDistance();
    double double11 = gPSSatInViewScience8.getMinDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 9.0d + "'", double11 == 9.0d);
  }

  @Test
  public void test0678() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0678");
    java.lang.String str1 = opssat.simulator.peripherals.PGPS.FirmwareReferenceOEM16
        .degrees2DDMMpMMMMMMM(50);
    org.junit.Assert.assertTrue("'" + str1 + "' != '" + "5000.0000000" + "'",
        str1.equals("5000.0000000"));
  }

  @Test
  public void test0679() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0679");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    java.lang.String str3 = pOpticalReceiver2.getName();
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    try {
      pOpticalReceiver2.simSetMessageBuffer(byteArray5);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "031008.320" + "'",
        str3.equals("031008.320"));
    org.junit.Assert.assertNotNull(byteArray5);
  }

  @Test
  public void test0680() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0680");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor11 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885", "[-1.0, 100.0, 10.0, 10.0]");
    java.lang.String str12 = argumentDescriptor11.getName();
    endlessSingleStreamOperatingBuffer1.setDataBuffer(str12);
    boolean boolean15 = endlessSingleStreamOperatingBuffer1.preparePath("2019:05:23 15:09:35 UTC");
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue(
        "'" + str12 + "' != '" + "UnknownDeviceDataTypeString{281474993487885}" + "'",
        str12.equals("UnknownDeviceDataTypeString{281474993487885}"));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
  }

  @Test
  public void test0682() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0682");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    int int36 = simulatorHeader12.getCelestiaPort();
    simulatorHeader12.setAutoStartSystem(false);
    boolean boolean39 = simulatorHeader12.isAutoStartTime();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
  }

  @Test
  public void test0683() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0683");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    java.util.ListIterator<java.lang.Long> longItor16 = longList12.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    java.lang.String str23 = simulatorSpacecraftState20.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    java.lang.String str30 = simulatorSpacecraftState27.toString();
    double[] doubleArray31 = simulatorSpacecraftState27.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    java.lang.String str39 = simulatorSpacecraftState36.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    double[] doubleArray47 = simulatorSpacecraftState43.getSunVector();
    simulatorSpacecraftState36.setMagnetometer(doubleArray47);
    simulatorSpacecraftState20.setMagnetometer(doubleArray47);
    float[] floatArray50 = null;
    simulatorSpacecraftState20.setRv(floatArray50);
    int int52 = longList12.lastIndexOf(simulatorSpacecraftState20);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState56 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState56.setLongitude(4);
    int int59 = simulatorSpacecraftState56.getSatsInView();
    float[] floatArray60 = simulatorSpacecraftState56.getRv();
    boolean boolean61 = longList12.equals(floatArray60);
    int int62 = longList12.size();
    try {
      java.util.List<java.lang.Long> longList65 = longList12.subList(5909, 37);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: toIndex = 37");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(longItor16);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str23.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str39.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray47);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
  }

  @Test
  public void test0684() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0684");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    int int57 = shortList2.size();
    java.util.stream.Stream<java.lang.Short> shortStream58 = shortList2.parallelStream();
    boolean boolean60 = shortList2.add((short) -1);
    java.util.Iterator<java.lang.Short> shortItor61 = shortList2.iterator();
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    org.junit.Assert.assertNotNull(shortStream58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertNotNull(shortItor61);
  }

  @Test
  public void test0685() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0685");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxDistance();
    double double11 = gPSSatInViewScience8.getAvgDistance();
    double double12 = gPSSatInViewScience8.getStdDevElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 11111.0d + "'", double12 == 11111.0d);
  }

  @Test
  public void test0686() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0686");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    boolean boolean3 = doubleList1.add(100.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = doubleList1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = doubleList1.getAreaVersion();
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData7 = new opssat.simulator.util.SimulatorDeviceData(
        "[]");
    java.lang.String str8 = simulatorDeviceData7.getName();
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList9 = simulatorDeviceData7
        .getDataList();
    int int10 = doubleList1.lastIndexOf(simulatorDeviceData7);
    doubleList1.clear();
    doubleList1.clear();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[]" + "'", str8.equals("[]"));
    org.junit.Assert.assertNotNull(argumentDescriptorList9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
  }

  @Test
  public void test0687() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0687");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    long long3 = uInteger1.getValue();
    long long4 = uInteger1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uInteger1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = uInteger1.getAreaNumber();
    java.lang.String str7 = uInteger1.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState16 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray19 = new float[] { 28, 8 };
    simulatorSpacecraftState16.setQ(floatArray19);
    simulatorSpacecraftState11.setRv(floatArray19);
    double[][] doubleArray22 = new double[][] {};
    simulatorSpacecraftState11.setRotation(doubleArray22);
    boolean boolean24 = uInteger1.equals(doubleArray22);
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = uInteger1.getAreaNumber();
    java.lang.Long long26 = uInteger1.getShortForm();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 13L + "'", long3 == 13L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "13" + "'", str7.equals("13"));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertNotNull(floatArray19);
    org.junit.Assert.assertNotNull(doubleArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487884L + "'",
        long26.equals(281474993487884L));
  }

  @Test
  public void test0688() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0688");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    java.lang.Object obj2 = endlessWavStreamOperatingBuffer1.getDataBuffer();
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece6 = new opssat.simulator.util.SimulatorSchedulerPiece(
        (-7), 64, "0.0");
    endlessWavStreamOperatingBuffer1.setDataBuffer(64);
    org.junit.Assert.assertNotNull(obj2);
  }

  @Test
  public void test0689() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0689");
    opssat.simulator.util.wav.WavFileException wavFileException0 = new opssat.simulator.util.wav.WavFileException();
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = octetList1.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException6 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray7 = wavFileException6.getSuppressed();
    boolean boolean8 = octetList1.equals(wavFileException6);
    wavFileException0.addSuppressed(wavFileException6);
    opssat.simulator.util.wav.WavFileException wavFileException11 = new opssat.simulator.util.wav.WavFileException(
        "0.0");
    wavFileException0.addSuppressed(wavFileException11);
    java.lang.String str13 = wavFileException0.toString();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(throwableArray7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '" + "opssat.simulator.util.wav.WavFileException" + "'",
        str13.equals("opssat.simulator.util.wav.WavFileException"));
  }

  @Test
  public void test0690() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0690");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date2 = simulatorData1.getCurrentTime();
    java.util.Date date3 = simulatorData1.getCurrentTime();
    int int4 = simulatorData1.getTimeFactor();
    java.lang.String str5 = simulatorData1.getUTCCurrentTime();
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
  }

  @Test
  public void test0691() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0691");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    org.ccsds.moims.mo.mal.structures.Duration duration58 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet59 = duration58.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort60 = duration58.getAreaNumber();
    double double61 = duration58.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = duration58.getAreaVersion();
    boolean boolean63 = shortList2.equals(uOctet62);
    org.ccsds.moims.mo.mal.structures.IntegerList integerList65 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        7);
    boolean boolean66 = shortList2.removeAll(integerList65);
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertNotNull(uOctet59);
    org.junit.Assert.assertNotNull(uShort60);
    org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
    org.junit.Assert.assertNotNull(uOctet62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
  }

  @Test
  public void test0692() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0692");
    java.lang.Double[] doubleArray4 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
    uShortList9.ensureCapacity(0);
    int int14 = uShortList9.indexOf((byte) 1);
    uShortList9.clear();
    java.lang.Long[] longArray18 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean20 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
    java.lang.Object obj21 = longList19.clone();
    boolean boolean22 = uShortList9.contains(longList19);
    boolean boolean23 = doubleList5.equals(boolean22);
    java.lang.Integer[] intArray26 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList27 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean28 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
    int int30 = intList27.lastIndexOf((byte) 10);
    boolean boolean31 = doubleList5.removeAll(intList27);
    org.ccsds.moims.mo.mal.structures.OctetList octetList32 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList32.ensureCapacity(13);
    java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    boolean boolean47 = byteList40.retainAll(intList45);
    boolean boolean48 = octetList32.containsAll(intList45);
    boolean boolean49 = doubleList5.removeAll(intList45);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState53 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double54 = simulatorSpacecraftState53.getLatitude();
    java.lang.String str55 = simulatorSpacecraftState53.getMagField();
    java.lang.String str56 = simulatorSpacecraftState53.toString();
    double[] doubleArray57 = simulatorSpacecraftState53.getSunVector();
    simulatorSpacecraftState53.setSatsInView((short) 10);
    double double60 = simulatorSpacecraftState53.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState64 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double65 = simulatorSpacecraftState64.getLatitude();
    double double66 = simulatorSpacecraftState64.getLongitude();
    float[] floatArray67 = simulatorSpacecraftState64.getQ();
    simulatorSpacecraftState53.setRv(floatArray67);
    int int69 = intList45.lastIndexOf(simulatorSpacecraftState53);
    double[] doubleArray70 = simulatorSpacecraftState53.getSunVector();
    org.junit.Assert.assertNotNull(doubleArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShortArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(longArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(obj21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(byteArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + 340.0d + "'", double54 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str55 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str55.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str56 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str56.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray57);
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 340.0d + "'", double60 == 340.0d);
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + 340.0d + "'", double65 == 340.0d);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray67);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    org.junit.Assert.assertNotNull(doubleArray70);
  }

  @Test
  public void test0693() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0693");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    int int8 = simulatorData1.getTimeFactor();
    java.lang.String str9 = simulatorData1.getUTCCurrentTime2();
    simulatorData1.setCounter(31);
    long long12 = simulatorData1.getCurrentTimeMillis();
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "0310" + "'", str9.equals("0310"));
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 21L + "'", long12 == 21L);
  }

  @Test
  public void test0694() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0694");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    double[] doubleArray7 = new double[] { (-1.0f) };
    simulatorSpacecraftState3.setMagField(doubleArray7);
    simulatorSpacecraftState3.setLatitude(0.0d);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    float[] floatArray19 = simulatorSpacecraftState14.getR();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState23.setLongitude(4);
    double[] doubleArray27 = new double[] { (-1.0f) };
    simulatorSpacecraftState23.setMagField(doubleArray27);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState32 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double33 = simulatorSpacecraftState32.getLatitude();
    java.lang.String str34 = simulatorSpacecraftState32.getMagField();
    java.lang.String str35 = simulatorSpacecraftState32.toString();
    double[] doubleArray36 = simulatorSpacecraftState32.getSunVector();
    simulatorSpacecraftState23.setMagnetometer(doubleArray36);
    simulatorSpacecraftState14.setSunVector(doubleArray36);
    simulatorSpacecraftState3.setSunVector(doubleArray36);
    float[] floatArray40 = simulatorSpacecraftState3.getV();
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertNotNull(floatArray19);
    org.junit.Assert.assertNotNull(doubleArray27);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str34 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str34.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str35 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str35.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray36);
    org.junit.Assert.assertNotNull(floatArray40);
  }

  @Test
  public void test0695() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0695");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        ' ');
    org.ccsds.moims.mo.mal.structures.Element element2 = doubleList1.createElement();
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList4 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList4.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = doubleList4.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = doubleList4.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = doubleList4.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = doubleList4.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element10 = doubleList4.createElement();
    org.ccsds.moims.mo.mal.structures.UShort uShort11 = doubleList4.getAreaNumber();
    java.lang.Long long12 = doubleList4.getShortForm();
    org.ccsds.moims.mo.mal.structures.StringList stringList13 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList15 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor16 = shortList15.listIterator();
    boolean boolean17 = stringList13.equals(shortList15);
    org.ccsds.moims.mo.mal.structures.IntegerList integerList19 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        48);
    java.lang.Long long20 = integerList19.getShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = integerList19.getAreaNumber();
    int int22 = stringList13.indexOf(integerList19);
    boolean boolean23 = doubleList4.containsAll(integerList19);
    boolean boolean24 = doubleList1.containsAll(integerList19);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState28 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray31 = new float[] { 28, 8 };
    simulatorSpacecraftState28.setQ(floatArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    java.lang.String str38 = simulatorSpacecraftState36.getMagField();
    float[] floatArray39 = simulatorSpacecraftState36.getR();
    simulatorSpacecraftState28.setQ(floatArray39);
    java.lang.String str41 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray39);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState45 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double46 = simulatorSpacecraftState45.getLatitude();
    double double47 = simulatorSpacecraftState45.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState51 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double52 = simulatorSpacecraftState51.getLatitude();
    java.lang.String str53 = simulatorSpacecraftState51.getMagField();
    float[] floatArray54 = simulatorSpacecraftState51.getR();
    simulatorSpacecraftState45.setQ(floatArray54);
    float[] floatArray56 = simulatorSpacecraftState45.getV();
    opssat.simulator.celestia.CelestiaData celestiaData57 = new opssat.simulator.celestia.CelestiaData(
        floatArray39, floatArray56);
    float[] floatArray58 = celestiaData57.getQ();
    opssat.simulator.util.SimulatorData simulatorData62 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date63 = simulatorData62.getCurrentTime();
    int int64 = opssat.simulator.util.DateExtraction.getDayFromDate(date63);
    opssat.simulator.util.SimulatorData simulatorData66 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date67 = simulatorData66.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData69 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date70 = simulatorData69.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap71 = opssat.simulator.util.SimulatorData
        .computeDiff(date67, date70);
    opssat.simulator.util.SimulatorHeader simulatorHeader72 = new opssat.simulator.util.SimulatorHeader(
        false, date63, date70);
    opssat.simulator.util.SimulatorData simulatorData73 = new opssat.simulator.util.SimulatorData(
        (short) 0, date63);
    celestiaData57.setDate(date63);
    int int75 = celestiaData57.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState79 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray82 = new float[] { 28, 8 };
    simulatorSpacecraftState79.setQ(floatArray82);
    celestiaData57.setQ(floatArray82);
    boolean boolean85 = doubleList1.remove(celestiaData57);
    java.lang.Integer int86 = doubleList1.getTypeShortForm();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uOctet9);
    org.junit.Assert.assertNotNull(element10);
    org.junit.Assert.assertNotNull(uShort11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265083L + "'",
        long12.equals(281475010265083L));
    org.junit.Assert.assertNotNull(shortItor16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + long20 + "' != '" + 281475010265077L + "'",
        long20.equals(281475010265077L));
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str38 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str38.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray39);
    org.junit.Assert.assertTrue("'" + str41 + "' != '" + "UnknownGUIData" + "'",
        str41.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 340.0d + "'", double46 == 340.0d);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + 340.0d + "'", double47 == 340.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 340.0d + "'", double52 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str53 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str53.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray54);
    org.junit.Assert.assertNotNull(floatArray56);
    org.junit.Assert.assertNotNull(floatArray58);
    org.junit.Assert.assertNotNull(date63);
    org.junit.Assert.assertNotNull(date67);
    org.junit.Assert.assertNotNull(date70);
    org.junit.Assert.assertNotNull(timeUnitMap71);
    org.junit.Assert.assertNotNull(floatArray82);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-5) + "'", int86.equals((-5)));
  }

  @Test
  public void test0696() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0696");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    shortList2.ensureCapacity(44);
    int int57 = shortList2.size();
    java.util.stream.Stream<java.lang.Short> shortStream58 = shortList2.parallelStream();
    boolean boolean60 = shortList2.add((short) -1);
    shortList2.trimToSize();
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    org.junit.Assert.assertNotNull(shortStream58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
  }

  @Test
  public void test0697() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0697");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor7 = booleanList3.iterator();
    java.lang.Boolean boolean9 = booleanList3.remove(0);
    int int10 = booleanList3.size();
    java.lang.Float[] floatArray14 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList15 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList15, floatArray14);
    boolean boolean18 = floatList15.add((-1.0f));
    floatList15.clear();
    java.util.stream.Stream<java.lang.Float> floatStream20 = floatList15.stream();
    java.lang.Byte[] byteArray25 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList26 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList26, byteArray25);
    java.lang.Integer[] intArray30 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList31 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean32 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList31, intArray30);
    boolean boolean33 = byteList26.retainAll(intList31);
    java.lang.Integer[] intArray36 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList37 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList37, intArray36);
    int int40 = intList37.lastIndexOf((byte) 10);
    boolean boolean41 = intList31.retainAll(intList37);
    boolean boolean42 = floatList15.containsAll(intList37);
    java.util.Spliterator<java.lang.Integer> intSpliterator43 = intList37.spliterator();
    java.util.stream.Stream<java.lang.Integer> intStream44 = intList37.parallelStream();
    boolean boolean45 = booleanList3.retainAll(intList37);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date50 = simulatorData49.getCurrentTime();
    java.util.Date date51 = simulatorData49.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        17, date51);
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    int int57 = opssat.simulator.util.DateExtraction.getDayFromDate(date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date60 = simulatorData59.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData62 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date63 = simulatorData62.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap64 = opssat.simulator.util.SimulatorData
        .computeDiff(date60, date63);
    opssat.simulator.util.SimulatorHeader simulatorHeader65 = new opssat.simulator.util.SimulatorHeader(
        false, date56, date63);
    opssat.simulator.util.SimulatorHeader simulatorHeader66 = new opssat.simulator.util.SimulatorHeader(
        false, date51, date56);
    boolean boolean67 = simulatorHeader66.isAutoStartTime();
    simulatorHeader66.setUseCelestia(false);
    boolean boolean70 = simulatorHeader66.isAutoStartSystem();
    boolean boolean71 = booleanList3.contains(simulatorHeader66);
    try {
      java.util.List<java.lang.Boolean> booleanList74 = booleanList3.subList(48, (-18));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IllegalArgumentException; message: fromIndex(48) > toIndex(-18)");
    } catch (java.lang.IllegalArgumentException e) {
    }
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertNotNull(booleanItor7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9.equals(true));
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertNotNull(floatStream20);
    org.junit.Assert.assertNotNull(byteArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(intArray30);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    org.junit.Assert.assertNotNull(intArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    org.junit.Assert.assertNotNull(intSpliterator43);
    org.junit.Assert.assertNotNull(intStream44);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertNotNull(date51);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(date60);
    org.junit.Assert.assertNotNull(date63);
    org.junit.Assert.assertNotNull(timeUnitMap64);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", !boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
  }

  @Test
  public void test0698() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0698");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor7 = booleanList3.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator8 = booleanList3.spliterator();
    java.lang.Integer[] intArray16 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList17 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList17, intArray16);
    java.lang.Byte[] byteArray23 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList24 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean25 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList24, byteArray23);
    java.lang.Integer[] intArray28 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList29 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
    boolean boolean31 = byteList24.retainAll(intList29);
    java.lang.Integer[] intArray34 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList35 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean36 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList35, intArray34);
    int int38 = intList35.lastIndexOf((byte) 10);
    boolean boolean39 = intList29.removeAll(intList35);
    boolean boolean40 = intList17.retainAll(intList35);
    java.lang.Float[] floatArray44 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList45 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList45, floatArray44);
    boolean boolean48 = floatList45.add((-1.0f));
    floatList45.trimToSize();
    java.lang.Integer[] intArray54 = new java.lang.Integer[] { 100, 1, (-1), 10 };
    java.util.ArrayList<java.lang.Integer> intList55 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean56 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
    int int58 = intList55.lastIndexOf((byte) 1);
    boolean boolean59 = floatList45.containsAll(intList55);
    boolean boolean60 = intList17.addAll(intList55);
    boolean boolean61 = booleanList3.removeAll(intList17);
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor63 = new opssat.simulator.util.ArgumentDescriptor(
        boolean61, "0.0");
    try {
      argumentDescriptor63.setFloatTypeByIndex(1L, 58);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: java.lang.Boolean cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertNotNull(booleanItor7);
    org.junit.Assert.assertNotNull(booleanSpliterator8);
    org.junit.Assert.assertNotNull(intArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertNotNull(byteArray23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertNotNull(intArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertNotNull(intArray34);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertNotNull(intArray54);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
  }

  @Test
  public void test0699() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0699");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    java.lang.String str9 = argumentDescriptor5.toString();
    argumentDescriptor5.setName("OPS-SAT SoftSim:");
    try {
      argumentDescriptor5.setFloatTypeByIndex((-7L), 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: org.ccsds.moims.mo.mal.structures.OctetList cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "" + "'", str9.equals(""));
  }

  @Test
  public void test0700() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0700");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "%05d:%02d:%02d:%02d:%03d");
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList2 = simulatorDeviceData1
        .getDataList();
    java.lang.String str3 = simulatorDeviceData1.getName();
    org.junit.Assert.assertNotNull(argumentDescriptorList2);
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "%05d:%02d:%02d:%02d:%03d" + "'",
        str3.equals("%05d:%02d:%02d:%02d:%03d"));
  }

  @Test
  public void test0701() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0701");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    boolean boolean15 = floatList9.add((-1.0f));
    java.util.Iterator<java.lang.Float> floatItor16 = floatList9.iterator();
    java.util.Spliterator<java.lang.Float> floatSpliterator17 = floatList9.spliterator();
    floatList9.trimToSize();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    org.junit.Assert.assertNotNull(floatItor16);
    org.junit.Assert.assertNotNull(floatSpliterator17);
  }

  @Test
  public void test0702() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0702");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    simulatorData1.incrementMethods();
    simulatorData1.setTimeFactor(16);
    boolean boolean11 = simulatorData1.isSimulatorRunning();
    simulatorData1.setTimeFactor(4);
    java.lang.String str14 = simulatorData1.getUTCCurrentTime2();
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
  }

  @Test
  public void test0703() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0703");
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = octetList1.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException6 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray7 = wavFileException6.getSuppressed();
    boolean boolean8 = octetList1.equals(wavFileException6);
    opssat.simulator.util.wav.WavFileException wavFileException9 = new opssat.simulator.util.wav.WavFileException(
        "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:10:10 UTC\nendDate=2019:05:23 15:10:10 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO",
        wavFileException6);
    java.lang.String str10 = wavFileException6.toString();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(throwableArray7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue(
        "'" + str10 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str10.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
  }

  @Test
  public void test0704() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0704");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    int int36 = simulatorHeader12.getHourStartDate();
    simulatorHeader12.setUseOrekitPropagator(false);
    boolean boolean39 = simulatorHeader12.isUseOrekitPropagator();
    boolean boolean40 = simulatorHeader12.isUseCelestia();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
  }

  @Test
  public void test0705() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0705");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str28 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setTimeFactor(8);
    boolean boolean31 = simulatorHeader20.isUpdateInternet();
    int int32 = simulatorHeader20.getMinuteStartDate();
    java.lang.String str33 = simulatorHeader20.getEndDateString();
    java.lang.String str34 = simulatorHeader20.getStartDateString();
    java.lang.String str35 = simulatorHeader20.toString();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str28.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
  }

  @Test
  public void test0706() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0706");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList9.getAreaNumber();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    int int19 = opssat.simulator.util.DateExtraction.getDayFromDate(date18);
    opssat.simulator.util.SimulatorData simulatorData21 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date22 = simulatorData21.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap26 = opssat.simulator.util.SimulatorData
        .computeDiff(date22, date25);
    opssat.simulator.util.SimulatorHeader simulatorHeader27 = new opssat.simulator.util.SimulatorHeader(
        false, date18, date25);
    java.util.Date date28 = simulatorHeader27.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData32 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date33 = simulatorData32.getCurrentTime();
    java.util.Date date34 = simulatorData32.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData35 = new opssat.simulator.util.SimulatorData(
        17, date34);
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    int int40 = opssat.simulator.util.DateExtraction.getDayFromDate(date39);
    opssat.simulator.util.SimulatorData simulatorData42 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date43 = simulatorData42.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap47 = opssat.simulator.util.SimulatorData
        .computeDiff(date43, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader48 = new opssat.simulator.util.SimulatorHeader(
        false, date39, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader49 = new opssat.simulator.util.SimulatorHeader(
        false, date34, date39);
    simulatorHeader27.setEndDate(date34);
    boolean boolean51 = uShort14.equals(date34);
    int int52 = opssat.simulator.util.DateExtraction.getMonthFromDate(date34);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(uShort14);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(timeUnitMap26);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date33);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date43);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(timeUnitMap47);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", !boolean51);
  }

  @Test
  public void test0707() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0707");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    simulatorHeader12.setUseCelestia(true);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    java.util.Date date43 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        17, date43);
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    int int49 = opssat.simulator.util.DateExtraction.getDayFromDate(date48);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date52 = simulatorData51.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date55 = simulatorData54.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap56 = opssat.simulator.util.SimulatorData
        .computeDiff(date52, date55);
    opssat.simulator.util.SimulatorHeader simulatorHeader57 = new opssat.simulator.util.SimulatorHeader(
        false, date48, date55);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date43, date48);
    simulatorHeader58.setUpdateInternet(true);
    java.util.Date date61 = null;
    simulatorHeader58.setEndDate(date61);
    java.util.Date date63 = simulatorHeader58.getStartDate();
    int int64 = opssat.simulator.util.DateExtraction.getMonthFromDate(date63);
    int int65 = opssat.simulator.util.DateExtraction.getDayFromDate(date63);
    int int66 = opssat.simulator.util.DateExtraction.getYearFromDate(date63);
    simulatorHeader12.setEndDate(date63);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date43);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(date52);
    org.junit.Assert.assertNotNull(date55);
    org.junit.Assert.assertNotNull(timeUnitMap56);
    org.junit.Assert.assertNotNull(date63);
  }

  @Test
  public void test0708() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0708");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.toString();
    double[] doubleArray7 = simulatorSpacecraftState3.getSunVector();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray14 = new float[] { 28, 8 };
    simulatorSpacecraftState11.setQ(floatArray14);
    float[] floatArray16 = simulatorSpacecraftState11.getR();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState20.setLongitude(4);
    double[] doubleArray24 = new double[] { (-1.0f) };
    simulatorSpacecraftState20.setMagField(doubleArray24);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    java.lang.String str32 = simulatorSpacecraftState29.toString();
    double[] doubleArray33 = simulatorSpacecraftState29.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray33);
    simulatorSpacecraftState11.setSunVector(doubleArray33);
    simulatorSpacecraftState3.setMagField(doubleArray33);
    float[] floatArray37 = simulatorSpacecraftState3.getMagnetometer();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str6.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertNotNull(doubleArray24);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str32 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str32.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray33);
    org.junit.Assert.assertNotNull(floatArray37);
  }

  @Test
  public void test0709() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0709");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setUseOrekitPropagator(true);
    java.lang.String str17 = simulatorHeader12.toFileString();
    boolean boolean18 = simulatorHeader12.isUseCelestia();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
  }

  @Test
  public void test0710() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0710");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setLatitude((-4));
    java.lang.String str8 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setSatsInView((-4));
    java.lang.String str11 = simulatorSpacecraftState3.getMagnetometerAsString();
    float[] floatArray12 = simulatorSpacecraftState3.getRv();
    float[] floatArray13 = simulatorSpacecraftState3.getRv();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str8.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '" + "X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]" + "'",
        str11.equals("X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertNotNull(floatArray13);
  }

  @Test
  public void test0711() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0711");
    java.lang.Long[] longArray3 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList4 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList4, longArray3);
    boolean boolean7 = longList4.add(281474993487885L);
    boolean boolean8 = longList4.isEmpty();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Date date12 = simulatorData10.getCurrentTime();
    int int13 = simulatorData10.getTimeFactor();
    int int14 = longList4.lastIndexOf(int13);
    boolean boolean15 = longList4.isEmpty();
    boolean boolean16 = longList4.isEmpty();
    longList4.clear();
    java.lang.String str18 = longList4.toString();
    org.junit.Assert.assertNotNull(longArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[]" + "'", str18.equals("[]"));
  }

  @Test
  public void test0712() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0712");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.toString();
    double[] doubleArray7 = simulatorSpacecraftState3.getSunVector();
    simulatorSpacecraftState3.setSatsInView((short) 10);
    java.lang.String str10 = simulatorSpacecraftState3.toString();
    int int11 = simulatorSpacecraftState3.getSatsInView();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str6.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertTrue(
        "'" + str10 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str10.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
  }

  @Test
  public void test0713() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0713");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    int int5 = opssat.simulator.util.DateExtraction.getHourFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(48,
        date3);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    java.util.Date date20 = simulatorHeader19.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Date date26 = simulatorData24.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        17, date26);
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    int int32 = opssat.simulator.util.DateExtraction.getDayFromDate(date31);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap39 = opssat.simulator.util.SimulatorData
        .computeDiff(date35, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader40 = new opssat.simulator.util.SimulatorHeader(
        false, date31, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader41 = new opssat.simulator.util.SimulatorHeader(
        false, date26, date31);
    simulatorHeader19.setEndDate(date26);
    int int43 = simulatorHeader19.getCelestiaPort();
    simulatorData6.initFromHeader(simulatorHeader19);
    simulatorHeader19.setAutoStartSystem(true);
    int int47 = simulatorHeader19.getSecondStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(timeUnitMap39);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
  }

  @Test
  public void test0715() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0715");
    byte[] byteArray1 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int2ByteArray(' ');
    try {
      double double3 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS
          .getDoubleFromByteArray(byteArray1, (short) 100);
      org.junit.Assert
          .fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray1);
  }

  @Test
  public void test0716() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0716");
    java.lang.Boolean[] booleanArray2 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList3 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList3, booleanArray2);
    int int6 = booleanList3.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor7 = booleanList3.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator8 = booleanList3.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList9 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int10 = octetList9.getTypeShortForm();
    java.lang.Object obj11 = octetList9.clone();
    octetList9.trimToSize();
    boolean boolean13 = booleanList3.contains(octetList9);
    java.util.ListIterator<java.lang.Boolean> booleanItor14 = booleanList3.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState18 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double19 = simulatorSpacecraftState18.getLatitude();
    double double20 = simulatorSpacecraftState18.getLongitude();
    java.lang.String str21 = simulatorSpacecraftState18.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState25 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState25.setLongitude(4);
    double[] doubleArray29 = new double[] { (-1.0f) };
    simulatorSpacecraftState25.setMagField(doubleArray29);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState34 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double35 = simulatorSpacecraftState34.getLatitude();
    java.lang.String str36 = simulatorSpacecraftState34.getMagField();
    java.lang.String str37 = simulatorSpacecraftState34.toString();
    double[] doubleArray38 = simulatorSpacecraftState34.getSunVector();
    simulatorSpacecraftState25.setMagnetometer(doubleArray38);
    simulatorSpacecraftState18.setMagField(doubleArray38);
    simulatorSpacecraftState18.setModeOperation("0");
    int int43 = booleanList3.lastIndexOf(simulatorSpacecraftState18);
    int int44 = booleanList3.size();
    org.junit.Assert.assertNotNull(booleanArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    org.junit.Assert.assertNotNull(booleanItor7);
    org.junit.Assert.assertNotNull(booleanSpliterator8);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-7) + "'", int10.equals((-7)));
    org.junit.Assert.assertNotNull(obj11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(booleanItor14);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 340.0d + "'", double19 == 340.0d);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertNotNull(doubleArray29);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 340.0d + "'", double35 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str36.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str37 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str37.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray38);
    org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
  }

  @Test
  public void test0717() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0717");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxDistance();
    double double11 = gPSSatInViewScience8.getStdDevElevation();
    double double12 = gPSSatInViewScience8.getMaxDistance();
    double double13 = gPSSatInViewScience8.getStdDevDistance();
    double double14 = gPSSatInViewScience8.getMaxDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 11111.0d + "'", double11 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 58.0d + "'", double13 == 58.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
  }

  @Test
  public void test0719() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0719");
    byte[] byteArray1 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(56);
    org.ccsds.moims.mo.mal.structures.Blob blob4 = new org.ccsds.moims.mo.mal.structures.Blob(
        byteArray1, 20, 24);
    java.lang.Long long5 = blob4.getShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = blob4.getServiceNumber();
    boolean boolean7 = blob4.isURLBased();
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = blob4.getServiceNumber();
    org.junit.Assert.assertNotNull(byteArray1);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281474993487873L + "'",
        long5.equals(281474993487873L));
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertNotNull(uShort8);
  }

  @Test
  public void test0720() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0720");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long3 = simulatorData2.getCurrentTimeMillis();
    java.lang.String str4 = simulatorData2.getCurrentDay();
    java.lang.String str5 = simulatorData2.getUTCCurrentTime2();
    simulatorData2.toggleSimulatorRunning();
    java.lang.String str7 = simulatorData2.getUTCCurrentTime();
    java.util.Date date8 = simulatorData2.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData12 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date13 = simulatorData12.getCurrentTime();
    java.util.Date date14 = simulatorData12.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData15 = new opssat.simulator.util.SimulatorData(
        17, date14);
    opssat.simulator.util.SimulatorData simulatorData18 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date19 = simulatorData18.getCurrentTime();
    int int20 = opssat.simulator.util.DateExtraction.getDayFromDate(date19);
    opssat.simulator.util.SimulatorData simulatorData22 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date23 = simulatorData22.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData25 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date26 = simulatorData25.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap27 = opssat.simulator.util.SimulatorData
        .computeDiff(date23, date26);
    opssat.simulator.util.SimulatorHeader simulatorHeader28 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date26);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date14, date19);
    opssat.simulator.util.SimulatorData simulatorData33 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date34 = simulatorData33.getCurrentTime();
    java.util.Date date35 = simulatorData33.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData36 = new opssat.simulator.util.SimulatorData(
        17, date35);
    opssat.simulator.util.SimulatorData simulatorData39 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date40 = simulatorData39.getCurrentTime();
    int int41 = opssat.simulator.util.DateExtraction.getDayFromDate(date40);
    opssat.simulator.util.SimulatorData simulatorData43 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date44 = simulatorData43.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData46 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date47 = simulatorData46.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap48 = opssat.simulator.util.SimulatorData
        .computeDiff(date44, date47);
    opssat.simulator.util.SimulatorHeader simulatorHeader49 = new opssat.simulator.util.SimulatorHeader(
        false, date40, date47);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date35, date40);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap51 = opssat.simulator.util.SimulatorData
        .computeDiff(date19, date35);
    opssat.simulator.util.SimulatorHeader simulatorHeader52 = new opssat.simulator.util.SimulatorHeader(
        true, date8, date35);
    boolean boolean53 = simulatorHeader52.checkStartBeforeEnd();
    java.lang.String str54 = simulatorHeader52.toString();
    simulatorHeader52.setAutoStartSystem(false);
    java.lang.String str57 = simulatorHeader52.getStartDateString();
    int int58 = simulatorHeader52.getTimeFactor();
    java.util.Date date60 = simulatorHeader52.parseStringIntoDate(
        "{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:49 UTC 2019}");
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(timeUnitMap27);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertNotNull(date47);
    org.junit.Assert.assertNotNull(timeUnitMap48);
    org.junit.Assert.assertNotNull(timeUnitMap51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    org.junit.Assert.assertNull(date60);
  }

  @Test
  public void test0721() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0721");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setOrekitPropagator("Alive");
    boolean boolean21 = simulatorHeader12.checkStartBeforeEnd();
    java.lang.String str22 = simulatorHeader12.toFileString();
    java.lang.String str23 = simulatorHeader12.getEndDateString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
  }

  @Test
  public void test0722() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0722");
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap1 = opssat.simulator.util.SimulatorData
        .computeTimeUnit(281474993487883L);
    org.junit.Assert.assertNotNull(timeUnitMap1);
  }

  @Test
  public void test0725() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0725");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    java.util.stream.BaseStream[] baseStreamArray6 = new java.util.stream.BaseStream[0];
    @SuppressWarnings("unchecked")
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray7 = baseStreamArray6;
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray8 = stringList0
        .toArray(
            (java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[]) baseStreamArray6);
    java.util.stream.Stream<java.lang.String> strStream9 = stringList0.stream();
    java.lang.Object obj10 = stringList0.clone();
    org.ccsds.moims.mo.mal.structures.LongList longList11 = new org.ccsds.moims.mo.mal.structures.LongList();
    java.lang.String str12 = longList11.toString();
    boolean boolean13 = stringList0.contains(str12);
    org.ccsds.moims.mo.mal.structures.IntegerList integerList14 = new org.ccsds.moims.mo.mal.structures.IntegerList();
    java.lang.Integer int15 = integerList14.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort16 = integerList14.getAreaNumber();
    boolean boolean17 = stringList0.removeAll(integerList14);
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertNotNull(baseStreamArray6);
    org.junit.Assert.assertNotNull(floatBaseStreamArray7);
    org.junit.Assert.assertNotNull(floatBaseStreamArray8);
    org.junit.Assert.assertNotNull(strStream9);
    org.junit.Assert.assertNotNull(obj10);
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "[]" + "'", str12.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-11) + "'", int15.equals((-11)));
    org.junit.Assert.assertNotNull(uShort16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
  }

  @Test
  public void test0726() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0726");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState9 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double10 = simulatorSpacecraftState9.getLatitude();
    java.lang.String str11 = simulatorSpacecraftState9.getMagField();
    float[] floatArray12 = simulatorSpacecraftState9.getR();
    simulatorSpacecraftState3.setQ(floatArray12);
    float[] floatArray14 = simulatorSpacecraftState3.getQ();
    simulatorSpacecraftState3.setAltitude(0.0d);
    simulatorSpacecraftState3.setModeOperation("2019/05/23-15:09:35");
    int int19 = simulatorSpacecraftState3.getSatsInView();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 340.0d + "'", double5 == 340.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 340.0d + "'", double10 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str11.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
  }

  @Test
  public void test0727() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0727");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setAutoStartSystem(true);
    java.lang.String str18 = simulatorHeader12.getEndDateString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
  }

  @Test
  public void test0728() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0728");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    long long3 = uInteger1.getValue();
    long long4 = uInteger1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uInteger1.getAreaVersion();
    java.lang.String str6 = uInteger1.toString();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = uInteger1.getServiceNumber();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience16 = new opssat.simulator.orekit.GPSSatInViewScience(
        (-30), 64, 7, 281475010265070L, (-1.0f), 281474993487879L, (byte) 1, (short) 100);
    double double17 = gPSSatInViewScience16.getAvgDistance();
    double double18 = gPSSatInViewScience16.getStdDevDistance();
    double double19 = gPSSatInViewScience16.getMaxDistance();
    double double20 = gPSSatInViewScience16.getStdDevElevation();
    double double21 = gPSSatInViewScience16.getMaxElevation();
    boolean boolean22 = uInteger1.equals(double21);
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 13L + "'", long3 == 13L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "13" + "'", str6.equals("13"));
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 64.0d + "'", double19 == 64.0d);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 2.8147501026507E14d + "'",
        double21 == 2.8147501026507E14d);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
  }

  @Test
  public void test0729() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0729");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    simulatorHeader12.setUseCelestia(true);
    int int38 = simulatorHeader12.getYearStartDate();
    java.lang.String str39 = simulatorHeader12.getStartDateString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
  }

  @Test
  public void test0730() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0730");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    java.lang.Integer int6 = octetList0.getTypeShortForm();
    java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
    int int13 = booleanList10.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor14 = booleanList10.iterator();
    boolean boolean16 = booleanList10.remove(10.0f);
    int int17 = octetList0.indexOf(booleanList10);
    octetList0.trimToSize();
    org.ccsds.moims.mo.mal.structures.Element element19 = octetList0.createElement();
    org.ccsds.moims.mo.mal.structures.UShort uShort20 = octetList0.getAreaNumber();
    try {
      octetList0.add(2, (byte) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 2, Size: 0");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-7) + "'", int6.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    org.junit.Assert.assertNotNull(booleanItor14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(element19);
    org.junit.Assert.assertNotNull(uShort20);
  }

  @Test
  public void test0731() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0731");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    boolean boolean15 = uShortList2.contains(longList12);
    org.ccsds.moims.mo.mal.structures.UShort uShort16 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean17 = uShortList2.add(uShort16);
    java.lang.Double[] doubleArray22 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList23 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean24 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList23, doubleArray22);
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort25 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27,
        uShortArray26);
    uShortList27.ensureCapacity(0);
    int int32 = uShortList27.indexOf((byte) 1);
    uShortList27.clear();
    java.lang.Long[] longArray36 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList37 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList37, longArray36);
    java.lang.Object obj39 = longList37.clone();
    boolean boolean40 = uShortList27.contains(longList37);
    boolean boolean41 = doubleList23.equals(boolean40);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    int int48 = intList45.lastIndexOf((byte) 10);
    boolean boolean49 = doubleList23.removeAll(intList45);
    org.ccsds.moims.mo.mal.structures.OctetList octetList50 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList50.ensureCapacity(13);
    java.lang.Byte[] byteArray57 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList58 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean59 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList58, byteArray57);
    java.lang.Integer[] intArray62 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList63 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean64 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList63, intArray62);
    boolean boolean65 = byteList58.retainAll(intList63);
    boolean boolean66 = octetList50.containsAll(intList63);
    boolean boolean67 = doubleList23.removeAll(intList63);
    boolean boolean68 = uShortList2.containsAll(intList63);
    org.ccsds.moims.mo.mal.structures.Duration duration70 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet71 = duration70.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort72 = duration70.getAreaNumber();
    int int73 = uShortList2.indexOf(duration70);
    java.lang.Integer int74 = duration70.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.OctetList octetList75 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int76 = octetList75.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort77 = octetList75.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet78 = octetList75.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException80 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray81 = wavFileException80.getSuppressed();
    boolean boolean82 = octetList75.equals(wavFileException80);
    org.ccsds.moims.mo.mal.structures.FloatList floatList84 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int85 = floatList84.getTypeShortForm();
    java.lang.Integer int86 = floatList84.getTypeShortForm();
    floatList84.clear();
    boolean boolean88 = octetList75.remove(floatList84);
    org.ccsds.moims.mo.mal.structures.UShort uShort89 = floatList84.getServiceNumber();
    boolean boolean90 = duration70.equals(floatList84);
    floatList84.ensureCapacity(7);
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(uShort16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertNotNull(doubleArray22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShortArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertNotNull(longArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertNotNull(obj39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertNotNull(byteArray57);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
    org.junit.Assert.assertNotNull(intArray62);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    org.junit.Assert.assertNotNull(uOctet71);
    org.junit.Assert.assertNotNull(uShort72);
    org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
    org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74.equals(3));
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-7) + "'", int76.equals((-7)));
    org.junit.Assert.assertNotNull(uShort77);
    org.junit.Assert.assertNotNull(uOctet78);
    org.junit.Assert.assertNotNull(throwableArray81);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-4) + "'", int85.equals((-4)));
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-4) + "'", int86.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    org.junit.Assert.assertNotNull(uShort89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
  }

  @Test
  public void test0733() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0733");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    org.ccsds.moims.mo.mal.structures.UShort uShort14 = floatList9.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort15 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList16 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int17 = octetList16.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort18 = octetList16.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort19 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort20 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort23 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray26 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort25 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList27 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean28 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList27,
        uShortArray26);
    uShortList27.ensureCapacity(0);
    int int32 = uShortList27.indexOf((byte) 1);
    uShortList27.clear();
    java.lang.Long[] longArray36 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList37 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList37, longArray36);
    java.lang.Object obj39 = longList37.clone();
    boolean boolean40 = uShortList27.contains(longList37);
    org.ccsds.moims.mo.mal.structures.UShort uShort41 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean42 = uShortList27.add(uShort41);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray43 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort15, uShort18, uShort19, uShort20, uShort21, uShort22, uShort23, uShort24, uShort41 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList44 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean45 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList44,
        uShortArray43);
    uShortList44.ensureCapacity(100);
    int int48 = uShortList44.size();
    org.ccsds.moims.mo.mal.structures.OctetList octetList49 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList49.ensureCapacity(13);
    java.lang.Byte[] byteArray56 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList57 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean58 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList57, byteArray56);
    java.lang.Integer[] intArray61 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList62 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean63 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList62, intArray61);
    boolean boolean64 = byteList57.retainAll(intList62);
    boolean boolean65 = octetList49.containsAll(intList62);
    java.util.Iterator<java.lang.Integer> intItor66 = intList62.iterator();
    boolean boolean67 = uShortList44.remove(intList62);
    org.ccsds.moims.mo.mal.structures.UShortList uShortList68 = new org.ccsds.moims.mo.mal.structures.UShortList();
    java.lang.Boolean[] booleanArray71 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList72 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean73 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList72, booleanArray71);
    int int75 = booleanList72.indexOf(10);
    int int76 = booleanList72.size();
    java.lang.Byte[] byteArray80 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList81 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean82 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList81, byteArray80);
    java.lang.Object[] objArray83 = byteList81.toArray();
    java.util.Iterator<java.lang.Byte> byteItor84 = byteList81.iterator();
    boolean boolean85 = booleanList72.contains(byteList81);
    java.util.stream.Stream<java.lang.Boolean> booleanStream86 = booleanList72.stream();
    int int87 = uShortList68.lastIndexOf(booleanList72);
    org.ccsds.moims.mo.mal.structures.UShort uShort88 = uShortList68.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort89 = uShortList68.getServiceNumber();
    boolean boolean90 = intList62.equals(uShortList68);
    boolean boolean91 = floatList9.removeAll(intList62);
    org.ccsds.moims.mo.mal.structures.Element element92 = floatList9.createElement();
    org.ccsds.moims.mo.mal.structures.FloatList floatList94 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet95 = floatList94.getAreaVersion();
    java.lang.String str96 = floatList94.toString();
    java.util.Iterator<java.lang.Float> floatItor97 = floatList94.iterator();
    floatList94.clear();
    boolean boolean99 = floatList9.remove(floatList94);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(uShort14);
    org.junit.Assert.assertNotNull(uShort15);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-7) + "'", int17.equals((-7)));
    org.junit.Assert.assertNotNull(uShort18);
    org.junit.Assert.assertNotNull(uShort19);
    org.junit.Assert.assertNotNull(uShort20);
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertNotNull(uShort22);
    org.junit.Assert.assertNotNull(uShort23);
    org.junit.Assert.assertNotNull(uShort24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShortArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertNotNull(longArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertNotNull(obj39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertNotNull(uShort41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
    org.junit.Assert.assertNotNull(uShortArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 9 + "'", int48 == 9);
    org.junit.Assert.assertNotNull(byteArray56);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
    org.junit.Assert.assertNotNull(intArray61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
    org.junit.Assert.assertNotNull(intItor66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    org.junit.Assert.assertNotNull(booleanArray71);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
    org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2 + "'", int76 == 2);
    org.junit.Assert.assertNotNull(byteArray80);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
    org.junit.Assert.assertNotNull(objArray83);
    org.junit.Assert.assertNotNull(byteItor84);
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", !boolean85);
    org.junit.Assert.assertNotNull(booleanStream86);
    org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
    org.junit.Assert.assertNotNull(uShort88);
    org.junit.Assert.assertNotNull(uShort89);
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
    org.junit.Assert.assertNotNull(element92);
    org.junit.Assert.assertNotNull(uOctet95);
    org.junit.Assert.assertTrue("'" + str96 + "' != '" + "[]" + "'", str96.equals("[]"));
    org.junit.Assert.assertNotNull(floatItor97);
    org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", !boolean99);
  }

  @Test
  public void test0734() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0734");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState19 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray22 = new float[] { 28, 8 };
    simulatorSpacecraftState19.setQ(floatArray22);
    float[] floatArray24 = simulatorSpacecraftState19.getQ();
    opssat.simulator.celestia.CelestiaData celestiaData25 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray24);
    java.lang.String str26 = celestiaData25.getLos();
    java.lang.String str27 = celestiaData25.getDnx();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertNotNull(floatArray22);
    org.junit.Assert.assertNotNull(floatArray24);
    org.junit.Assert.assertNull(str26);
    org.junit.Assert.assertNull(str27);
  }

  @Test
  public void test0735() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0735");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList2 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor3 = shortList2.listIterator();
    boolean boolean4 = stringList0.equals(shortList2);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience13 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double14 = gPSSatInViewScience13.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience23 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience32 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double33 = gPSSatInViewScience32.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience42 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience51 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double52 = gPSSatInViewScience51.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray53 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience13, gPSSatInViewScience23, gPSSatInViewScience32, gPSSatInViewScience42,
        gPSSatInViewScience51 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray54 = shortList2
        .toArray(gPSSatInViewScienceArray53);
    java.util.stream.Stream<java.lang.Short> shortStream55 = shortList2.stream();
    org.junit.Assert.assertNotNull(shortItor3);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    org.junit.Assert.assertTrue("'" + double52 + "' != '" + 11111.0d + "'", double52 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray53);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray54);
    org.junit.Assert.assertNotNull(shortStream55);
  }

  @Test
  public void test0736() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0736");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "SimulatorData");
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList2 = simulatorDeviceData1
        .getDataList();
    org.junit.Assert.assertNotNull(argumentDescriptorList2);
  }

  @Test
  public void test0737() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0737");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    java.lang.String str4 = simulatorSchedulerPiece3.getSchedulerOutput();
    java.lang.String str5 = simulatorSchedulerPiece3.getFileString();
    org.junit.Assert.assertTrue(
        "'" + str4 + "' != '" + "00000:00:00:00:013  0     hi!          executed false   | " + "'",
        str4.equals("00000:00:00:00:013  0     hi!          executed false   | "));
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str5.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
  }

  @Test
  public void test0738() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0738");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    int int5 = opssat.simulator.util.DateExtraction.getDayFromDate(date4);
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap12 = opssat.simulator.util.SimulatorData
        .computeDiff(date8, date11);
    opssat.simulator.util.SimulatorHeader simulatorHeader13 = new opssat.simulator.util.SimulatorHeader(
        false, date4, date11);
    java.util.Date date14 = simulatorHeader13.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData15 = new opssat.simulator.util.SimulatorData(
        13, date14);
    simulatorData15.incrementMethods();
    java.lang.String str17 = simulatorData15.getCurrentYear();
    java.lang.String str18 = simulatorData15.getCurrentDay();
    int int19 = simulatorData15.getTimeFactor();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(timeUnitMap12);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
  }

  @Test
  public void test0740() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0740");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    java.lang.Integer int6 = octetList0.getTypeShortForm();
    java.lang.Boolean[] booleanArray9 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList10 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList10, booleanArray9);
    int int13 = booleanList10.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor14 = booleanList10.iterator();
    boolean boolean16 = booleanList10.remove(10.0f);
    int int17 = octetList0.indexOf(booleanList10);
    org.ccsds.moims.mo.mal.structures.UShort uShort18 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray19 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort18 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList20 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean21 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList20,
        uShortArray19);
    uShortList20.ensureCapacity(0);
    int int25 = uShortList20.indexOf((byte) 1);
    uShortList20.clear();
    java.lang.Long[] longArray29 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList30 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList30, longArray29);
    java.lang.Object obj32 = longList30.clone();
    int int33 = uShortList20.lastIndexOf(obj32);
    java.lang.Byte[] byteArray38 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList39 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean40 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList39, byteArray38);
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    boolean boolean46 = byteList39.retainAll(intList44);
    java.lang.Integer[] intArray49 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList50 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean51 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList50, intArray49);
    int int53 = intList50.lastIndexOf((byte) 10);
    boolean boolean54 = intList44.retainAll(intList50);
    java.lang.Object obj55 = intList44.clone();
    boolean boolean56 = uShortList20.removeAll(intList44);
    java.lang.Object[] objArray57 = uShortList20.toArray();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet58 = org.ccsds.moims.mo.mal.structures.StringList.AREA_VERSION;
    boolean boolean59 = uShortList20.equals(uOctet58);
    java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) 1, (byte) -1, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
    boolean boolean67 = byteList64.add((byte) 100);
    java.util.stream.Stream<java.lang.Byte> byteStream68 = byteList64.stream();
    int int69 = uShortList20.lastIndexOf(byteList64);
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor71 = new opssat.simulator.util.ArgumentDescriptor(
        int69, "[]");
    int int72 = booleanList10.lastIndexOf("[]");
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-7) + "'", int6.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    org.junit.Assert.assertNotNull(booleanItor14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(uShort18);
    org.junit.Assert.assertNotNull(uShortArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    org.junit.Assert.assertNotNull(longArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertNotNull(obj32);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
    org.junit.Assert.assertNotNull(byteArray38);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertNotNull(intArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
    org.junit.Assert.assertNotNull(obj55);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    org.junit.Assert.assertNotNull(objArray57);
    org.junit.Assert.assertNotNull(uOctet58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    org.junit.Assert.assertNotNull(byteArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
    org.junit.Assert.assertNotNull(byteStream68);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
  }

  @Test
  public void test0741() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0741");
    org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(
        11);
    org.ccsds.moims.mo.mal.structures.Element element2 = uRIList1.createElement();
    org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int5 = uRI4.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = uRI4.getAreaVersion();
    java.lang.Long long7 = uRI4.getShortForm();
    boolean boolean8 = uRIList1.equals(long7);
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = uRIList1.getAreaNumber();
    java.lang.Boolean[] booleanArray12 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList13 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean14 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList13, booleanArray12);
    int int16 = booleanList13.indexOf(10);
    booleanList13.clear();
    opssat.simulator.util.DateExtraction dateExtraction18 = new opssat.simulator.util.DateExtraction();
    boolean boolean19 = booleanList13.equals(dateExtraction18);
    boolean boolean20 = booleanList13.isEmpty();
    java.util.stream.Stream<java.lang.Boolean> booleanStream21 = booleanList13.parallelStream();
    boolean boolean22 = uRIList1.remove(booleanList13);
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 18 + "'", int5.equals(18));
    org.junit.Assert.assertNotNull(uOctet6);
    org.junit.Assert.assertTrue("'" + long7 + "' != '" + 281474993487890L + "'",
        long7.equals(281474993487890L));
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(booleanArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(booleanStream21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
  }

  @Test
  public void test0742() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0742");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    java.lang.Object obj2 = octetList0.clone();
    octetList0.trimToSize();
    int int5 = octetList0.indexOf(
        "SimulatorHeader{autoStartSystem=false, autoStartTime=false, timeFactor=1, startDate=Thu May 23 15:09:44 UTC 2019, endDate=Thu May 23 15:09:44 UTC 2019}");
    java.lang.Float[] floatArray9 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList10 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList10, floatArray9);
    boolean boolean13 = floatList10.add((-1.0f));
    floatList10.clear();
    boolean boolean15 = floatList10.isEmpty();
    java.util.ListIterator<java.lang.Float> floatItor16 = floatList10.listIterator();
    floatList10.ensureCapacity((-11));
    java.lang.Object obj19 = floatList10.clone();
    org.ccsds.moims.mo.mal.structures.OctetList octetList20 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int21 = octetList20.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort22 = octetList20.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = octetList23.getAreaNumber();
    java.lang.Object[] objArray26 = octetList23.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList27 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int28 = octetList27.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort29 = octetList27.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor30 = octetList27.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor32 = new opssat.simulator.util.ArgumentDescriptor(
        octetList27, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = octetList27.getAreaNumber();
    java.lang.Boolean[] booleanArray36 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList37 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList37, booleanArray36);
    int int40 = booleanList37.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor41 = booleanList37.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator42 = booleanList37.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList43 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int44 = octetList43.getTypeShortForm();
    java.lang.Object obj45 = octetList43.clone();
    octetList43.trimToSize();
    boolean boolean47 = booleanList37.contains(octetList43);
    org.ccsds.moims.mo.mal.structures.OctetList octetList48 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int49 = octetList48.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort50 = octetList48.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList51 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int52 = octetList51.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort53 = octetList51.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet54 = octetList51.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList55 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int56 = octetList55.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort57 = octetList55.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray58 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList23, octetList27, octetList43, octetList48, octetList51, octetList55 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray59 = octetList20
        .toArray(octetListArray58);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet60 = octetList20.getAreaVersion();
    int int61 = floatList10.lastIndexOf(octetList20);
    java.util.stream.Stream<java.lang.Float> floatStream62 = floatList10.parallelStream();
    boolean boolean63 = octetList0.contains(floatStream62);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    org.junit.Assert.assertNotNull(floatArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    org.junit.Assert.assertNotNull(floatItor16);
    org.junit.Assert.assertNotNull(obj19);
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-7) + "'", int21.equals((-7)));
    org.junit.Assert.assertNotNull(uShort22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(objArray26);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-7) + "'", int28.equals((-7)));
    org.junit.Assert.assertNotNull(uShort29);
    org.junit.Assert.assertNotNull(byteItor30);
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(booleanArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
    org.junit.Assert.assertNotNull(booleanItor41);
    org.junit.Assert.assertNotNull(booleanSpliterator42);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-7) + "'", int44.equals((-7)));
    org.junit.Assert.assertNotNull(obj45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
    org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-7) + "'", int49.equals((-7)));
    org.junit.Assert.assertNotNull(uShort50);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-7) + "'", int52.equals((-7)));
    org.junit.Assert.assertNotNull(uShort53);
    org.junit.Assert.assertNotNull(uOctet54);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-7) + "'", int56.equals((-7)));
    org.junit.Assert.assertNotNull(uShort57);
    org.junit.Assert.assertNotNull(octetListArray58);
    org.junit.Assert.assertNotNull(octetListArray59);
    org.junit.Assert.assertNotNull(uOctet60);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    org.junit.Assert.assertNotNull(floatStream62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
  }

  @Test
  public void test0743() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0743");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    java.util.Iterator<java.lang.String> strItor1 = stringList0.iterator();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = stringList0.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray9 = new float[] { 28, 8 };
    simulatorSpacecraftState6.setQ(floatArray9);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double15 = simulatorSpacecraftState14.getLatitude();
    java.lang.String str16 = simulatorSpacecraftState14.getMagField();
    float[] floatArray17 = simulatorSpacecraftState14.getR();
    simulatorSpacecraftState6.setQ(floatArray17);
    java.lang.String str19 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double24 = simulatorSpacecraftState23.getLatitude();
    double double25 = simulatorSpacecraftState23.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    float[] floatArray32 = simulatorSpacecraftState29.getR();
    simulatorSpacecraftState23.setQ(floatArray32);
    float[] floatArray34 = simulatorSpacecraftState23.getV();
    opssat.simulator.celestia.CelestiaData celestiaData35 = new opssat.simulator.celestia.CelestiaData(
        floatArray17, floatArray34);
    float[] floatArray36 = celestiaData35.getQ();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (short) 0, date41);
    celestiaData35.setDate(date41);
    int int53 = celestiaData35.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState57 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray60 = new float[] { 28, 8 };
    simulatorSpacecraftState57.setQ(floatArray60);
    celestiaData35.setQ(floatArray60);
    int int63 = stringList0.lastIndexOf(celestiaData35);
    int int64 = celestiaData35.getYears();
    java.lang.String str65 = celestiaData35.getDnx();
    org.junit.Assert.assertNotNull(strItor1);
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(floatArray9);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 340.0d + "'", double15 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str16.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "UnknownGUIData" + "'",
        str19.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 340.0d + "'", double24 == 340.0d);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    org.junit.Assert.assertNull(str65);
  }

  @Test
  public void test0744() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0744");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    java.util.ListIterator<java.lang.Float> floatItor14 = floatList9.listIterator();
    org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList9.getAreaNumber();
    floatList9.trimToSize();
    java.util.Iterator<java.lang.Float> floatItor17 = floatList9.iterator();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(floatItor14);
    org.junit.Assert.assertNotNull(uShort15);
    org.junit.Assert.assertNotNull(floatItor17);
  }

  @Test
  public void test0745() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0745");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.clear();
    boolean boolean9 = floatList4.isEmpty();
    java.util.ListIterator<java.lang.Float> floatItor10 = floatList4.listIterator();
    java.lang.Float[] floatArray14 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList15 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList15, floatArray14);
    boolean boolean18 = floatList15.add((-1.0f));
    floatList15.trimToSize();
    org.ccsds.moims.mo.mal.structures.URI uRI21 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int22 = uRI21.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI24 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = uRI24.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI27 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray28 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI21, uRI24, uRI27 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList29, uRIArray28);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime31 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int32 = uRIList29.indexOf(fineTime31);
    uRIList29.ensureCapacity(40);
    org.ccsds.moims.mo.mal.structures.UShort uShort35 = org.ccsds.moims.mo.mal.structures.URIList.AREA_SHORT_FORM;
    boolean boolean36 = uRIList29.remove(uShort35);
    java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean43 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
    java.lang.Integer[] intArray46 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
    boolean boolean49 = byteList42.retainAll(intList47);
    java.lang.Integer[] intArray52 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList53 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean54 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
    int int56 = intList53.lastIndexOf((byte) 10);
    boolean boolean57 = intList47.removeAll(intList53);
    boolean boolean58 = uRIList29.removeAll(intList47);
    boolean boolean59 = floatList15.containsAll(intList47);
    java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) 1, (byte) -1, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
    boolean boolean67 = byteList64.add((byte) 100);
    java.util.stream.Stream<java.lang.Byte> byteStream68 = byteList64.stream();
    int int69 = floatList15.indexOf(byteStream68);
    floatList15.ensureCapacity((short) -1);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState75 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double76 = simulatorSpacecraftState75.getLatitude();
    java.lang.String str77 = simulatorSpacecraftState75.getMagField();
    java.lang.String str78 = simulatorSpacecraftState75.toString();
    double[] doubleArray79 = simulatorSpacecraftState75.getSunVector();
    simulatorSpacecraftState75.setSatsInView((short) 10);
    double double82 = simulatorSpacecraftState75.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState86 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double87 = simulatorSpacecraftState86.getLatitude();
    double double88 = simulatorSpacecraftState86.getLongitude();
    float[] floatArray89 = simulatorSpacecraftState86.getQ();
    simulatorSpacecraftState75.setRv(floatArray89);
    boolean boolean91 = floatList15.contains(floatArray89);
    int int92 = floatList4.lastIndexOf(floatArray89);
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertNotNull(floatItor10);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int22 + "' != '" + 18 + "'", int22.equals(18));
    org.junit.Assert.assertNotNull(uOctet25);
    org.junit.Assert.assertNotNull(uRIArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    org.junit.Assert.assertNotNull(uShort35);
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", !boolean36);
    org.junit.Assert.assertNotNull(byteArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
    org.junit.Assert.assertNotNull(intArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(intArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    org.junit.Assert.assertNotNull(byteArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67);
    org.junit.Assert.assertNotNull(byteStream68);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    org.junit.Assert.assertTrue("'" + double76 + "' != '" + 340.0d + "'", double76 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str77 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str77.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str78 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str78.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray79);
    org.junit.Assert.assertTrue("'" + double82 + "' != '" + 340.0d + "'", double82 == 340.0d);
    org.junit.Assert.assertTrue("'" + double87 + "' != '" + 340.0d + "'", double87 == 340.0d);
    org.junit.Assert.assertTrue("'" + double88 + "' != '" + (-1.0d) + "'", double88 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray89);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
    org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
  }

  @Test
  public void test0746() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0746");
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor2 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885", "[-1.0, 100.0, 10.0, 10.0]");
    java.lang.String str3 = argumentDescriptor2.getName();
    java.lang.String str4 = argumentDescriptor2.toString();
    java.lang.String str5 = argumentDescriptor2.getName();
    org.junit.Assert.assertTrue(
        "'" + str3 + "' != '" + "UnknownDeviceDataTypeString{281474993487885}" + "'",
        str3.equals("UnknownDeviceDataTypeString{281474993487885}"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '" + "UnknownDeviceDataTypeString{281474993487885}" + "'",
        str5.equals("UnknownDeviceDataTypeString{281474993487885}"));
  }

  @Test
  public void test0747() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0747");
    org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(
        8);
    java.lang.Integer int2 = uRIList1.getTypeShortForm();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState6.setLongitude(4);
    int int9 = simulatorSpacecraftState6.getSatsInView();
    float[] floatArray10 = simulatorSpacecraftState6.getRv();
    boolean boolean11 = uRIList1.remove(floatArray10);
    java.lang.Long long12 = uRIList1.getShortForm();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-18) + "'", int2.equals((-18)));
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    org.junit.Assert.assertNotNull(floatArray10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265070L + "'",
        long12.equals(281475010265070L));
  }

  @Test
  public void test0748() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0748");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    int int5 = opssat.simulator.util.DateExtraction.getDayFromDate(date4);
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap12 = opssat.simulator.util.SimulatorData
        .computeDiff(date8, date11);
    opssat.simulator.util.SimulatorHeader simulatorHeader13 = new opssat.simulator.util.SimulatorHeader(
        false, date4, date11);
    opssat.simulator.util.SimulatorData simulatorData14 = new opssat.simulator.util.SimulatorData(
        (short) 0, date4);
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    int int19 = opssat.simulator.util.DateExtraction.getDayFromDate(date18);
    opssat.simulator.util.SimulatorData simulatorData21 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date22 = simulatorData21.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap26 = opssat.simulator.util.SimulatorData
        .computeDiff(date22, date25);
    opssat.simulator.util.SimulatorHeader simulatorHeader27 = new opssat.simulator.util.SimulatorHeader(
        false, date18, date25);
    java.util.Date date28 = simulatorHeader27.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData32 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date33 = simulatorData32.getCurrentTime();
    java.util.Date date34 = simulatorData32.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData35 = new opssat.simulator.util.SimulatorData(
        17, date34);
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    int int40 = opssat.simulator.util.DateExtraction.getDayFromDate(date39);
    opssat.simulator.util.SimulatorData simulatorData42 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date43 = simulatorData42.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap47 = opssat.simulator.util.SimulatorData
        .computeDiff(date43, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader48 = new opssat.simulator.util.SimulatorHeader(
        false, date39, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader49 = new opssat.simulator.util.SimulatorHeader(
        false, date34, date39);
    simulatorHeader27.setEndDate(date34);
    simulatorData14.initFromHeader(simulatorHeader27);
    simulatorData14.toggleSimulatorRunning();
    java.lang.String str53 = simulatorData14.getUTCCurrentTime2();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(timeUnitMap12);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(timeUnitMap26);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date33);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date43);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(timeUnitMap47);
  }

  @Test
  public void test0749() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0749");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    long long4 = simulatorSchedulerPiece3.getTime();
    int int5 = simulatorSchedulerPiece3.getInternalID();
    simulatorSchedulerPiece3.setExecuted(false);
    java.lang.String str8 = simulatorSchedulerPiece3.getFileString();
    simulatorSchedulerPiece3.setExecuted(false);
    simulatorSchedulerPiece3.setExecuted(true);
    java.lang.String str13 = simulatorSchedulerPiece3.getArgumentTemplateDescription();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str8.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "hi!" + "'", str13.equals("hi!"));
  }

  @Test
  public void test0750() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0750");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setOrekitPropagator("*0B");
    simulatorHeader12.setUseOrekitPropagator(false);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
  }

  @Test
  public void test0751() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0751");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    float[] floatArray8 = simulatorSpacecraftState3.getQ();
    double double9 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray16 = new float[] { 28, 8 };
    simulatorSpacecraftState13.setQ(floatArray16);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    java.lang.String str23 = simulatorSpacecraftState21.getMagField();
    float[] floatArray24 = simulatorSpacecraftState21.getR();
    simulatorSpacecraftState13.setQ(floatArray24);
    java.lang.String str26 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray24);
    simulatorSpacecraftState3.setRv(floatArray24);
    double double28 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState3.toString();
    java.lang.String str30 = simulatorSpacecraftState3.toString();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str23.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray24);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "UnknownGUIData" + "'",
        str26.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str29.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue(
        "'" + str30 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str30.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
  }

  @Test
  public void test0752() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0752");
    org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(
        11);
    boolean boolean2 = uRIList1.isEmpty();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = uRIList1.getAreaNumber();
    java.lang.String str4 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(uShort3);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "UnknownGUIData" + "'",
        str4.equals("UnknownGUIData"));
  }

  @Test
  public void test0753() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0753");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    simulatorHeader12.setOrekitTLE1("");
    java.lang.String str16 = simulatorHeader12.DATE_FORMAT;
    boolean boolean17 = simulatorHeader12.isAutoStartTime();
    int int18 = simulatorHeader12.getDayStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str16.equals("yyyy:MM:dd HH:mm:ss z"));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
  }

  @Test
  public void test0754() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0754");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    int int8 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setAltitude((-5));
    java.lang.String str11 = simulatorSpacecraftState3.getSunVectorAsString();
    double double12 = simulatorSpacecraftState3.getAltitude();
    java.lang.String str13 = simulatorSpacecraftState3.getRotationAsString();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str11.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + (-5.0d) + "'", double12 == (-5.0d));
    org.junit.Assert.assertTrue("'" + str13 + "' != '"
        + "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"
        + "'",
        str13.equals(
            "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"));
  }

  @Test
  public void test0757() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0757");
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor2 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885", "[-1.0, 100.0, 10.0, 10.0]");
    java.lang.String str3 = argumentDescriptor2.getName();
    java.lang.String str4 = argumentDescriptor2.toString();
    java.lang.String str5 = argumentDescriptor2.toString();
    org.junit.Assert.assertTrue(
        "'" + str3 + "' != '" + "UnknownDeviceDataTypeString{281474993487885}" + "'",
        str3.equals("UnknownDeviceDataTypeString{281474993487885}"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "" + "'", str4.equals(""));
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "" + "'", str5.equals(""));
  }

  @Test
  public void test0759() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0759");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState9 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray12 = new float[] { 28, 8 };
    simulatorSpacecraftState9.setQ(floatArray12);
    int int14 = simulatorSpacecraftState9.getSatsInView();
    simulatorSpacecraftState9.setAltitude((-5));
    double[] doubleArray17 = simulatorSpacecraftState9.getSunVector();
    simulatorSpacecraftState3.setMagField(doubleArray17);
    float[] floatArray19 = simulatorSpacecraftState3.getV();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertNotNull(doubleArray17);
    org.junit.Assert.assertNotNull(floatArray19);
  }

  @Test
  public void test0760() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0760");
    java.lang.Long[] longArray3 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList4 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList4, longArray3);
    boolean boolean7 = longList4.add(281474993487885L);
    org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = uRI9.getAreaVersion();
    opssat.simulator.models.AbstractModel abstractModel12 = new opssat.simulator.models.AbstractModel(
        "0100.0000");
    boolean boolean13 = uOctet10.equals(abstractModel12);
    boolean boolean14 = longList4.contains(abstractModel12);
    java.util.Iterator<java.lang.Long> longItor15 = longList4.iterator();
    org.junit.Assert.assertNotNull(longArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertNotNull(uOctet10);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNotNull(longItor15);
  }

  @Test
  public void test0761() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0761");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    org.ccsds.moims.mo.mal.structures.Union union5 = new org.ccsds.moims.mo.mal.structures.Union(
        "$DEFAULT");
    endlessSingleStreamOperatingBuffer1.setDataBuffer("$DEFAULT");
    byte[] byteArray8 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(20);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray8);
    java.lang.Object obj10 = endlessSingleStreamOperatingBuffer1.getDataBuffer();
    endlessSingleStreamOperatingBuffer1.setOperatingIndex(9);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray8);
    org.junit.Assert.assertNotNull(obj10);
  }

  @Test
  public void test0763() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0763");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    java.lang.Object obj2 = octetList0.clone();
    octetList0.trimToSize();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList0.iterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList5 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList5.ensureCapacity(13);
    java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean14 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
    java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList18 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean19 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
    boolean boolean20 = byteList13.retainAll(intList18);
    boolean boolean21 = octetList5.containsAll(intList18);
    boolean boolean22 = octetList0.equals(intList18);
    boolean boolean23 = intList18.isEmpty();
    java.util.Collection<java.lang.Integer> intCollection24 = null;
    try {
      boolean boolean25 = intList18.removeAll(intCollection24);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertNotNull(byteArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    org.junit.Assert.assertNotNull(intArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
  }

  @Test
  public void test0764() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0764");
    opssat.simulator.util.wav.WavFileException wavFileException0 = new opssat.simulator.util.wav.WavFileException();
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException(
        "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}");
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException();
    org.ccsds.moims.mo.mal.structures.OctetList octetList4 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int5 = octetList4.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = octetList4.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = octetList4.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException9 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray10 = wavFileException9.getSuppressed();
    boolean boolean11 = octetList4.equals(wavFileException9);
    wavFileException3.addSuppressed(wavFileException9);
    wavFileException2.addSuppressed(wavFileException9);
    opssat.simulator.util.wav.WavFileException wavFileException14 = new opssat.simulator.util.wav.WavFileException(
        wavFileException9);
    opssat.simulator.util.wav.WavFileException wavFileException16 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException9.addSuppressed(wavFileException16);
    wavFileException0.addSuppressed(wavFileException16);
    java.lang.Throwable[] throwableArray19 = wavFileException16.getSuppressed();
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-7) + "'", int5.equals((-7)));
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uOctet7);
    org.junit.Assert.assertNotNull(throwableArray10);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertNotNull(throwableArray19);
  }

  @Test
  public void test0765() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0765");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "-0100.0000000");
  }

  @Test
  public void test0766() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0766");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.clear();
    java.util.stream.Stream<java.lang.Float> floatStream9 = floatList4.parallelStream();
    java.lang.String str10 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatStream9);
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertNotNull(floatStream9);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "UnknownGUIData" + "'",
        str10.equals("UnknownGUIData"));
  }

  @Test
  public void test0767() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0767");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    simulatorData3.toggleSimulatorRunning();
    simulatorData3.setTimeFactor(41);
    endlessWavStreamOperatingBuffer1.setDataBuffer(41);
    endlessWavStreamOperatingBuffer1.setOperatingIndex((byte) 100);
    java.lang.String str12 = endlessWavStreamOperatingBuffer1.getDataBufferAsString();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertTrue(
        "'" + str12 + "' != '" + "Unknown data type [java.lang.Integer]" + "'",
        str12.equals("Unknown data type [java.lang.Integer]"));
  }

  @Test
  public void test0768() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0768");
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor2 = new opssat.simulator.util.ArgumentDescriptor(
        "281474993487885",
        "{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:34 UTC 2019}");
    java.lang.String str3 = argumentDescriptor2.toString();
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "" + "'", str3.equals(""));
  }

  @Test
  public void test0769() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0769");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.PNanomind pNanomind2 = new opssat.simulator.peripherals.PNanomind(
        simulatorNode0, "2019:05:23 15:09:44 UTC");
    try {
      pNanomind2.SetOperationMode((byte) 0);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0770() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0770");
    float[] floatArray0 = null;
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState4 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray7 = new float[] { 28, 8 };
    simulatorSpacecraftState4.setQ(floatArray7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double13 = simulatorSpacecraftState12.getLatitude();
    java.lang.String str14 = simulatorSpacecraftState12.getMagField();
    float[] floatArray15 = simulatorSpacecraftState12.getR();
    simulatorSpacecraftState4.setQ(floatArray15);
    java.lang.String str17 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray15);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    double double23 = simulatorSpacecraftState21.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    java.lang.String str29 = simulatorSpacecraftState27.getMagField();
    float[] floatArray30 = simulatorSpacecraftState27.getR();
    simulatorSpacecraftState21.setQ(floatArray30);
    float[] floatArray32 = simulatorSpacecraftState21.getV();
    opssat.simulator.celestia.CelestiaData celestiaData33 = new opssat.simulator.celestia.CelestiaData(
        floatArray15, floatArray32);
    float[] floatArray34 = celestiaData33.getQ();
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    int int40 = opssat.simulator.util.DateExtraction.getDayFromDate(date39);
    opssat.simulator.util.SimulatorData simulatorData42 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date43 = simulatorData42.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap47 = opssat.simulator.util.SimulatorData
        .computeDiff(date43, date46);
    opssat.simulator.util.SimulatorHeader simulatorHeader48 = new opssat.simulator.util.SimulatorHeader(
        false, date39, date46);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (short) 0, date39);
    celestiaData33.setDate(date39);
    int int51 = celestiaData33.getMonths();
    float[] floatArray52 = celestiaData33.getRv();
    opssat.simulator.celestia.CelestiaData celestiaData53 = new opssat.simulator.celestia.CelestiaData(
        floatArray0, floatArray52);
    java.lang.String str54 = celestiaData53.getLos();
    celestiaData53.setAnx("0309");
    float[] floatArray57 = celestiaData53.getQ();
    try {
      int int58 = celestiaData53.getHours();
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertNotNull(floatArray7);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 340.0d + "'", double13 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str14.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertTrue("'" + str17 + "' != '" + "UnknownGUIData" + "'",
        str17.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str29.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray30);
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date43);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(timeUnitMap47);
    org.junit.Assert.assertNotNull(floatArray52);
    org.junit.Assert.assertNull(str54);
    org.junit.Assert.assertNotNull(floatArray57);
  }

  @Test
  public void test0771() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0771");
    opssat.simulator.util.wav.WavFileException wavFileException1 = new opssat.simulator.util.wav.WavFileException(
        "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}");
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException();
    org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int4 = octetList3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = octetList3.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException8 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray9 = wavFileException8.getSuppressed();
    boolean boolean10 = octetList3.equals(wavFileException8);
    wavFileException2.addSuppressed(wavFileException8);
    wavFileException1.addSuppressed(wavFileException8);
    opssat.simulator.util.wav.WavFileException wavFileException13 = new opssat.simulator.util.wav.WavFileException(
        wavFileException8);
    opssat.simulator.util.wav.WavFileException wavFileException15 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException8.addSuppressed(wavFileException15);
    java.lang.Throwable[] throwableArray17 = wavFileException15.getSuppressed();
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-7) + "'", int4.equals((-7)));
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uOctet6);
    org.junit.Assert.assertNotNull(throwableArray9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(throwableArray17);
  }

  @Test
  public void test0772() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0772");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    java.lang.String str50 = celestiaData32.getLos();
    int int51 = celestiaData32.getMonths();
    celestiaData32.setDate("0000.0000");
    float[] floatArray54 = celestiaData32.getRv();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNull(str50);
    org.junit.Assert.assertNotNull(floatArray54);
  }

  @Test
  public void test0773() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0773");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    int int72 = celestiaData43.getYears();
    float[] floatArray73 = celestiaData43.getQ();
    int int74 = celestiaData43.getHours();
    opssat.simulator.util.SimulatorData simulatorData76 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date77 = simulatorData76.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData79 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date80 = simulatorData79.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap81 = opssat.simulator.util.SimulatorData
        .computeDiff(date77, date80);
    opssat.simulator.util.SimulatorData simulatorData83 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date84 = simulatorData83.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData86 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date87 = simulatorData86.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap88 = opssat.simulator.util.SimulatorData
        .computeDiff(date84, date87);
    int int89 = opssat.simulator.util.DateExtraction.getHourFromDate(date84);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap90 = opssat.simulator.util.SimulatorData
        .computeDiff(date77, date84);
    celestiaData43.setDate(date77);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNotNull(floatArray73);
    org.junit.Assert.assertNotNull(date77);
    org.junit.Assert.assertNotNull(date80);
    org.junit.Assert.assertNotNull(timeUnitMap81);
    org.junit.Assert.assertNotNull(date84);
    org.junit.Assert.assertNotNull(date87);
    org.junit.Assert.assertNotNull(timeUnitMap88);
    org.junit.Assert.assertNotNull(timeUnitMap90);
  }

  @Test
  public void test0774() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0774");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMinElevation();
    double double10 = gPSSatInViewScience8.getMaxElevation();
    double double11 = gPSSatInViewScience8.getStdDevDistance();
    double double12 = gPSSatInViewScience8.getAvgDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 48.0d + "'", double9 == 48.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 56.0d + "'", double10 == 56.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 58.0d + "'", double11 == 58.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
  }

  @Test
  public void test0775() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0775");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    simulatorHeader12.setAutoStartTime(true);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
  }

  @Test
  public void test0776() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0776");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setAutoStartSystem(true);
    simulatorHeader12.setOrekitPropagator("00000:00:00:00:010");
    simulatorHeader12.setKeplerElements("00000:00:00:00:006");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
  }

  @Test
  public void test0777() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0777");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState54 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray57 = new float[] { 28, 8 };
    simulatorSpacecraftState54.setQ(floatArray57);
    celestiaData32.setQ(floatArray57);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState63 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray66 = new float[] { 28, 8 };
    simulatorSpacecraftState63.setQ(floatArray66);
    float[] floatArray71 = new float[] { 281474993487887L, 281475010265070L, 281474993487881L };
    simulatorSpacecraftState63.setRv(floatArray71);
    double[][] doubleArray73 = null;
    simulatorSpacecraftState63.setRotation(doubleArray73);
    float[] floatArray75 = simulatorSpacecraftState63.getR();
    celestiaData32.setRv(floatArray75);
    celestiaData32.setLos("");
    java.lang.String str79 = celestiaData32.getLos();
    int int80 = celestiaData32.getDays();
    int int81 = celestiaData32.getMonths();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray57);
    org.junit.Assert.assertNotNull(floatArray66);
    org.junit.Assert.assertNotNull(floatArray71);
    org.junit.Assert.assertNotNull(floatArray75);
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
  }

  @Test
  public void test0778() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0778");
    java.lang.Double[] doubleArray4 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
    uShortList9.ensureCapacity(0);
    int int14 = uShortList9.indexOf((byte) 1);
    uShortList9.clear();
    java.lang.Long[] longArray18 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean20 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
    java.lang.Object obj21 = longList19.clone();
    boolean boolean22 = uShortList9.contains(longList19);
    boolean boolean23 = doubleList5.equals(boolean22);
    boolean boolean24 = doubleList5.isEmpty();
    java.lang.Double double27 = doubleList5.set(0, 2.81475010265075E14d);
    java.util.Spliterator<java.lang.Double> doubleSpliterator28 = doubleList5.spliterator();
    org.junit.Assert.assertNotNull(doubleArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShortArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(longArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(obj21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'",
        double27.equals((-1.0d)));
    org.junit.Assert.assertNotNull(doubleSpliterator28);
  }

  @Test
  public void test0779() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0779");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int4 = octetList3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
    java.lang.Object[] objArray6 = octetList3.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = octetList7.getAreaNumber();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator22 = booleanList17.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    java.lang.Object obj25 = octetList23.clone();
    octetList23.trimToSize();
    boolean boolean27 = booleanList17.contains(octetList23);
    org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int29 = octetList28.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort30 = octetList28.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList31 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int32 = octetList31.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = octetList31.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = octetList31.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList35 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int36 = octetList35.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = octetList35.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray38 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList3, octetList7, octetList23, octetList28, octetList31, octetList35 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray39 = octetList0
        .toArray(octetListArray38);
    boolean boolean40 = octetList0.isEmpty();
    java.lang.Long long41 = octetList0.getShortForm();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    java.util.Date date47 = simulatorData45.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        17, date47);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date52 = simulatorData51.getCurrentTime();
    int int53 = opssat.simulator.util.DateExtraction.getDayFromDate(date52);
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData58 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date59 = simulatorData58.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap60 = opssat.simulator.util.SimulatorData
        .computeDiff(date56, date59);
    opssat.simulator.util.SimulatorHeader simulatorHeader61 = new opssat.simulator.util.SimulatorHeader(
        false, date52, date59);
    opssat.simulator.util.SimulatorHeader simulatorHeader62 = new opssat.simulator.util.SimulatorHeader(
        false, date47, date52);
    opssat.simulator.util.SimulatorData simulatorData66 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date67 = simulatorData66.getCurrentTime();
    java.util.Date date68 = simulatorData66.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData69 = new opssat.simulator.util.SimulatorData(
        17, date68);
    opssat.simulator.util.SimulatorData simulatorData72 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date73 = simulatorData72.getCurrentTime();
    int int74 = opssat.simulator.util.DateExtraction.getDayFromDate(date73);
    opssat.simulator.util.SimulatorData simulatorData76 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date77 = simulatorData76.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData79 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date80 = simulatorData79.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap81 = opssat.simulator.util.SimulatorData
        .computeDiff(date77, date80);
    opssat.simulator.util.SimulatorHeader simulatorHeader82 = new opssat.simulator.util.SimulatorHeader(
        false, date73, date80);
    opssat.simulator.util.SimulatorHeader simulatorHeader83 = new opssat.simulator.util.SimulatorHeader(
        false, date68, date73);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap84 = opssat.simulator.util.SimulatorData
        .computeDiff(date52, date68);
    int int85 = octetList0.lastIndexOf(date68);
    int int86 = opssat.simulator.util.DateExtraction.getHourFromDate(date68);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-7) + "'", int4.equals((-7)));
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertNotNull(booleanSpliterator22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(obj25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-7) + "'", int29.equals((-7)));
    org.junit.Assert.assertNotNull(uShort30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32.equals((-7)));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(uOctet34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-7) + "'", int36.equals((-7)));
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(octetListArray38);
    org.junit.Assert.assertNotNull(octetListArray39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertTrue("'" + long41 + "' != '" + 281475010265081L + "'",
        long41.equals(281475010265081L));
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(date47);
    org.junit.Assert.assertNotNull(date52);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(date59);
    org.junit.Assert.assertNotNull(timeUnitMap60);
    org.junit.Assert.assertNotNull(date67);
    org.junit.Assert.assertNotNull(date68);
    org.junit.Assert.assertNotNull(date73);
    org.junit.Assert.assertNotNull(date77);
    org.junit.Assert.assertNotNull(date80);
    org.junit.Assert.assertNotNull(timeUnitMap81);
    org.junit.Assert.assertNotNull(timeUnitMap84);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
  }

  @Test
  public void test0780() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0780");
    org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList1.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor6 = new opssat.simulator.util.ArgumentDescriptor(
        octetList1, "hi!");
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    java.lang.String str10 = argumentDescriptor6.toString();
    boolean boolean11 = identifier0.equals(str10);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray18 = new float[] { 28, 8 };
    simulatorSpacecraftState15.setQ(floatArray18);
    float[] floatArray20 = simulatorSpacecraftState15.getQ();
    double double21 = simulatorSpacecraftState15.getLongitude();
    boolean boolean22 = identifier0.equals(simulatorSpacecraftState15);
    java.lang.String str23 = simulatorSpacecraftState15.getRotationAsString();
    simulatorSpacecraftState15.setSatsInView(2);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertNotNull(floatArray18);
    org.junit.Assert.assertNotNull(floatArray20);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + str23 + "' != '"
        + "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"
        + "'",
        str23.equals(
            "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"));
  }

  @Test
  public void test0782() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0782");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.PNanomind pNanomind2 = new opssat.simulator.peripherals.PNanomind(
        simulatorNode0, "2019:05:23 15:09:44 UTC");
    try {
      byte byte3 = pNanomind2.GetPowerState();
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0783() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0783");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    int int17 = simulatorHeader12.getTimeFactor();
    simulatorHeader12.setAutoStartTime(false);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
  }

  @Test
  public void test0784() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0784");
    java.lang.Integer[] intArray7 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList8 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean9 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList8, intArray7);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    int int29 = intList26.lastIndexOf((byte) 10);
    boolean boolean30 = intList20.removeAll(intList26);
    boolean boolean31 = intList8.retainAll(intList26);
    org.ccsds.moims.mo.mal.structures.OctetList octetList32 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int33 = octetList32.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort34 = octetList32.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet35 = octetList32.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException37 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray38 = wavFileException37.getSuppressed();
    boolean boolean39 = octetList32.equals(wavFileException37);
    opssat.simulator.util.wav.WavFileException wavFileException41 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException37.addSuppressed(wavFileException41);
    java.lang.String str43 = wavFileException41.toString();
    int int44 = intList26.lastIndexOf(wavFileException41);
    intList26.trimToSize();
    try {
      intList26.add(62, 39);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 62, Size: 2");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(intArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-7) + "'", int33.equals((-7)));
    org.junit.Assert.assertNotNull(uShort34);
    org.junit.Assert.assertNotNull(uOctet35);
    org.junit.Assert.assertNotNull(throwableArray38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert
        .assertTrue(
            "'" + str43 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str43.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
  }

  @Test
  public void test0785() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0785");
    java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList4 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList4, byteArray3);
    java.lang.Object[] objArray6 = byteList4.toArray();
    java.util.Iterator<java.lang.Byte> byteItor7 = byteList4.iterator();
    java.util.ListIterator<java.lang.Byte> byteItor8 = byteList4.listIterator();
    org.ccsds.moims.mo.mal.structures.StringList stringList9 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList11 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor12 = shortList11.listIterator();
    boolean boolean13 = stringList9.equals(shortList11);
    java.util.stream.BaseStream[] baseStreamArray15 = new java.util.stream.BaseStream[0];
    @SuppressWarnings("unchecked")
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray16 = baseStreamArray15;
    java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[] floatBaseStreamArray17 = stringList9
        .toArray(
            (java.util.stream.BaseStream<java.lang.Float, java.util.stream.Stream<java.lang.Float>>[]) baseStreamArray15);
    java.util.stream.Stream<java.lang.String> strStream18 = stringList9.stream();
    java.lang.Object obj19 = stringList9.clone();
    opssat.simulator.util.LoggerFormatter loggerFormatter20 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter loggerFormatter21 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter loggerFormatter22 = new opssat.simulator.util.LoggerFormatter();
    opssat.simulator.util.LoggerFormatter[] loggerFormatterArray23 = new opssat.simulator.util.LoggerFormatter[] {
        loggerFormatter20, loggerFormatter21, loggerFormatter22 };
    opssat.simulator.util.LoggerFormatter[] loggerFormatterArray24 = stringList9
        .toArray(loggerFormatterArray23);
    boolean boolean25 = byteList4.remove(loggerFormatterArray24);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertNotNull(byteItor7);
    org.junit.Assert.assertNotNull(byteItor8);
    org.junit.Assert.assertNotNull(shortItor12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(baseStreamArray15);
    org.junit.Assert.assertNotNull(floatBaseStreamArray16);
    org.junit.Assert.assertNotNull(floatBaseStreamArray17);
    org.junit.Assert.assertNotNull(strStream18);
    org.junit.Assert.assertNotNull(obj19);
    org.junit.Assert.assertNotNull(loggerFormatterArray23);
    org.junit.Assert.assertNotNull(loggerFormatterArray24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
  }

  @Test
  public void test0786() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0786");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        (-11), 58, 11);
  }

  @Test
  public void test0787() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0787");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    java.lang.String str17 = simulatorHeader12.toString();
    int int18 = simulatorHeader12.getMonthStartDate();
    java.lang.String str19 = simulatorHeader12.DATE_FORMAT;
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str19.equals("yyyy:MM:dd HH:mm:ss z"));
  }

  @Test
  public void test0788() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0788");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setUpdateInternet(false);
    boolean boolean21 = simulatorHeader12.isUpdateInternet();
    boolean boolean22 = simulatorHeader12.checkStartBeforeEnd();
    int int23 = simulatorHeader12.getMonthStartDate();
    boolean boolean24 = simulatorHeader12.isUpdateInternet();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
  }

  @Test
  public void test0789() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0789");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    shortList3.clear();
    boolean boolean6 = shortList3.isEmpty();
    boolean boolean8 = shortList3.equals(5);
    java.lang.String str9 = shortList3.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double14 = simulatorSpacecraftState13.getLatitude();
    java.lang.String str15 = simulatorSpacecraftState13.getMagField();
    java.lang.String str16 = simulatorSpacecraftState13.getSunVectorAsString();
    boolean boolean17 = shortList3.contains(str16);
    java.lang.Float[] floatArray21 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList22 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList22, floatArray21);
    boolean boolean25 = floatList22.add((-1.0f));
    floatList22.clear();
    java.util.stream.Stream<java.lang.Float> floatStream27 = floatList22.stream();
    java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean34 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
    java.lang.Integer[] intArray37 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList38 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
    boolean boolean40 = byteList33.retainAll(intList38);
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    int int47 = intList44.lastIndexOf((byte) 10);
    boolean boolean48 = intList38.retainAll(intList44);
    boolean boolean49 = floatList22.containsAll(intList44);
    java.util.Spliterator<java.lang.Integer> intSpliterator50 = intList44.spliterator();
    java.util.stream.Stream<java.lang.Integer> intStream51 = intList44.parallelStream();
    java.lang.String str52 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(intList44);
    boolean boolean53 = shortList3.containsAll(intList44);
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 340.0d + "'", double14 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str15.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str16.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertNotNull(floatArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertNotNull(floatStream27);
    org.junit.Assert.assertNotNull(byteArray32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
    org.junit.Assert.assertNotNull(intArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertNotNull(intSpliterator50);
    org.junit.Assert.assertNotNull(intStream51);
    org.junit.Assert.assertTrue("'" + str52 + "' != '" + "UnknownGUIData" + "'",
        str52.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
  }

  @Test
  public void test0790() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0790");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    java.lang.String str3 = pOpticalReceiver2.getName();
    try {
      byte[] byteArray5 = pOpticalReceiver2.readFromMessageBuffer(41);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "031008.320" + "'",
        str3.equals("031008.320"));
  }

  @Test
  public void test0791() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0791");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long4 = simulatorData3.getCurrentTimeMillis();
    java.lang.String str5 = simulatorData3.getCurrentDay();
    java.lang.String str6 = simulatorData3.getUTCCurrentTime2();
    simulatorData3.toggleSimulatorRunning();
    java.lang.String str8 = simulatorData3.getUTCCurrentTime();
    java.util.Date date9 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    java.util.Date date15 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        17, date15);
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader30 = new opssat.simulator.util.SimulatorHeader(
        false, date15, date20);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    java.util.Date date36 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        17, date36);
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader51 = new opssat.simulator.util.SimulatorHeader(
        false, date36, date41);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap52 = opssat.simulator.util.SimulatorData
        .computeDiff(date20, date36);
    opssat.simulator.util.SimulatorHeader simulatorHeader53 = new opssat.simulator.util.SimulatorHeader(
        true, date9, date36);
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(0,
        date36);
    java.lang.String str55 = simulatorData54.getCurrentDay();
    int int56 = simulatorData54.getTimeFactor();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(timeUnitMap52);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
  }

  @Test
  public void test0793() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0793");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        52L, 48, (-4), 100.0f, 16L, 0, 0.0d, (-4.0d));
    double double9 = gPSSatInViewScience8.getAvgElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
  }

  @Test
  public void test0794() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0794");
    org.ccsds.moims.mo.mal.structures.Union union1 = new org.ccsds.moims.mo.mal.structures.Union(
        281474993487885L);
    org.ccsds.moims.mo.mal.structures.URI uRI3 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int4 = uRI3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI6 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = uRI6.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI9 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray10 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI3, uRI6, uRI9 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList11 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean12 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList11, uRIArray10);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime13 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int14 = uRIList11.indexOf(fineTime13);
    java.lang.Boolean[] booleanArray17 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList18 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean19 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList18, booleanArray17);
    int int21 = booleanList18.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor22 = booleanList18.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator23 = booleanList18.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList24 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int25 = octetList24.getTypeShortForm();
    java.lang.Object obj26 = octetList24.clone();
    octetList24.trimToSize();
    boolean boolean28 = booleanList18.contains(octetList24);
    boolean boolean29 = booleanList18.isEmpty();
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece33 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    long long34 = simulatorSchedulerPiece33.getTime();
    int int35 = simulatorSchedulerPiece33.getInternalID();
    java.lang.String str36 = simulatorSchedulerPiece33.getSchedulerOutput();
    int int37 = booleanList18.indexOf(simulatorSchedulerPiece33);
    java.lang.String str38 = simulatorSchedulerPiece33.getArgumentTemplateDescription();
    java.lang.String str39 = simulatorSchedulerPiece33.getFileString();
    boolean boolean40 = uRIList11.remove(str39);
    boolean boolean41 = uRIList11.isEmpty();
    boolean boolean42 = union1.equals(uRIList11);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 18 + "'", int4.equals(18));
    org.junit.Assert.assertNotNull(uOctet7);
    org.junit.Assert.assertNotNull(uRIArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(booleanArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    org.junit.Assert.assertNotNull(booleanItor22);
    org.junit.Assert.assertNotNull(booleanSpliterator23);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-7) + "'", int25.equals((-7)));
    org.junit.Assert.assertNotNull(obj26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", !boolean29);
    org.junit.Assert.assertTrue("'" + long34 + "' != '" + 13L + "'", long34 == 13L);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '" + "00000:00:00:00:013  0     hi!          executed false   | " + "'",
        str36.equals("00000:00:00:00:013  0     hi!          executed false   | "));
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "hi!" + "'", str38.equals("hi!"));
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str39.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
  }

  @Test
  public void test0795() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0795");
    java.lang.Boolean[] booleanArray1 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList2 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean3 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList2, booleanArray1);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator4 = booleanList2.spliterator();
    java.lang.Byte[] byteArray9 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList10 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList10, byteArray9);
    java.lang.Integer[] intArray14 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList15 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList15, intArray14);
    boolean boolean17 = byteList10.retainAll(intList15);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    java.lang.Byte[] byteArray32 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList33 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean34 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList33, byteArray32);
    java.lang.Integer[] intArray37 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList38 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList38, intArray37);
    boolean boolean40 = byteList33.retainAll(intList38);
    java.lang.Integer[] intArray43 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList44 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList44, intArray43);
    int int47 = intList44.lastIndexOf((byte) 10);
    boolean boolean48 = intList38.removeAll(intList44);
    boolean boolean49 = intList26.retainAll(intList44);
    java.lang.Float[] floatArray53 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList54 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean55 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList54, floatArray53);
    boolean boolean57 = floatList54.add((-1.0f));
    floatList54.trimToSize();
    java.lang.Integer[] intArray63 = new java.lang.Integer[] { 100, 1, (-1), 10 };
    java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
    int int67 = intList64.lastIndexOf((byte) 1);
    boolean boolean68 = floatList54.containsAll(intList64);
    boolean boolean69 = intList26.addAll(intList64);
    boolean boolean70 = intList15.retainAll(intList26);
    boolean boolean71 = booleanList2.equals(intList26);
    java.util.ListIterator<java.lang.Boolean> booleanItor72 = booleanList2.listIterator();
    opssat.simulator.util.SimulatorData simulatorData74 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date75 = simulatorData74.getCurrentTime();
    java.util.Date date76 = simulatorData74.getCurrentTime();
    int int77 = simulatorData74.getTimeFactor();
    int int78 = booleanList2.indexOf(int77);
    boolean boolean79 = booleanList2.isEmpty();
    org.ccsds.moims.mo.mal.structures.OctetList octetList80 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int81 = octetList80.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort82 = octetList80.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor83 = octetList80.iterator();
    boolean boolean84 = booleanList2.equals(octetList80);
    java.util.ListIterator<java.lang.Boolean> booleanItor85 = booleanList2.listIterator();
    org.junit.Assert.assertNotNull(booleanArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(booleanSpliterator4);
    org.junit.Assert.assertNotNull(byteArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertNotNull(intArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(byteArray32);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
    org.junit.Assert.assertNotNull(intArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(floatArray53);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57);
    org.junit.Assert.assertNotNull(intArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertNotNull(booleanItor72);
    org.junit.Assert.assertNotNull(date75);
    org.junit.Assert.assertNotNull(date76);
    org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
    org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-7) + "'", int81.equals((-7)));
    org.junit.Assert.assertNotNull(uShort82);
    org.junit.Assert.assertNotNull(byteItor83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
    org.junit.Assert.assertNotNull(booleanItor85);
  }

  @Test
  public void test0797() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0797");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.clear();
    boolean boolean9 = floatList4.isEmpty();
    java.util.ListIterator<java.lang.Float> floatItor10 = floatList4.listIterator();
    boolean boolean12 = floatList4.add(0.0f);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState16 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double17 = simulatorSpacecraftState16.getLatitude();
    double double18 = simulatorSpacecraftState16.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray25 = new float[] { 28, 8 };
    simulatorSpacecraftState22.setQ(floatArray25);
    int int27 = simulatorSpacecraftState22.getSatsInView();
    simulatorSpacecraftState22.setAltitude((-5));
    double[] doubleArray30 = simulatorSpacecraftState22.getSunVector();
    simulatorSpacecraftState16.setMagField(doubleArray30);
    double double32 = simulatorSpacecraftState16.getLongitude();
    int int33 = floatList4.indexOf(simulatorSpacecraftState16);
    simulatorSpacecraftState16.setSatsInView(44);
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertNotNull(floatItor10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 340.0d + "'", double17 == 340.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertNotNull(doubleArray30);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
  }

  @Test
  public void test0798() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0798");
    org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(
        11);
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getServiceNumber();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream3 = uRIList1.stream();
    org.ccsds.moims.mo.mal.structures.Duration duration5 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration5.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration5.getAreaNumber();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray14 = new float[] { 28, 8 };
    simulatorSpacecraftState11.setQ(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState19 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double20 = simulatorSpacecraftState19.getLatitude();
    java.lang.String str21 = simulatorSpacecraftState19.getMagField();
    float[] floatArray22 = simulatorSpacecraftState19.getR();
    simulatorSpacecraftState11.setQ(floatArray22);
    java.lang.String str24 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray22);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState28 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double29 = simulatorSpacecraftState28.getLatitude();
    double double30 = simulatorSpacecraftState28.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState34 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double35 = simulatorSpacecraftState34.getLatitude();
    java.lang.String str36 = simulatorSpacecraftState34.getMagField();
    float[] floatArray37 = simulatorSpacecraftState34.getR();
    simulatorSpacecraftState28.setQ(floatArray37);
    float[] floatArray39 = simulatorSpacecraftState28.getV();
    opssat.simulator.celestia.CelestiaData celestiaData40 = new opssat.simulator.celestia.CelestiaData(
        floatArray22, floatArray39);
    float[] floatArray41 = celestiaData40.getQ();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    int int47 = opssat.simulator.util.DateExtraction.getDayFromDate(date46);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date50 = simulatorData49.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap54 = opssat.simulator.util.SimulatorData
        .computeDiff(date50, date53);
    opssat.simulator.util.SimulatorHeader simulatorHeader55 = new opssat.simulator.util.SimulatorHeader(
        false, date46, date53);
    opssat.simulator.util.SimulatorData simulatorData56 = new opssat.simulator.util.SimulatorData(
        (short) 0, date46);
    celestiaData40.setDate(date46);
    boolean boolean58 = duration5.equals(date46);
    int int59 = uRIList1.lastIndexOf(duration5);
    java.lang.Integer int60 = uRIList1.getTypeShortForm();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream61 = uRIList1
        .parallelStream();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream62 = uRIList1.stream();
    java.lang.String str63 = uRIList1.toString();
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uRIStream3);
    org.junit.Assert.assertNotNull(uOctet6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 340.0d + "'", double20 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str21 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str21.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray22);
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "UnknownGUIData" + "'",
        str24.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + 340.0d + "'", double29 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 340.0d + "'", double35 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str36.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray37);
    org.junit.Assert.assertNotNull(floatArray39);
    org.junit.Assert.assertNotNull(floatArray41);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(timeUnitMap54);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
    org.junit.Assert.assertNotNull(uRIStream61);
    org.junit.Assert.assertNotNull(uRIStream62);
    org.junit.Assert.assertTrue("'" + str63 + "' != '" + "[]" + "'", str63.equals("[]"));
  }

  @Test
  public void test0799() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0799");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(23);
    int int19 = simulatorHeader12.getTimeFactor();
    java.lang.String str20 = simulatorHeader12.getOrekitTLE2();
    simulatorHeader12.setUseOrekitPropagator(false);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNull(str20);
  }

  @Test
  public void test0800() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0800");
    org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.UShort uShort1 = identifier0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.StringList stringList2 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList4 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor5 = shortList4.listIterator();
    boolean boolean6 = stringList2.equals(shortList4);
    java.lang.Integer int7 = stringList2.getTypeShortForm();
    int int8 = stringList2.size();
    org.ccsds.moims.mo.mal.structures.FloatList floatList10 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int11 = floatList10.getTypeShortForm();
    floatList10.trimToSize();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet13 = floatList10.getAreaVersion();
    boolean boolean14 = stringList2.remove(uOctet13);
    boolean boolean15 = identifier0.equals(stringList2);
    java.util.stream.Stream<java.lang.String> strStream16 = stringList2.parallelStream();
    stringList2.clear();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState21 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double22 = simulatorSpacecraftState21.getLatitude();
    int int23 = stringList2.indexOf(simulatorSpacecraftState21);
    org.junit.Assert.assertNotNull(uShort1);
    org.junit.Assert.assertNotNull(shortItor5);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-15) + "'", int7.equals((-15)));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertNotNull(uOctet13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(strStream16);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
  }

  @Test
  public void test0802() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0802");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI4 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI4.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI7 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray8 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI1, uRI4, uRI7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean10 = java.util.Collections
        .addAll((java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList9, uRIArray8);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime11 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int12 = uRIList9.indexOf(fineTime11);
    java.lang.Boolean[] booleanArray15 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList16 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList16, booleanArray15);
    int int19 = booleanList16.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor20 = booleanList16.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator21 = booleanList16.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList22 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int23 = octetList22.getTypeShortForm();
    java.lang.Object obj24 = octetList22.clone();
    octetList22.trimToSize();
    boolean boolean26 = booleanList16.contains(octetList22);
    boolean boolean27 = booleanList16.isEmpty();
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece31 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    long long32 = simulatorSchedulerPiece31.getTime();
    int int33 = simulatorSchedulerPiece31.getInternalID();
    java.lang.String str34 = simulatorSchedulerPiece31.getSchedulerOutput();
    int int35 = booleanList16.indexOf(simulatorSchedulerPiece31);
    java.lang.String str36 = simulatorSchedulerPiece31.getArgumentTemplateDescription();
    java.lang.String str37 = simulatorSchedulerPiece31.getFileString();
    boolean boolean38 = uRIList9.remove(str37);
    java.util.Iterator<org.ccsds.moims.mo.mal.structures.URI> uRIItor39 = uRIList9.iterator();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertNotNull(uRIArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    org.junit.Assert.assertNotNull(booleanArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertNotNull(booleanItor20);
    org.junit.Assert.assertNotNull(booleanSpliterator21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-7) + "'", int23.equals((-7)));
    org.junit.Assert.assertNotNull(obj24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + long32 + "' != '" + 13L + "'", long32 == 13L);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    org.junit.Assert.assertTrue(
        "'" + str34 + "' != '" + "00000:00:00:00:013  0     hi!          executed false   | " + "'",
        str34.equals("00000:00:00:00:013  0     hi!          executed false   | "));
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "hi!" + "'", str36.equals("hi!"));
    org.junit.Assert.assertTrue(
        "'" + str37 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str37.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    org.junit.Assert.assertNotNull(uRIItor39);
  }

  @Test
  public void test0803() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0803");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        13L, 0, "hi!");
    long long4 = simulatorSchedulerPiece3.getTime();
    int int5 = simulatorSchedulerPiece3.getInternalID();
    java.lang.String str6 = simulatorSchedulerPiece3.getFileString();
    java.lang.String str7 = simulatorSchedulerPiece3.getFileString();
    java.lang.String str8 = simulatorSchedulerPiece3.getFileString();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str6.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue(
        "'" + str7 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str7.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '" + "00000:00:00:00:013|0000000000000000013|0|hi!" + "'",
        str8.equals("00000:00:00:00:013|0000000000000000013|0|hi!"));
  }

  @Test
  public void test0804() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0804");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.clear();
    boolean boolean9 = floatList4.isEmpty();
    java.util.ListIterator<java.lang.Float> floatItor10 = floatList4.listIterator();
    boolean boolean12 = floatList4.add(0.0f);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState16 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double17 = simulatorSpacecraftState16.getLatitude();
    double double18 = simulatorSpacecraftState16.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray25 = new float[] { 28, 8 };
    simulatorSpacecraftState22.setQ(floatArray25);
    int int27 = simulatorSpacecraftState22.getSatsInView();
    simulatorSpacecraftState22.setAltitude((-5));
    double[] doubleArray30 = simulatorSpacecraftState22.getSunVector();
    simulatorSpacecraftState16.setMagField(doubleArray30);
    double double32 = simulatorSpacecraftState16.getLongitude();
    int int33 = floatList4.indexOf(simulatorSpacecraftState16);
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor35 = new opssat.simulator.util.ArgumentDescriptor(
        int33, "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008");
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertNotNull(floatItor10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 340.0d + "'", double17 == 340.0d);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    org.junit.Assert.assertNotNull(doubleArray30);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
  }

  @Test
  public void test0805() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0805");
    java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
    java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
    boolean boolean12 = byteList5.retainAll(intList10);
    java.lang.Integer[] intArray15 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
    int int19 = intList16.lastIndexOf((byte) 10);
    boolean boolean20 = intList10.removeAll(intList16);
    java.util.stream.Stream<java.lang.Integer> intStream21 = intList10.parallelStream();
    org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = octetList23.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort29 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort30 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort31 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort32 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean35 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34,
        uShortArray33);
    uShortList34.ensureCapacity(0);
    int int39 = uShortList34.indexOf((byte) 1);
    uShortList34.clear();
    java.lang.Long[] longArray43 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList44 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList44, longArray43);
    java.lang.Object obj46 = longList44.clone();
    boolean boolean47 = uShortList34.contains(longList44);
    org.ccsds.moims.mo.mal.structures.UShort uShort48 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean49 = uShortList34.add(uShort48);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray50 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort22, uShort25, uShort26, uShort27, uShort28, uShort29, uShort30, uShort31, uShort48 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList51 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean52 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList51,
        uShortArray50);
    uShortList51.ensureCapacity(100);
    int int55 = uShortList51.size();
    org.ccsds.moims.mo.mal.structures.OctetList octetList56 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList56.ensureCapacity(13);
    java.lang.Byte[] byteArray63 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList64 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList64, byteArray63);
    java.lang.Integer[] intArray68 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList69 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean70 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList69, intArray68);
    boolean boolean71 = byteList64.retainAll(intList69);
    boolean boolean72 = octetList56.containsAll(intList69);
    java.util.Iterator<java.lang.Integer> intItor73 = intList69.iterator();
    boolean boolean74 = uShortList51.containsAll(intList69);
    opssat.simulator.util.SimulatorData simulatorData76 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData76.setCounter((-1));
    simulatorData76.feedTimeElapsed(21);
    java.lang.String str81 = simulatorData76.getCurrentDay();
    java.lang.String str82 = simulatorData76.getCurrentYear();
    boolean boolean83 = intList69.equals(simulatorData76);
    boolean boolean84 = intList10.contains(boolean83);
    org.junit.Assert.assertNotNull(byteArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(intArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertNotNull(intArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(intStream21);
    org.junit.Assert.assertNotNull(uShort22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertNotNull(uShort28);
    org.junit.Assert.assertNotNull(uShort29);
    org.junit.Assert.assertNotNull(uShort30);
    org.junit.Assert.assertNotNull(uShort31);
    org.junit.Assert.assertNotNull(uShort32);
    org.junit.Assert.assertNotNull(uShortArray33);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    org.junit.Assert.assertNotNull(longArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertNotNull(obj46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
    org.junit.Assert.assertNotNull(uShort48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(uShortArray50);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + 9 + "'", int55 == 9);
    org.junit.Assert.assertNotNull(byteArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertNotNull(intArray68);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", !boolean72);
    org.junit.Assert.assertNotNull(intItor73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
  }

  @Test
  public void test0806() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0806");
    long long1 = opssat.simulator.util.SimulatorSchedulerPiece
        .getMillisFromDDDDDHHMMSSmmm("2019:05:23 15:10:16 UTC");
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + (-1L) + "'", long1 == (-1L));
  }

  @Test
  public void test0810() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0810");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState54 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray57 = new float[] { 28, 8 };
    simulatorSpacecraftState54.setQ(floatArray57);
    celestiaData32.setQ(floatArray57);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState63 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray66 = new float[] { 28, 8 };
    simulatorSpacecraftState63.setQ(floatArray66);
    float[] floatArray71 = new float[] { 281474993487887L, 281475010265070L, 281474993487881L };
    simulatorSpacecraftState63.setRv(floatArray71);
    double[][] doubleArray73 = null;
    simulatorSpacecraftState63.setRotation(doubleArray73);
    float[] floatArray75 = simulatorSpacecraftState63.getR();
    celestiaData32.setRv(floatArray75);
    celestiaData32.setLos("");
    java.lang.String str79 = celestiaData32.getLos();
    int int80 = celestiaData32.getDays();
    celestiaData32.setAnx("");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray57);
    org.junit.Assert.assertNotNull(floatArray66);
    org.junit.Assert.assertNotNull(floatArray71);
    org.junit.Assert.assertNotNull(floatArray75);
    org.junit.Assert.assertTrue("'" + str79 + "' != '" + "" + "'", str79.equals(""));
  }

  @Test
  public void test0811() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0811");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        '#', 281474993487874L, 281474993487880L, 10.0f, 31, 1.0d, (-9), 'a');
    double double9 = gPSSatInViewScience8.getMaxDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 2.81474993487874E14d + "'",
        double9 == 2.81474993487874E14d);
  }

  @Test
  public void test0812() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0812");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date5 = simulatorData4.getCurrentTime();
    int int6 = opssat.simulator.util.DateExtraction.getDayFromDate(date5);
    opssat.simulator.util.SimulatorData simulatorData8 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date9 = simulatorData8.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData11 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date12 = simulatorData11.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap13 = opssat.simulator.util.SimulatorData
        .computeDiff(date9, date12);
    opssat.simulator.util.SimulatorHeader simulatorHeader14 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date12);
    java.util.Date date15 = simulatorHeader14.getEndDate();
    int int16 = simulatorHeader14.getMinuteStartDate();
    simulatorHeader14.setUseOrekitPropagator(true);
    java.lang.String str19 = simulatorHeader14.toFileString();
    java.util.Date date21 = simulatorHeader14.parseStringIntoDate("yyyy:MM:dd HH:mm:ss z");
    endlessWavStreamOperatingBuffer1.setDataBuffer("yyyy:MM:dd HH:mm:ss z");
    boolean boolean24 = endlessWavStreamOperatingBuffer1.preparePath("");
    endlessWavStreamOperatingBuffer1.setOperatingIndex(47);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertNotNull(timeUnitMap13);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertNull(date21);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
  }

  @Test
  public void test0813() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0813");
    java.lang.Byte[] byteArray4 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList5 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList5, byteArray4);
    java.lang.Integer[] intArray9 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList10 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean11 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList10, intArray9);
    boolean boolean12 = byteList5.retainAll(intList10);
    java.lang.Integer[] intArray15 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
    int int19 = intList16.lastIndexOf((byte) 10);
    boolean boolean20 = intList10.removeAll(intList16);
    java.util.Spliterator<java.lang.Integer> intSpliterator21 = intList10.spliterator();
    intList10.trimToSize();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList23 = new org.ccsds.moims.mo.mal.structures.IntegerList();
    java.lang.Integer int24 = integerList23.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = integerList23.getAreaNumber();
    java.lang.Integer int26 = integerList23.getTypeShortForm();
    boolean boolean27 = intList10.removeAll(integerList23);
    java.lang.Integer int28 = integerList23.getTypeShortForm();
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind29 = opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_OperatingBuffer;
    int int30 = integerList23.lastIndexOf(devDatPBind29);
    int int31 = integerList23.size();
    java.util.stream.Stream<java.lang.Integer> intStream32 = integerList23.parallelStream();
    java.lang.Float[] floatArray37 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList38 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean39 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList38, floatArray37);
    boolean boolean41 = floatList38.add((-1.0f));
    floatList38.clear();
    java.util.stream.Stream<java.lang.Float> floatStream43 = floatList38.parallelStream();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList45 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        48);
    org.ccsds.moims.mo.mal.structures.UShort uShort46 = integerList45.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.Element element47 = integerList45.createElement();
    boolean boolean48 = floatList38.containsAll(integerList45);
    try {
      boolean boolean49 = integerList23.addAll(50, integerList45);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 50, Size: 0");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(intArray9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertNotNull(intArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(intSpliterator21);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-11) + "'", int24.equals((-11)));
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-11) + "'", int26.equals((-11)));
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-11) + "'", int28.equals((-11)));
    org.junit.Assert.assertTrue(
        "'" + devDatPBind29 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_OperatingBuffer
            + "'",
        devDatPBind29.equals(
            opssat.simulator.threading.SimulatorNode.DevDatPBind.OpticalReceiver_OperatingBuffer));
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    org.junit.Assert.assertNotNull(intStream32);
    org.junit.Assert.assertNotNull(floatArray37);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(floatStream43);
    org.junit.Assert.assertNotNull(uShort46);
    org.junit.Assert.assertNotNull(element47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
  }

  @Test
  public void test0814() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0814");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.toString();
    double[] doubleArray7 = simulatorSpacecraftState3.getSunVector();
    simulatorSpacecraftState3.setSatsInView((short) 10);
    java.lang.String str10 = simulatorSpacecraftState3.toString();
    float[] floatArray11 = null;
    simulatorSpacecraftState3.setRv(floatArray11);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str6.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertTrue(
        "'" + str10 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str10.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
  }

  @Test
  public void test0815() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0815");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    simulatorData1.incrementMethods();
    simulatorData1.setTimeFactor(16);
    boolean boolean11 = simulatorData1.isTimeRunning();
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
  }

  @Test
  public void test0816() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0816");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long4 = simulatorData3.getCurrentTimeMillis();
    java.lang.String str5 = simulatorData3.getCurrentDay();
    java.lang.String str6 = simulatorData3.getUTCCurrentTime2();
    simulatorData3.toggleSimulatorRunning();
    java.lang.String str8 = simulatorData3.getUTCCurrentTime();
    java.util.Date date9 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    java.util.Date date15 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        17, date15);
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader30 = new opssat.simulator.util.SimulatorHeader(
        false, date15, date20);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    java.util.Date date36 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        17, date36);
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader51 = new opssat.simulator.util.SimulatorHeader(
        false, date36, date41);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap52 = opssat.simulator.util.SimulatorData
        .computeDiff(date20, date36);
    opssat.simulator.util.SimulatorHeader simulatorHeader53 = new opssat.simulator.util.SimulatorHeader(
        true, date9, date36);
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(0,
        date36);
    java.lang.String str55 = simulatorData54.getCurrentDay();
    int int56 = simulatorData54.getCounter();
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(timeUnitMap52);
    org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
  }

  @Test
  public void test0817() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0817");
    org.ccsds.moims.mo.mal.structures.Duration duration1 = new org.ccsds.moims.mo.mal.structures.Duration(
        7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState5 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray8 = new float[] { 28, 8 };
    simulatorSpacecraftState5.setQ(floatArray8);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double14 = simulatorSpacecraftState13.getLatitude();
    java.lang.String str15 = simulatorSpacecraftState13.getMagField();
    float[] floatArray16 = simulatorSpacecraftState13.getR();
    simulatorSpacecraftState5.setQ(floatArray16);
    boolean boolean18 = duration1.equals(simulatorSpacecraftState5);
    java.lang.Long long19 = duration1.getShortForm();
    org.junit.Assert.assertNotNull(floatArray8);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 340.0d + "'", double14 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str15.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    org.junit.Assert.assertTrue("'" + long19 + "' != '" + 281474993487875L + "'",
        long19.equals(281474993487875L));
  }

  @Test
  public void test0818() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0818");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.PNanomind pNanomind2 = new opssat.simulator.peripherals.PNanomind(
        simulatorNode0, "2019:05:23 15:09:44 UTC");
    try {
      pNanomind2.SetPowerState((byte) 1);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0819() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0819");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    simulatorSpacecraftState3.setLatitude((-4));
    java.lang.String str8 = simulatorSpacecraftState3.getMagField();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState12.setLongitude(4);
    double[] doubleArray16 = new double[] { (-1.0f) };
    simulatorSpacecraftState12.setMagField(doubleArray16);
    double double18 = simulatorSpacecraftState12.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray25 = new float[] { 28, 8 };
    simulatorSpacecraftState22.setQ(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState30 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double31 = simulatorSpacecraftState30.getLatitude();
    java.lang.String str32 = simulatorSpacecraftState30.getMagField();
    float[] floatArray33 = simulatorSpacecraftState30.getR();
    simulatorSpacecraftState22.setQ(floatArray33);
    java.lang.String str35 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray33);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState39 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double40 = simulatorSpacecraftState39.getLatitude();
    double double41 = simulatorSpacecraftState39.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState45 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double46 = simulatorSpacecraftState45.getLatitude();
    java.lang.String str47 = simulatorSpacecraftState45.getMagField();
    float[] floatArray48 = simulatorSpacecraftState45.getR();
    simulatorSpacecraftState39.setQ(floatArray48);
    float[] floatArray50 = simulatorSpacecraftState39.getV();
    opssat.simulator.celestia.CelestiaData celestiaData51 = new opssat.simulator.celestia.CelestiaData(
        floatArray33, floatArray50);
    float[] floatArray52 = celestiaData51.getQ();
    opssat.simulator.util.SimulatorData simulatorData56 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date57 = simulatorData56.getCurrentTime();
    int int58 = opssat.simulator.util.DateExtraction.getDayFromDate(date57);
    opssat.simulator.util.SimulatorData simulatorData60 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date61 = simulatorData60.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData63 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date64 = simulatorData63.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap65 = opssat.simulator.util.SimulatorData
        .computeDiff(date61, date64);
    opssat.simulator.util.SimulatorHeader simulatorHeader66 = new opssat.simulator.util.SimulatorHeader(
        false, date57, date64);
    opssat.simulator.util.SimulatorData simulatorData67 = new opssat.simulator.util.SimulatorData(
        (short) 0, date57);
    celestiaData51.setDate(date57);
    int int69 = celestiaData51.getSeconds();
    celestiaData51.setDnx("OPS-SAT SoftSim:");
    java.lang.String str72 = celestiaData51.getAos();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState76 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double77 = simulatorSpacecraftState76.getLatitude();
    double double78 = simulatorSpacecraftState76.getLongitude();
    float[] floatArray79 = simulatorSpacecraftState76.getQ();
    celestiaData51.setQ(floatArray79);
    simulatorSpacecraftState12.setQ(floatArray79);
    simulatorSpacecraftState3.setRv(floatArray79);
    float[] floatArray83 = simulatorSpacecraftState3.getMagnetometer();
    double double84 = simulatorSpacecraftState3.getLongitude();
    java.lang.String str85 = simulatorSpacecraftState3.getMagField();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str8.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(doubleArray16);
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 4.0d + "'", double18 == 4.0d);
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 340.0d + "'", double31 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str32 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str32.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertTrue("'" + str35 + "' != '" + "UnknownGUIData" + "'",
        str35.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 340.0d + "'", double40 == 340.0d);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 340.0d + "'", double41 == 340.0d);
    org.junit.Assert.assertTrue("'" + double46 + "' != '" + 340.0d + "'", double46 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str47 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str47.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray48);
    org.junit.Assert.assertNotNull(floatArray50);
    org.junit.Assert.assertNotNull(floatArray52);
    org.junit.Assert.assertNotNull(date57);
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertNotNull(date64);
    org.junit.Assert.assertNotNull(timeUnitMap65);
    org.junit.Assert.assertNull(str72);
    org.junit.Assert.assertTrue("'" + double77 + "' != '" + 340.0d + "'", double77 == 340.0d);
    org.junit.Assert.assertTrue("'" + double78 + "' != '" + (-1.0d) + "'", double78 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray79);
    org.junit.Assert.assertNotNull(floatArray83);
    org.junit.Assert.assertTrue("'" + double84 + "' != '" + (-1.0d) + "'", double84 == (-1.0d));
    org.junit.Assert.assertTrue(
        "'" + str85 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str85.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
  }

  @Test
  public void test0821() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0821");
    java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 1, (byte) -1, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList4 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList4, byteArray3);
    boolean boolean7 = byteList4.add((byte) 100);
    try {
      java.lang.Byte byte10 = byteList4.set(5, (byte) 1);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 5, Size: 4");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
  }

  @Test
  public void test0823() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0823");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        (byte) 100, (short) 255, (-1.0d));
    java.lang.String str4 = simulatorSpacecraftState3.getModeOperation();
    double[] doubleArray5 = simulatorSpacecraftState3.getSunVector();
    org.junit.Assert.assertNull(str4);
    org.junit.Assert.assertNotNull(doubleArray5);
  }

  @Test
  public void test0824() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0824");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState9 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double10 = simulatorSpacecraftState9.getLatitude();
    java.lang.String str11 = simulatorSpacecraftState9.getMagField();
    float[] floatArray12 = simulatorSpacecraftState9.getR();
    simulatorSpacecraftState3.setQ(floatArray12);
    float[] floatArray14 = simulatorSpacecraftState3.getV();
    simulatorSpacecraftState3.setModeOperation("[]");
    float[] floatArray17 = simulatorSpacecraftState3.getR();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + 340.0d + "'", double5 == 340.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 340.0d + "'", double10 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str11.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertNotNull(floatArray17);
  }

  @Test
  public void test0825() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0825");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience37 = new opssat.simulator.orekit.GPSSatInViewScience(
        4.0d, (short) 100, 281475010265075L, (-4), 0.0d, (-7), 281474993487888L, (short) 255);
    double double38 = gPSSatInViewScience37.getMaxDistance();
    boolean boolean39 = uLong0.equals(gPSSatInViewScience37);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = uLong0.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element41 = uLong0.createElement();
    org.ccsds.moims.mo.mal.structures.UShort uShort42 = uLong0.getServiceNumber();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertNotNull(uOctet40);
    org.junit.Assert.assertNotNull(element41);
    org.junit.Assert.assertNotNull(uShort42);
  }

  @Test
  public void test0826() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0826");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        (-30), 64, 7, 281475010265070L, (-1.0f), 281474993487879L, (byte) 1, (short) 100);
    double double9 = gPSSatInViewScience8.getAvgDistance();
    double double10 = gPSSatInViewScience8.getStdDevElevation();
    double double11 = gPSSatInViewScience8.getMinDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-30.0d) + "'", double11 == (-30.0d));
  }

  @Test
  public void test0827() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0827");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    java.lang.String str4 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "byte[] {}" + "'",
        str4.equals("byte[] {}"));
  }

  @Test
  public void test0828() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0828");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort10 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12,
        uShortArray11);
    uShortList12.ensureCapacity(0);
    int int17 = uShortList12.indexOf((byte) 1);
    uShortList12.clear();
    java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList22 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList22, longArray21);
    java.lang.Object obj24 = longList22.clone();
    boolean boolean25 = uShortList12.contains(longList22);
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean27 = uShortList12.add(uShort26);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0, uShort3, uShort4, uShort5, uShort6, uShort7, uShort8, uShort9, uShort26 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(100);
    boolean boolean34 = uShortList29.equals(9);
    org.ccsds.moims.mo.mal.structures.OctetList octetList35 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int36 = octetList35.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = octetList35.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor38 = octetList35.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor40 = new opssat.simulator.util.ArgumentDescriptor(
        octetList35, "hi!");
    java.lang.Object obj41 = argumentDescriptor40.getType();
    int int42 = uShortList29.indexOf(obj41);
    java.lang.String str43 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(uShortList29);
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uShort10);
    org.junit.Assert.assertNotNull(uShortArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(longArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertNotNull(obj24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-7) + "'", int36.equals((-7)));
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(byteItor38);
    org.junit.Assert.assertNotNull(obj41);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    org.junit.Assert.assertTrue("'" + str43 + "' != '" + "UnknownGUIData" + "'",
        str43.equals("UnknownGUIData"));
  }

  @Test
  public void test0830() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0830");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setAutoStartSystem(true);
    simulatorHeader12.setOrekitPropagator("00000:00:00:00:010");
    java.lang.String str20 = simulatorHeader12.getKeplerElements();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str20);
  }

  @Test
  public void test0831() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0831");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long2 = simulatorData1.getCurrentTimeMillis();
    java.lang.String str3 = simulatorData1.getCurrentDay();
    java.lang.String str4 = simulatorData1.getUTCCurrentTime2();
    java.lang.String str5 = simulatorData1.getCurrentDay();
    simulatorData1.incrementMethods();
    simulatorData1.toggleSimulatorRunning();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
  }

  @Test
  public void test0832() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0832");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    simulatorHeader20.setUpdateInternet(true);
    java.util.Date date23 = null;
    simulatorHeader20.setEndDate(date23);
    java.util.Date date25 = simulatorHeader20.getStartDate();
    int int26 = opssat.simulator.util.DateExtraction.getHourFromDate(date25);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date25);
  }

  @Test
  public void test0833() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0833");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = octetList0.getAreaVersion();
    java.lang.Object obj9 = octetList0.clone();
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = octetList0.getServiceNumber();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uOctet8);
    org.junit.Assert.assertNotNull(obj9);
    org.junit.Assert.assertNotNull(uShort10);
  }

  @Test
  public void test0834() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0834");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxDistance();
    double double11 = gPSSatInViewScience8.getStdDevElevation();
    double double12 = gPSSatInViewScience8.getMaxDistance();
    double double13 = gPSSatInViewScience8.getStdDevElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 11111.0d + "'", double11 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 11111.0d + "'", double13 == 11111.0d);
  }

  @Test
  public void test0835() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0835");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    java.lang.Object obj2 = endlessWavStreamOperatingBuffer1.getDataBuffer();
    boolean boolean4 = endlessWavStreamOperatingBuffer1.preparePath("03600.0000000");
    int int5 = endlessWavStreamOperatingBuffer1.getOperatingIndex();
    java.lang.String str6 = endlessWavStreamOperatingBuffer1.getDataBufferAsString();
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "double[] {}" + "'",
        str6.equals("double[] {}"));
  }

  @Test
  public void test0836() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0836");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray11 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort10 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList12 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean13 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList12,
        uShortArray11);
    uShortList12.ensureCapacity(0);
    int int17 = uShortList12.indexOf((byte) 1);
    uShortList12.clear();
    java.lang.Long[] longArray21 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList22 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList22, longArray21);
    java.lang.Object obj24 = longList22.clone();
    boolean boolean25 = uShortList12.contains(longList22);
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean27 = uShortList12.add(uShort26);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0, uShort3, uShort4, uShort5, uShort6, uShort7, uShort8, uShort9, uShort26 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(100);
    int int33 = uShortList29.size();
    org.ccsds.moims.mo.mal.structures.OctetList octetList34 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList34.ensureCapacity(13);
    java.lang.Byte[] byteArray41 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList42 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean43 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList42, byteArray41);
    java.lang.Integer[] intArray46 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
    boolean boolean49 = byteList42.retainAll(intList47);
    boolean boolean50 = octetList34.containsAll(intList47);
    java.util.Iterator<java.lang.Integer> intItor51 = intList47.iterator();
    boolean boolean52 = uShortList29.containsAll(intList47);
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData54.setCounter((-1));
    simulatorData54.feedTimeElapsed(21);
    java.lang.String str59 = simulatorData54.getCurrentDay();
    java.lang.String str60 = simulatorData54.getCurrentYear();
    boolean boolean61 = intList47.equals(simulatorData54);
    java.util.Date date62 = simulatorData54.getCurrentTime();
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uShort10);
    org.junit.Assert.assertNotNull(uShortArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    org.junit.Assert.assertNotNull(longArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertNotNull(obj24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 9 + "'", int33 == 9);
    org.junit.Assert.assertNotNull(byteArray41);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
    org.junit.Assert.assertNotNull(intArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", !boolean50);
    org.junit.Assert.assertNotNull(intItor51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", !boolean52);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
    org.junit.Assert.assertNotNull(date62);
  }

  @Test
  public void test0837() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0837");
    java.lang.Long[] longArray7 = new java.lang.Long[] { 281475010265070L, 100L, 0L,
        281475010265070L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean9 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
    boolean boolean10 = longList8.isEmpty();
    java.lang.Object obj11 = longList8.clone();
    opssat.simulator.util.SimulatorData simulatorData14 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date15 = simulatorData14.getCurrentTime();
    int int16 = opssat.simulator.util.DateExtraction.getDayFromDate(date15);
    opssat.simulator.util.SimulatorData simulatorData18 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date19 = simulatorData18.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData21 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date22 = simulatorData21.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap23 = opssat.simulator.util.SimulatorData
        .computeDiff(date19, date22);
    opssat.simulator.util.SimulatorHeader simulatorHeader24 = new opssat.simulator.util.SimulatorHeader(
        false, date15, date22);
    boolean boolean25 = longList8.remove(date22);
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        2019, date22);
    int int27 = simulatorData26.getCounter();
    org.junit.Assert.assertNotNull(longArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(obj11);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertNotNull(timeUnitMap23);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", !boolean25);
  }

  @Test
  public void test0838() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0838");
    java.lang.Double[] doubleArray4 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
    uShortList9.ensureCapacity(0);
    int int14 = uShortList9.indexOf((byte) 1);
    uShortList9.clear();
    java.lang.Long[] longArray18 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean20 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
    java.lang.Object obj21 = longList19.clone();
    boolean boolean22 = uShortList9.contains(longList19);
    boolean boolean23 = doubleList5.equals(boolean22);
    java.lang.Integer[] intArray26 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList27 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean28 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
    int int30 = intList27.lastIndexOf((byte) 10);
    boolean boolean31 = doubleList5.removeAll(intList27);
    org.ccsds.moims.mo.mal.structures.OctetList octetList32 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList32.ensureCapacity(13);
    java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    boolean boolean47 = byteList40.retainAll(intList45);
    boolean boolean48 = octetList32.containsAll(intList45);
    boolean boolean49 = doubleList5.removeAll(intList45);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState53 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double54 = simulatorSpacecraftState53.getLatitude();
    java.lang.String str55 = simulatorSpacecraftState53.getMagField();
    java.lang.String str56 = simulatorSpacecraftState53.toString();
    double[] doubleArray57 = simulatorSpacecraftState53.getSunVector();
    simulatorSpacecraftState53.setSatsInView((short) 10);
    double double60 = simulatorSpacecraftState53.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState64 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double65 = simulatorSpacecraftState64.getLatitude();
    double double66 = simulatorSpacecraftState64.getLongitude();
    float[] floatArray67 = simulatorSpacecraftState64.getQ();
    simulatorSpacecraftState53.setRv(floatArray67);
    int int69 = intList45.lastIndexOf(simulatorSpacecraftState53);
    org.ccsds.moims.mo.mal.structures.UInteger uInteger71 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element72 = uInteger71.createElement();
    long long73 = uInteger71.getValue();
    long long74 = uInteger71.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet75 = uInteger71.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = uInteger71.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element77 = uOctet76.createElement();
    int int78 = intList45.indexOf(uOctet76);
    java.util.Collection<java.lang.Integer> intCollection80 = null;
    try {
      boolean boolean81 = intList45.addAll(' ', intCollection80);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 32, Size: 2");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(doubleArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShortArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(longArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(obj21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(byteArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + 340.0d + "'", double54 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str55 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str55.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str56 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str56.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray57);
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 340.0d + "'", double60 == 340.0d);
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + 340.0d + "'", double65 == 340.0d);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray67);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    org.junit.Assert.assertNotNull(element72);
    org.junit.Assert.assertTrue("'" + long73 + "' != '" + 13L + "'", long73 == 13L);
    org.junit.Assert.assertTrue("'" + long74 + "' != '" + 13L + "'", long74 == 13L);
    org.junit.Assert.assertNotNull(uOctet75);
    org.junit.Assert.assertNotNull(uOctet76);
    org.junit.Assert.assertNotNull(element77);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
  }

  @Test
  public void test0839() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0839");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    opssat.simulator.util.SimulatorData simulatorData24 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date25 = simulatorData24.getCurrentTime();
    java.util.Date date26 = simulatorData24.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        17, date26);
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    int int32 = opssat.simulator.util.DateExtraction.getDayFromDate(date31);
    opssat.simulator.util.SimulatorData simulatorData34 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date35 = simulatorData34.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap39 = opssat.simulator.util.SimulatorData
        .computeDiff(date35, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader40 = new opssat.simulator.util.SimulatorHeader(
        false, date31, date38);
    opssat.simulator.util.SimulatorHeader simulatorHeader41 = new opssat.simulator.util.SimulatorHeader(
        false, date26, date31);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap42 = opssat.simulator.util.SimulatorData
        .computeDiff(date10, date26);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    int int50 = opssat.simulator.util.DateExtraction.getHourFromDate(date45);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap51 = opssat.simulator.util.SimulatorData
        .computeDiff(date10, date45);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertNotNull(date25);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(timeUnitMap39);
    org.junit.Assert.assertNotNull(timeUnitMap42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(timeUnitMap51);
  }

  @Test
  public void test0840() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0840");
    org.ccsds.moims.mo.mal.structures.LongList longList1 = new org.ccsds.moims.mo.mal.structures.LongList(
        (short) 100);
    org.ccsds.moims.mo.mal.structures.OctetList octetList2 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int3 = octetList2.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = octetList2.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor5 = octetList2.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor7 = new opssat.simulator.util.ArgumentDescriptor(
        octetList2, "hi!");
    java.lang.String str8 = argumentDescriptor7.getName();
    int int9 = longList1.indexOf(str8);
    try {
      java.lang.Long long11 = longList1.remove((short) 0);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: Index: 0, Size: 0");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-7) + "'", int3.equals((-7)));
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(byteItor5);
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "hi!" + "'", str8.equals("hi!"));
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
  }

  @Test
  public void test0841() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0841");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    int int17 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setAutoStartTime(false);
    java.lang.String str20 = simulatorHeader12.getOrekitTLE1();
    java.lang.String str21 = simulatorHeader12.getKeplerElements();
    boolean boolean22 = simulatorHeader12.checkStartBeforeEnd();
    boolean boolean23 = simulatorHeader12.isUseCelestia();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertNull(str21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
  }

  @Test
  public void test0843() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0843");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    int int8 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setAltitude((-5));
    float[] floatArray11 = simulatorSpacecraftState3.getV();
    simulatorSpacecraftState3.setLongitude(281475010265083L);
    java.lang.String str14 = simulatorSpacecraftState3.toString();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(floatArray11);
    org.junit.Assert.assertTrue("'" + str14 + "' != '"
        + "SimulatorSpacecraftState{latitude=340.0, longitude=2.81475010265083E14, altitude=-5.0}"
        + "'",
        str14.equals(
            "SimulatorSpacecraftState{latitude=340.0, longitude=2.81475010265083E14, altitude=-5.0}"));
  }

  @Test
  public void test0844() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0844");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience37 = new opssat.simulator.orekit.GPSSatInViewScience(
        4.0d, (short) 100, 281475010265075L, (-4), 0.0d, (-7), 281474993487888L, (short) 255);
    double double38 = gPSSatInViewScience37.getMaxDistance();
    boolean boolean39 = uLong0.equals(gPSSatInViewScience37);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = uLong0.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet41 = uLong0.getAreaVersion();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertNotNull(uOctet40);
    org.junit.Assert.assertNotNull(uOctet41);
  }

  @Test
  public void test0845() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0845");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double37 = simulatorSpacecraftState36.getLatitude();
    double double38 = simulatorSpacecraftState36.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState42 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double43 = simulatorSpacecraftState42.getLatitude();
    java.lang.String str44 = simulatorSpacecraftState42.getMagField();
    float[] floatArray45 = simulatorSpacecraftState42.getR();
    simulatorSpacecraftState36.setQ(floatArray45);
    celestiaData32.setQ(floatArray45);
    opssat.simulator.util.SimulatorData simulatorData50 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date51 = simulatorData50.getCurrentTime();
    int int52 = opssat.simulator.util.DateExtraction.getDayFromDate(date51);
    opssat.simulator.util.SimulatorData simulatorData54 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date55 = simulatorData54.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData57 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date58 = simulatorData57.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap59 = opssat.simulator.util.SimulatorData
        .computeDiff(date55, date58);
    opssat.simulator.util.SimulatorHeader simulatorHeader60 = new opssat.simulator.util.SimulatorHeader(
        false, date51, date58);
    java.util.Date date61 = simulatorHeader60.getEndDate();
    simulatorHeader60.setOrekitTLE1("");
    java.util.Date date65 = simulatorHeader60.parseStringIntoDate("2019/05/23-15:09:35");
    java.lang.String str66 = simulatorHeader60.toFileString();
    java.util.Date date67 = simulatorHeader60.getEndDate();
    celestiaData32.setDate(date67);
    int int69 = opssat.simulator.util.DateExtraction.getMonthFromDate(date67);
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertTrue("'" + double37 + "' != '" + 340.0d + "'", double37 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 340.0d + "'", double43 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str44 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str44.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray45);
    org.junit.Assert.assertNotNull(date51);
    org.junit.Assert.assertNotNull(date55);
    org.junit.Assert.assertNotNull(date58);
    org.junit.Assert.assertNotNull(timeUnitMap59);
    org.junit.Assert.assertNotNull(date61);
    org.junit.Assert.assertNull(date65);
    org.junit.Assert.assertNotNull(date67);
  }

  @Test
  public void test0848() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0848");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        5909, 56, "00000:00:00:00:013  0     hi!          executed false   | ");
    java.lang.String str4 = simulatorSchedulerPiece3.getSchedulerOutput();
    long long5 = simulatorSchedulerPiece3.getTime();
    java.lang.String str6 = simulatorSchedulerPiece3.getFileString();
    org.junit.Assert.assertTrue("'" + str4 + "' != '"
        + "00000:00:00:05:909  56    00000:00:00:00:013  0     hi!          executed false   |  executed false   | "
        + "'",
        str4.equals(
            "00000:00:00:05:909  56    00000:00:00:00:013  0     hi!          executed false   |  executed false   | "));
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 5909L + "'", long5 == 5909L);
    org.junit.Assert.assertTrue("'" + str6 + "' != '"
        + "00000:00:00:05:909|0000000000000005909|56|00000:00:00:00:013  0     hi!          executed false   | "
        + "'",
        str6.equals(
            "00000:00:00:05:909|0000000000000005909|56|00000:00:00:00:013  0     hi!          executed false   | "));
  }

  @Test
  public void test0849() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0849");
    org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList1.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor6 = new opssat.simulator.util.ArgumentDescriptor(
        octetList1, "hi!");
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    java.lang.String str10 = argumentDescriptor6.toString();
    boolean boolean11 = identifier0.equals(str10);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray18 = new float[] { 28, 8 };
    simulatorSpacecraftState15.setQ(floatArray18);
    float[] floatArray20 = simulatorSpacecraftState15.getQ();
    double double21 = simulatorSpacecraftState15.getLongitude();
    boolean boolean22 = identifier0.equals(simulatorSpacecraftState15);
    float[] floatArray23 = simulatorSpacecraftState15.getQ();
    double double24 = simulatorSpacecraftState15.getLongitude();
    simulatorSpacecraftState15.setModeOperation("-400.0000");
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertNotNull(floatArray18);
    org.junit.Assert.assertNotNull(floatArray20);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertNotNull(floatArray23);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
  }

  @Test
  public void test0850() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0850");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("2019:05:23 15:09:58 UTC");
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
  }

  @Test
  public void test0851() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0851");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.getSunVectorAsString();
    simulatorSpacecraftState3.setSatsInView(13);
    double double9 = simulatorSpacecraftState3.getLongitude();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str6.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
  }

  @Test
  public void test0852() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0852");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    simulatorHeader12.setOrekitTLE1("");
    java.util.Date date17 = simulatorHeader12.parseStringIntoDate("2019/05/23-15:09:35");
    boolean boolean18 = simulatorHeader12.isUseOrekitPropagator();
    java.lang.String str19 = simulatorHeader12.getStartDateString();
    int int20 = simulatorHeader12.getYearStartDate();
    simulatorHeader12.setUseOrekitPropagator(false);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(date17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
  }

  @Test
  public void test0853() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0853");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    shortList3.clear();
    boolean boolean6 = shortList3.isEmpty();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = org.ccsds.moims.mo.mal.structures.FloatList.AREA_VERSION;
    int int8 = shortList3.indexOf(uOctet7);
    java.lang.String str9 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(int8);
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uOctet7);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "UnknownGUIData" + "'",
        str9.equals("UnknownGUIData"));
  }

  @Test
  public void test0854() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0854");
    org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
    org.ccsds.moims.mo.mal.structures.UShort uShort1 = uShortList0.getServiceNumber();
    boolean boolean2 = uShortList0.isEmpty();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = uShortList0.getAreaNumber();
    java.lang.Byte[] byteArray8 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList9 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean10 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList9, byteArray8);
    java.lang.Integer[] intArray13 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList14 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean15 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList14, intArray13);
    boolean boolean16 = byteList9.retainAll(intList14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    int int23 = intList20.lastIndexOf((byte) 10);
    boolean boolean24 = intList14.retainAll(intList20);
    java.lang.Double[] doubleArray29 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList30 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList30, doubleArray29);
    org.ccsds.moims.mo.mal.structures.UShort uShort32 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray33 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort32 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList34 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean35 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList34,
        uShortArray33);
    uShortList34.ensureCapacity(0);
    int int39 = uShortList34.indexOf((byte) 1);
    uShortList34.clear();
    java.lang.Long[] longArray43 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList44 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean45 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList44, longArray43);
    java.lang.Object obj46 = longList44.clone();
    boolean boolean47 = uShortList34.contains(longList44);
    boolean boolean48 = doubleList30.equals(boolean47);
    java.lang.Integer[] intArray51 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList52 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean53 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
    int int55 = intList52.lastIndexOf((byte) 10);
    boolean boolean56 = doubleList30.removeAll(intList52);
    boolean boolean57 = intList20.retainAll(intList52);
    opssat.simulator.util.SimulatorData simulatorData61 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date62 = simulatorData61.getCurrentTime();
    java.util.Date date63 = simulatorData61.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData64 = new opssat.simulator.util.SimulatorData(
        17, date63);
    opssat.simulator.util.SimulatorData simulatorData67 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date68 = simulatorData67.getCurrentTime();
    int int69 = opssat.simulator.util.DateExtraction.getDayFromDate(date68);
    opssat.simulator.util.SimulatorData simulatorData71 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date72 = simulatorData71.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData74 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date75 = simulatorData74.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap76 = opssat.simulator.util.SimulatorData
        .computeDiff(date72, date75);
    opssat.simulator.util.SimulatorHeader simulatorHeader77 = new opssat.simulator.util.SimulatorHeader(
        false, date68, date75);
    opssat.simulator.util.SimulatorHeader simulatorHeader78 = new opssat.simulator.util.SimulatorHeader(
        false, date63, date68);
    simulatorHeader78.setUpdateInternet(true);
    java.util.Date date81 = null;
    simulatorHeader78.setEndDate(date81);
    int int83 = intList20.lastIndexOf(date81);
    boolean boolean84 = uShortList0.removeAll(intList20);
    try {
      org.ccsds.moims.mo.mal.structures.UShort uShort86 = uShortList0.get((-30));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(uShort1);
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2);
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(byteArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertNotNull(intArray13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24);
    org.junit.Assert.assertNotNull(doubleArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertNotNull(uShort32);
    org.junit.Assert.assertNotNull(uShortArray33);
    org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    org.junit.Assert.assertNotNull(longArray43);
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45);
    org.junit.Assert.assertNotNull(obj46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", !boolean47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertNotNull(intArray51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
    org.junit.Assert.assertNotNull(date62);
    org.junit.Assert.assertNotNull(date63);
    org.junit.Assert.assertNotNull(date68);
    org.junit.Assert.assertNotNull(date72);
    org.junit.Assert.assertNotNull(date75);
    org.junit.Assert.assertNotNull(timeUnitMap76);
    org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
    org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", !boolean84);
  }

  @Test
  public void test0855() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0855");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    simulatorHeader12.setUseCelestia(true);
    int int38 = simulatorHeader12.getYearStartDate();
    java.lang.String str39 = simulatorHeader12.getEndDateString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
  }

  @Test
  public void test0856() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0856");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        100L, 281474993487886L, (byte) 0);
    java.lang.String str4 = simulatorSpacecraftState3.getRotationAsString();
    org.junit.Assert.assertTrue("'" + str4 + "' != '"
        + "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"
        + "'",
        str4.equals(
            "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"));
  }

  @Test
  public void test0857() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0857");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    int int15 = uShortList2.lastIndexOf(obj14);
    java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean22 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    boolean boolean28 = byteList21.retainAll(intList26);
    java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList32 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean33 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
    int int35 = intList32.lastIndexOf((byte) 10);
    boolean boolean36 = intList26.retainAll(intList32);
    java.lang.Object obj37 = intList26.clone();
    boolean boolean38 = uShortList2.removeAll(intList26);
    java.lang.Object[] objArray39 = uShortList2.toArray();
    java.lang.Object obj40 = null;
    boolean boolean41 = uShortList2.equals(obj40);
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream42 = uShortList2
        .parallelStream();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    int int47 = opssat.simulator.util.DateExtraction.getDayFromDate(date46);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date50 = simulatorData49.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap54 = opssat.simulator.util.SimulatorData
        .computeDiff(date50, date53);
    opssat.simulator.util.SimulatorHeader simulatorHeader55 = new opssat.simulator.util.SimulatorHeader(
        false, date46, date53);
    java.util.Date date56 = simulatorHeader55.getEndDate();
    boolean boolean57 = simulatorHeader55.isAutoStartSystem();
    int int58 = simulatorHeader55.getDayStartDate();
    boolean boolean59 = simulatorHeader55.isUseCelestia();
    int int60 = simulatorHeader55.getDayStartDate();
    boolean boolean61 = uShortList2.contains(simulatorHeader55);
    boolean boolean63 = simulatorHeader55.validateTimeFactor(46);
    java.lang.String str64 = simulatorHeader55.getEndDateString();
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    org.junit.Assert.assertNotNull(byteArray20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertNotNull(intArray31);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertNotNull(obj37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    org.junit.Assert.assertNotNull(objArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    org.junit.Assert.assertNotNull(uShortStream42);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(timeUnitMap54);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", !boolean59);
    org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", !boolean61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
  }

  @Test
  public void test0858() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0858");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    java.util.ListIterator<java.lang.Float> floatItor14 = floatList9.listIterator();
    java.lang.Integer int15 = floatList9.getTypeShortForm();
    java.util.stream.Stream<java.lang.Float> floatStream16 = floatList9.stream();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(floatItor14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-4) + "'", int15.equals((-4)));
    org.junit.Assert.assertNotNull(floatStream16);
  }

  @Test
  public void test0859() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0859");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    opssat.simulator.util.SimulatorData simulatorData4 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date5 = simulatorData4.getCurrentTime();
    int int6 = opssat.simulator.util.DateExtraction.getDayFromDate(date5);
    opssat.simulator.util.SimulatorData simulatorData8 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date9 = simulatorData8.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData11 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date12 = simulatorData11.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap13 = opssat.simulator.util.SimulatorData
        .computeDiff(date9, date12);
    opssat.simulator.util.SimulatorHeader simulatorHeader14 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date12);
    java.util.Date date15 = simulatorHeader14.getEndDate();
    boolean boolean16 = simulatorHeader14.isAutoStartSystem();
    int int17 = simulatorHeader14.getDayStartDate();
    boolean boolean18 = simulatorHeader14.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData21 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date22 = simulatorData21.getCurrentTime();
    int int23 = opssat.simulator.util.DateExtraction.getDayFromDate(date22);
    opssat.simulator.util.SimulatorData simulatorData25 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date26 = simulatorData25.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData28 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date29 = simulatorData28.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap30 = opssat.simulator.util.SimulatorData
        .computeDiff(date26, date29);
    opssat.simulator.util.SimulatorHeader simulatorHeader31 = new opssat.simulator.util.SimulatorHeader(
        false, date22, date29);
    simulatorHeader14.setStartDate(date29);
    boolean boolean33 = simulatorHeader14.isAutoStartTime();
    simulatorHeader14.setUpdateInternet(false);
    java.lang.String str36 = simulatorHeader14.getOrekitPropagator();
    simulatorData1.initFromHeader(simulatorHeader14);
    int int38 = simulatorHeader14.getMinuteStartDate();
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date9);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertNotNull(timeUnitMap13);
    org.junit.Assert.assertNotNull(date15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", !boolean18);
    org.junit.Assert.assertNotNull(date22);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(date29);
    org.junit.Assert.assertNotNull(timeUnitMap30);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
    org.junit.Assert.assertNull(str36);
  }

  @Test
  public void test0860() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0860");
    opssat.simulator.util.SimulatorHeader simulatorHeader0 = new opssat.simulator.util.SimulatorHeader();
    simulatorHeader0.setUseOrekitPropagator(false);
  }

  @Test
  public void test0861() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0861");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    try {
      argumentDescriptor5.setFloatTypeByIndex(56, (-30));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: org.ccsds.moims.mo.mal.structures.OctetList cannot be cast to [F");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
  }

  @Test
  public void test0863() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0863");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str28 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setTimeFactor(8);
    boolean boolean31 = simulatorHeader20.isUpdateInternet();
    int int32 = simulatorHeader20.getMinuteStartDate();
    java.lang.String str33 = simulatorHeader20.getEndDateString();
    java.lang.String str34 = simulatorHeader20.getStartDateString();
    opssat.simulator.util.SimulatorData simulatorData38 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date39 = simulatorData38.getCurrentTime();
    java.util.Date date40 = simulatorData38.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        17, date40);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    int int46 = opssat.simulator.util.DateExtraction.getDayFromDate(date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date52 = simulatorData51.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap53 = opssat.simulator.util.SimulatorData
        .computeDiff(date49, date52);
    opssat.simulator.util.SimulatorHeader simulatorHeader54 = new opssat.simulator.util.SimulatorHeader(
        false, date45, date52);
    opssat.simulator.util.SimulatorHeader simulatorHeader55 = new opssat.simulator.util.SimulatorHeader(
        false, date40, date45);
    boolean boolean56 = simulatorHeader55.isAutoStartTime();
    simulatorHeader55.setUseCelestia(false);
    simulatorHeader55.setOrekitTLE1("[]");
    simulatorHeader55
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str63 = simulatorHeader55.getOrekitPropagator();
    int int64 = simulatorHeader55.getHourStartDate();
    opssat.simulator.util.SimulatorData simulatorData66 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long67 = simulatorData66.getCurrentTimeMillis();
    java.lang.String str68 = simulatorData66.getCurrentDay();
    java.lang.String str69 = simulatorData66.getUTCCurrentTime2();
    java.lang.String str70 = simulatorData66.getCurrentDay();
    java.util.Date date71 = simulatorData66.getCurrentTime();
    int int72 = opssat.simulator.util.DateExtraction.getMonthFromDate(date71);
    simulatorHeader55.setStartDate(date71);
    simulatorHeader20.setEndDate(date71);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str28.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(date39);
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date52);
    org.junit.Assert.assertNotNull(timeUnitMap53);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", !boolean56);
    org.junit.Assert.assertTrue(
        "'" + str63 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str63.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
    org.junit.Assert.assertNotNull(date71);
  }

  @Test
  public void test0864() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0864");
    org.ccsds.moims.mo.mal.structures.URIList uRIList1 = new org.ccsds.moims.mo.mal.structures.URIList(
        11);
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = uRIList1.getServiceNumber();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream3 = uRIList1.stream();
    org.ccsds.moims.mo.mal.structures.Duration duration5 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet6 = duration5.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = duration5.getAreaNumber();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray14 = new float[] { 28, 8 };
    simulatorSpacecraftState11.setQ(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState19 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double20 = simulatorSpacecraftState19.getLatitude();
    java.lang.String str21 = simulatorSpacecraftState19.getMagField();
    float[] floatArray22 = simulatorSpacecraftState19.getR();
    simulatorSpacecraftState11.setQ(floatArray22);
    java.lang.String str24 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray22);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState28 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double29 = simulatorSpacecraftState28.getLatitude();
    double double30 = simulatorSpacecraftState28.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState34 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double35 = simulatorSpacecraftState34.getLatitude();
    java.lang.String str36 = simulatorSpacecraftState34.getMagField();
    float[] floatArray37 = simulatorSpacecraftState34.getR();
    simulatorSpacecraftState28.setQ(floatArray37);
    float[] floatArray39 = simulatorSpacecraftState28.getV();
    opssat.simulator.celestia.CelestiaData celestiaData40 = new opssat.simulator.celestia.CelestiaData(
        floatArray22, floatArray39);
    float[] floatArray41 = celestiaData40.getQ();
    opssat.simulator.util.SimulatorData simulatorData45 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date46 = simulatorData45.getCurrentTime();
    int int47 = opssat.simulator.util.DateExtraction.getDayFromDate(date46);
    opssat.simulator.util.SimulatorData simulatorData49 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date50 = simulatorData49.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap54 = opssat.simulator.util.SimulatorData
        .computeDiff(date50, date53);
    opssat.simulator.util.SimulatorHeader simulatorHeader55 = new opssat.simulator.util.SimulatorHeader(
        false, date46, date53);
    opssat.simulator.util.SimulatorData simulatorData56 = new opssat.simulator.util.SimulatorData(
        (short) 0, date46);
    celestiaData40.setDate(date46);
    boolean boolean58 = duration5.equals(date46);
    int int59 = uRIList1.lastIndexOf(duration5);
    java.lang.Integer int60 = uRIList1.getTypeShortForm();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.URI> uRIStream61 = uRIList1
        .parallelStream();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet62 = uRIList1.getAreaVersion();
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uRIStream3);
    org.junit.Assert.assertNotNull(uOctet6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 340.0d + "'", double20 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str21 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str21.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray22);
    org.junit.Assert.assertTrue("'" + str24 + "' != '" + "UnknownGUIData" + "'",
        str24.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + 340.0d + "'", double29 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue("'" + double35 + "' != '" + 340.0d + "'", double35 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str36.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray37);
    org.junit.Assert.assertNotNull(floatArray39);
    org.junit.Assert.assertNotNull(floatArray41);
    org.junit.Assert.assertNotNull(date46);
    org.junit.Assert.assertNotNull(date50);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(timeUnitMap54);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", !boolean58);
    org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-18) + "'", int60.equals((-18)));
    org.junit.Assert.assertNotNull(uRIStream61);
    org.junit.Assert.assertNotNull(uOctet62);
  }

  @Test
  public void test0865() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0865");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    int int8 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setAltitude((-5));
    float[] floatArray11 = simulatorSpacecraftState3.getV();
    simulatorSpacecraftState3.setLongitude(281475010265083L);
    double double14 = simulatorSpacecraftState3.getLongitude();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertNotNull(floatArray11);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 2.81475010265083E14d + "'",
        double14 == 2.81475010265083E14d);
  }

  @Test
  public void test0867() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0867");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    java.lang.Object obj2 = endlessWavStreamOperatingBuffer1.getDataBuffer();
    boolean boolean4 = endlessWavStreamOperatingBuffer1.preparePath("03600.0000000");
    endlessWavStreamOperatingBuffer1.setOperatingIndex(5909);
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
  }

  @Test
  public void test0868() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0868");
    org.ccsds.moims.mo.mal.structures.FloatList floatList0 = new org.ccsds.moims.mo.mal.structures.FloatList();
    java.lang.Short[] shortArray3 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList4 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList4, shortArray3);
    shortList4.clear();
    boolean boolean7 = shortList4.isEmpty();
    java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean14 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
    java.lang.Integer[] intArray17 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList18 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean19 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList18, intArray17);
    boolean boolean20 = byteList13.retainAll(intList18);
    java.lang.Integer[] intArray28 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList29 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean30 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList29, intArray28);
    java.lang.Byte[] byteArray35 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList36 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean37 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList36, byteArray35);
    java.lang.Integer[] intArray40 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList41 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean42 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList41, intArray40);
    boolean boolean43 = byteList36.retainAll(intList41);
    java.lang.Integer[] intArray46 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList47 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList47, intArray46);
    int int50 = intList47.lastIndexOf((byte) 10);
    boolean boolean51 = intList41.removeAll(intList47);
    boolean boolean52 = intList29.retainAll(intList47);
    java.lang.Float[] floatArray56 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList57 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean58 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList57, floatArray56);
    boolean boolean60 = floatList57.add((-1.0f));
    floatList57.trimToSize();
    java.lang.Integer[] intArray66 = new java.lang.Integer[] { 100, 1, (-1), 10 };
    java.util.ArrayList<java.lang.Integer> intList67 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean68 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
    int int70 = intList67.lastIndexOf((byte) 1);
    boolean boolean71 = floatList57.containsAll(intList67);
    boolean boolean72 = intList29.addAll(intList67);
    boolean boolean73 = intList18.retainAll(intList29);
    boolean boolean74 = shortList4.containsAll(intList18);
    boolean boolean75 = floatList0.containsAll(intList18);
    org.ccsds.moims.mo.mal.structures.OctetList octetList76 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int77 = octetList76.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort78 = octetList76.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor79 = octetList76.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor81 = new opssat.simulator.util.ArgumentDescriptor(
        octetList76, "hi!");
    argumentDescriptor81.restoreArgument();
    argumentDescriptor81.restoreArgument();
    argumentDescriptor81.restoreArgument();
    java.lang.String str85 = argumentDescriptor81.toString();
    argumentDescriptor81.setName("OPS-SAT SoftSim:");
    boolean boolean88 = intList18.remove(argumentDescriptor81);
    org.ccsds.moims.mo.mal.structures.UInteger uInteger90 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element91 = uInteger90.createElement();
    long long92 = uInteger90.getValue();
    long long93 = uInteger90.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet94 = uInteger90.getAreaVersion();
    java.lang.String str95 = uInteger90.toString();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet96 = uInteger90.getAreaVersion();
    java.lang.Long long97 = uInteger90.getShortForm();
    int int98 = intList18.lastIndexOf(long97);
    org.junit.Assert.assertNotNull(shortArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertNotNull(byteArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    org.junit.Assert.assertNotNull(intArray17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(intArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertNotNull(byteArray35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertNotNull(intArray40);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
    org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43);
    org.junit.Assert.assertNotNull(intArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
    org.junit.Assert.assertNotNull(floatArray56);
    org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertNotNull(intArray66);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
    org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
    org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", !boolean74);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
    org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-7) + "'", int77.equals((-7)));
    org.junit.Assert.assertNotNull(uShort78);
    org.junit.Assert.assertNotNull(byteItor79);
    org.junit.Assert.assertTrue("'" + str85 + "' != '" + "" + "'", str85.equals(""));
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
    org.junit.Assert.assertNotNull(element91);
    org.junit.Assert.assertTrue("'" + long92 + "' != '" + 13L + "'", long92 == 13L);
    org.junit.Assert.assertTrue("'" + long93 + "' != '" + 13L + "'", long93 == 13L);
    org.junit.Assert.assertNotNull(uOctet94);
    org.junit.Assert.assertTrue("'" + str95 + "' != '" + "13" + "'", str95.equals("13"));
    org.junit.Assert.assertNotNull(uOctet96);
    org.junit.Assert.assertTrue("'" + long97 + "' != '" + 281474993487884L + "'",
        long97.equals(281474993487884L));
    org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
  }

  @Test
  public void test0870() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0870");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    int int6 = simulatorSpacecraftState3.getSatsInView();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState10 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double11 = simulatorSpacecraftState10.getLatitude();
    java.lang.String str12 = simulatorSpacecraftState10.getMagField();
    java.lang.String str13 = simulatorSpacecraftState10.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState17 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double18 = simulatorSpacecraftState17.getLatitude();
    java.lang.String str19 = simulatorSpacecraftState17.getMagField();
    java.lang.String str20 = simulatorSpacecraftState17.toString();
    double[] doubleArray21 = simulatorSpacecraftState17.getSunVector();
    simulatorSpacecraftState10.setMagnetometer(doubleArray21);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    java.lang.String str29 = simulatorSpacecraftState26.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState33 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double34 = simulatorSpacecraftState33.getLatitude();
    java.lang.String str35 = simulatorSpacecraftState33.getMagField();
    java.lang.String str36 = simulatorSpacecraftState33.toString();
    double[] doubleArray37 = simulatorSpacecraftState33.getSunVector();
    simulatorSpacecraftState26.setMagnetometer(doubleArray37);
    simulatorSpacecraftState10.setMagnetometer(doubleArray37);
    simulatorSpacecraftState3.setSunVector(doubleArray37);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState44 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray47 = new float[] { 28, 8 };
    simulatorSpacecraftState44.setQ(floatArray47);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState52 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double53 = simulatorSpacecraftState52.getLatitude();
    java.lang.String str54 = simulatorSpacecraftState52.getMagField();
    float[] floatArray55 = simulatorSpacecraftState52.getR();
    simulatorSpacecraftState44.setQ(floatArray55);
    java.lang.String str57 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray55);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState61 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double62 = simulatorSpacecraftState61.getLatitude();
    double double63 = simulatorSpacecraftState61.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState67 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double68 = simulatorSpacecraftState67.getLatitude();
    java.lang.String str69 = simulatorSpacecraftState67.getMagField();
    float[] floatArray70 = simulatorSpacecraftState67.getR();
    simulatorSpacecraftState61.setQ(floatArray70);
    float[] floatArray72 = simulatorSpacecraftState61.getV();
    opssat.simulator.celestia.CelestiaData celestiaData73 = new opssat.simulator.celestia.CelestiaData(
        floatArray55, floatArray72);
    simulatorSpacecraftState3.setQ(floatArray72);
    java.lang.String str75 = simulatorSpacecraftState3.getMagnetometerAsString();
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 340.0d + "'", double11 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str12 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str12.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str13.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double18 + "' != '" + 340.0d + "'", double18 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str19 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str19.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str20 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str20.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray21);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str29 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str29.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + 340.0d + "'", double34 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str35 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str35.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str36 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str36.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray37);
    org.junit.Assert.assertNotNull(floatArray47);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 340.0d + "'", double53 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str54 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str54.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray55);
    org.junit.Assert.assertTrue("'" + str57 + "' != '" + "UnknownGUIData" + "'",
        str57.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double62 + "' != '" + 340.0d + "'", double62 == 340.0d);
    org.junit.Assert.assertTrue("'" + double63 + "' != '" + 340.0d + "'", double63 == 340.0d);
    org.junit.Assert.assertTrue("'" + double68 + "' != '" + 340.0d + "'", double68 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str69 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str69.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray70);
    org.junit.Assert.assertNotNull(floatArray72);
    org.junit.Assert.assertTrue(
        "'" + str75 + "' != '" + "X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]" + "'",
        str75.equals("X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]"));
  }

  @Test
  public void test0871() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0871");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    boolean boolean3 = doubleList1.add(100.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = doubleList1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = doubleList1.getAreaVersion();
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData7 = new opssat.simulator.util.SimulatorDeviceData(
        "[]");
    java.lang.String str8 = simulatorDeviceData7.getName();
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList9 = simulatorDeviceData7
        .getDataList();
    int int10 = doubleList1.lastIndexOf(simulatorDeviceData7);
    doubleList1.clear();
    java.lang.Long[] longArray15 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList16 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList16, longArray15);
    boolean boolean19 = longList16.add(281474993487885L);
    java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean26 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
    java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList30 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
    boolean boolean32 = byteList25.retainAll(intList30);
    java.lang.Integer[] intArray35 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean37 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
    int int39 = intList36.lastIndexOf((byte) 10);
    boolean boolean40 = intList30.removeAll(intList36);
    java.util.Spliterator<java.lang.Integer> intSpliterator41 = intList30.spliterator();
    intList30.trimToSize();
    java.lang.Object obj43 = null;
    int int44 = intList30.lastIndexOf(obj43);
    boolean boolean45 = longList16.removeAll(intList30);
    boolean boolean46 = doubleList1.removeAll(intList30);
    java.util.ListIterator<java.lang.Integer> intItor47 = intList30.listIterator();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[]" + "'", str8.equals("[]"));
    org.junit.Assert.assertNotNull(argumentDescriptorList9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    org.junit.Assert.assertNotNull(longArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertNotNull(byteArray24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
    org.junit.Assert.assertNotNull(intArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
    org.junit.Assert.assertNotNull(intArray35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intSpliterator41);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
    org.junit.Assert.assertNotNull(intItor47);
  }

  @Test
  public void test0873() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0873");
    opssat.simulator.gui.GuiApp guiApp2 = null;
    opssat.simulator.tcp.SocketClient socketClient3 = new opssat.simulator.tcp.SocketClient(
        "{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:32 UTC 2019}", 0, guiApp2);
    socketClient3.setTargetConnection("030936.762", 4);
    try {
      socketClient3.run();
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
  }

  @Test
  public void test0874() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0874");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = doubleList1.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = doubleList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.Element element6 = doubleList1.createElement();
    boolean boolean8 = doubleList1.add(0.0d);
    java.lang.Integer int9 = doubleList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.OctetList octetList10 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int11 = octetList10.getTypeShortForm();
    java.lang.Object obj12 = octetList10.clone();
    octetList10.trimToSize();
    org.ccsds.moims.mo.mal.structures.FloatList floatList15 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int16 = floatList15.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList15.getServiceNumber();
    java.lang.Long long18 = floatList15.getShortForm();
    boolean boolean19 = octetList10.equals(floatList15);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray26 = new float[] { 28, 8 };
    simulatorSpacecraftState23.setQ(floatArray26);
    float[] floatArray28 = simulatorSpacecraftState23.getQ();
    double double29 = simulatorSpacecraftState23.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState33 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray36 = new float[] { 28, 8 };
    simulatorSpacecraftState33.setQ(floatArray36);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState41 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double42 = simulatorSpacecraftState41.getLatitude();
    java.lang.String str43 = simulatorSpacecraftState41.getMagField();
    float[] floatArray44 = simulatorSpacecraftState41.getR();
    simulatorSpacecraftState33.setQ(floatArray44);
    java.lang.String str46 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray44);
    simulatorSpacecraftState23.setRv(floatArray44);
    boolean boolean48 = floatList15.equals(simulatorSpacecraftState23);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState52 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double53 = simulatorSpacecraftState52.getLatitude();
    double double54 = simulatorSpacecraftState52.getLongitude();
    float[] floatArray55 = simulatorSpacecraftState52.getQ();
    simulatorSpacecraftState23.setRv(floatArray55);
    boolean boolean57 = doubleList1.remove(floatArray55);
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(element6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-5) + "'", int9.equals((-5)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-7) + "'", int11.equals((-7)));
    org.junit.Assert.assertNotNull(obj12);
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-4) + "'", int16.equals((-4)));
    org.junit.Assert.assertNotNull(uShort17);
    org.junit.Assert.assertTrue("'" + long18 + "' != '" + 281475010265084L + "'",
        long18.equals(281475010265084L));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertNotNull(floatArray26);
    org.junit.Assert.assertNotNull(floatArray28);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + 340.0d + "'", double42 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str43 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str43.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertTrue("'" + str46 + "' != '" + "UnknownGUIData" + "'",
        str46.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertTrue("'" + double53 + "' != '" + 340.0d + "'", double53 == 340.0d);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + (-1.0d) + "'", double54 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
  }

  @Test
  public void test0875() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0875");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    java.util.stream.Stream<java.lang.Byte> byteStream4 = octetList0.parallelStream();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList0.getAreaNumber();
    java.util.stream.Stream<java.lang.Byte> byteStream6 = octetList0.parallelStream();
    octetList0.trimToSize();
    org.ccsds.moims.mo.mal.structures.StringList stringList8 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList10 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor11 = shortList10.listIterator();
    boolean boolean12 = stringList8.equals(shortList10);
    java.lang.Integer int13 = stringList8.getTypeShortForm();
    int int14 = stringList8.size();
    org.ccsds.moims.mo.mal.structures.UShort uShort15 = stringList8.getServiceNumber();
    boolean boolean16 = octetList0.contains(uShort15);
    org.ccsds.moims.mo.mal.structures.UShort uShort17 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.OctetList octetList18 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int19 = octetList18.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort20 = octetList18.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort22 = org.ccsds.moims.mo.mal.structures.FloatList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort23 = org.ccsds.moims.mo.mal.structures.StringList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort24 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = org.ccsds.moims.mo.mal.structures.BooleanList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort26 = org.ccsds.moims.mo.mal.structures.OctetList.AREA_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort27 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(0);
    int int34 = uShortList29.indexOf((byte) 1);
    uShortList29.clear();
    java.lang.Long[] longArray38 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean40 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList39, longArray38);
    java.lang.Object obj41 = longList39.clone();
    boolean boolean42 = uShortList29.contains(longList39);
    org.ccsds.moims.mo.mal.structures.UShort uShort43 = org.ccsds.moims.mo.mal.structures.UShortList.SERVICE_SHORT_FORM;
    boolean boolean44 = uShortList29.add(uShort43);
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray45 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort17, uShort20, uShort21, uShort22, uShort23, uShort24, uShort25, uShort26, uShort43 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList46 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean47 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList46,
        uShortArray45);
    uShortList46.ensureCapacity(100);
    int int50 = uShortList46.size();
    org.ccsds.moims.mo.mal.structures.OctetList octetList51 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList51.ensureCapacity(13);
    java.lang.Byte[] byteArray58 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList59 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean60 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList59, byteArray58);
    java.lang.Integer[] intArray63 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList64 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean65 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList64, intArray63);
    boolean boolean66 = byteList59.retainAll(intList64);
    boolean boolean67 = octetList51.containsAll(intList64);
    java.util.Iterator<java.lang.Integer> intItor68 = intList64.iterator();
    boolean boolean69 = uShortList46.containsAll(intList64);
    opssat.simulator.util.SimulatorData simulatorData71 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData71.setCounter((-1));
    simulatorData71.feedTimeElapsed(21);
    java.lang.String str76 = simulatorData71.getCurrentDay();
    java.lang.String str77 = simulatorData71.getCurrentYear();
    boolean boolean78 = intList64.equals(simulatorData71);
    boolean boolean79 = octetList0.removeAll(intList64);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(byteStream4);
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(byteStream6);
    org.junit.Assert.assertNotNull(shortItor11);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-15) + "'", int13.equals((-15)));
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertNotNull(uShort15);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(uShort17);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-7) + "'", int19.equals((-7)));
    org.junit.Assert.assertNotNull(uShort20);
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertNotNull(uShort22);
    org.junit.Assert.assertNotNull(uShort23);
    org.junit.Assert.assertNotNull(uShort24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShort26);
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    org.junit.Assert.assertNotNull(longArray38);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(obj41);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", !boolean42);
    org.junit.Assert.assertNotNull(uShort43);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44);
    org.junit.Assert.assertNotNull(uShortArray45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + int50 + "' != '" + 9 + "'", int50 == 9);
    org.junit.Assert.assertNotNull(byteArray58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertNotNull(intArray63);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66);
    org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", !boolean67);
    org.junit.Assert.assertNotNull(intItor68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", !boolean78);
    org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", !boolean79);
  }

  @Test
  public void test0876() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0876");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    java.lang.String str14 = simulatorHeader12.getOrekitTLE2();
    int int15 = simulatorHeader12.getMinuteStartDate();
    java.util.Date date16 = simulatorHeader12.getEndDate();
    boolean boolean17 = simulatorHeader12.isAutoStartTime();
    simulatorHeader12.setOrekitPropagator("2019:05:23 15:09:37 UTC");
    java.lang.String str20 = simulatorHeader12.DATE_FORMAT;
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNotNull(date16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertTrue("'" + str20 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str20.equals("yyyy:MM:dd HH:mm:ss z"));
  }

  @Test
  public void test0878() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0878");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getMonths();
    int int51 = celestiaData32.getMinutes();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState55 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray58 = new float[] { 28, 8 };
    simulatorSpacecraftState55.setQ(floatArray58);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState63 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double64 = simulatorSpacecraftState63.getLatitude();
    java.lang.String str65 = simulatorSpacecraftState63.getMagField();
    float[] floatArray66 = simulatorSpacecraftState63.getR();
    simulatorSpacecraftState55.setQ(floatArray66);
    celestiaData32.setRv(floatArray66);
    celestiaData32.setAos("2019/05/23-15:09:40");
    java.lang.String str71 = celestiaData32.getDate();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(floatArray58);
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 340.0d + "'", double64 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str65 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str65.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray66);
  }

  @Test
  public void test0879() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0879");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    simulatorHeader12.setStartDate(date27);
    boolean boolean31 = simulatorHeader12.isAutoStartTime();
    simulatorHeader12.setUpdateInternet(false);
    int int34 = simulatorHeader12.getMinuteStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
  }

  @Test
  public void test0880() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0880");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience37 = new opssat.simulator.orekit.GPSSatInViewScience(
        4.0d, (short) 100, 281475010265075L, (-4), 0.0d, (-7), 281474993487888L, (short) 255);
    double double38 = gPSSatInViewScience37.getMaxDistance();
    boolean boolean39 = uLong0.equals(gPSSatInViewScience37);
    double double40 = gPSSatInViewScience37.getMaxDistance();
    double double41 = gPSSatInViewScience37.getStdDevDistance();
    double double42 = gPSSatInViewScience37.getAvgDistance();
    double double43 = gPSSatInViewScience37.getStdDevElevation();
    double double44 = gPSSatInViewScience37.getMaxDistance();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.81474993487888E14d + "'",
        double41 == 2.81474993487888E14d);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 255.0d + "'", double43 == 255.0d);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 100.0d + "'", double44 == 100.0d);
  }

  @Test
  public void test0881() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0881");
    org.ccsds.moims.mo.mal.structures.IntegerList integerList1 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        48);
    java.lang.Long long2 = integerList1.getShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = integerList1.getAreaNumber();
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece7 = new opssat.simulator.util.SimulatorSchedulerPiece(
        'a', 11, "");
    boolean boolean8 = integerList1.contains(11);
    java.lang.Long long9 = integerList1.getShortForm();
    java.lang.Long long10 = integerList1.getShortForm();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265077L + "'",
        long2.equals(281475010265077L));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue("'" + long9 + "' != '" + 281475010265077L + "'",
        long9.equals(281475010265077L));
    org.junit.Assert.assertTrue("'" + long10 + "' != '" + 281475010265077L + "'",
        long10.equals(281475010265077L));
  }

  @Test
  public void test0882() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0882");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    simulatorData1.toggleSimulatorRunning();
    java.util.Date date8 = simulatorData1.getCurrentTime();
    int int9 = opssat.simulator.util.DateExtraction.getMinuteFromDate(date8);
    org.junit.Assert.assertNotNull(date8);
  }

  @Test
  public void test0883() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0883");
    java.lang.Double[] doubleArray4 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
    uShortList9.ensureCapacity(0);
    int int14 = uShortList9.indexOf((byte) 1);
    uShortList9.clear();
    java.lang.Long[] longArray18 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean20 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
    java.lang.Object obj21 = longList19.clone();
    boolean boolean22 = uShortList9.contains(longList19);
    boolean boolean23 = doubleList5.equals(boolean22);
    java.lang.Integer[] intArray26 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList27 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean28 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
    int int30 = intList27.lastIndexOf((byte) 10);
    boolean boolean31 = doubleList5.removeAll(intList27);
    org.ccsds.moims.mo.mal.structures.OctetList octetList32 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList32.ensureCapacity(13);
    java.lang.Byte[] byteArray39 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList40 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList40, byteArray39);
    java.lang.Integer[] intArray44 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList45 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean46 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList45, intArray44);
    boolean boolean47 = byteList40.retainAll(intList45);
    boolean boolean48 = octetList32.containsAll(intList45);
    boolean boolean49 = doubleList5.removeAll(intList45);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState53 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double54 = simulatorSpacecraftState53.getLatitude();
    java.lang.String str55 = simulatorSpacecraftState53.getMagField();
    java.lang.String str56 = simulatorSpacecraftState53.toString();
    double[] doubleArray57 = simulatorSpacecraftState53.getSunVector();
    simulatorSpacecraftState53.setSatsInView((short) 10);
    double double60 = simulatorSpacecraftState53.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState64 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double65 = simulatorSpacecraftState64.getLatitude();
    double double66 = simulatorSpacecraftState64.getLongitude();
    float[] floatArray67 = simulatorSpacecraftState64.getQ();
    simulatorSpacecraftState53.setRv(floatArray67);
    int int69 = intList45.lastIndexOf(simulatorSpacecraftState53);
    org.ccsds.moims.mo.mal.structures.UInteger uInteger71 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element72 = uInteger71.createElement();
    long long73 = uInteger71.getValue();
    long long74 = uInteger71.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet75 = uInteger71.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet76 = uInteger71.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.Element element77 = uOctet76.createElement();
    int int78 = intList45.indexOf(uOctet76);
    java.lang.Object obj79 = intList45.clone();
    org.junit.Assert.assertNotNull(doubleArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShortArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(longArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(obj21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(byteArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(intArray44);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", !boolean48);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", !boolean49);
    org.junit.Assert.assertTrue("'" + double54 + "' != '" + 340.0d + "'", double54 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str55 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str55.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str56 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str56.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray57);
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 340.0d + "'", double60 == 340.0d);
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + 340.0d + "'", double65 == 340.0d);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + (-1.0d) + "'", double66 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray67);
    org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
    org.junit.Assert.assertNotNull(element72);
    org.junit.Assert.assertTrue("'" + long73 + "' != '" + 13L + "'", long73 == 13L);
    org.junit.Assert.assertTrue("'" + long74 + "' != '" + 13L + "'", long74 == 13L);
    org.junit.Assert.assertNotNull(uOctet75);
    org.junit.Assert.assertNotNull(uOctet76);
    org.junit.Assert.assertNotNull(element77);
    org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
    org.junit.Assert.assertNotNull(obj79);
  }

  @Test
  public void test0884() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0884");
    java.lang.Byte[] byteArray3 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList4 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList4, byteArray3);
    java.lang.Object[] objArray6 = byteList4.toArray();
    java.util.Iterator<java.lang.Byte> byteItor7 = byteList4.iterator();
    java.util.ListIterator<java.lang.Byte> byteItor8 = byteList4.listIterator();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray15 = new float[] { 28, 8 };
    simulatorSpacecraftState12.setQ(floatArray15);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    float[] floatArray23 = simulatorSpacecraftState20.getR();
    simulatorSpacecraftState12.setQ(floatArray23);
    java.lang.String str25 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray23);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    double double31 = simulatorSpacecraftState29.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState35 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double36 = simulatorSpacecraftState35.getLatitude();
    java.lang.String str37 = simulatorSpacecraftState35.getMagField();
    float[] floatArray38 = simulatorSpacecraftState35.getR();
    simulatorSpacecraftState29.setQ(floatArray38);
    float[] floatArray40 = simulatorSpacecraftState29.getV();
    opssat.simulator.celestia.CelestiaData celestiaData41 = new opssat.simulator.celestia.CelestiaData(
        floatArray23, floatArray40);
    float[] floatArray42 = celestiaData41.getQ();
    opssat.simulator.util.SimulatorData simulatorData46 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date47 = simulatorData46.getCurrentTime();
    int int48 = opssat.simulator.util.DateExtraction.getDayFromDate(date47);
    opssat.simulator.util.SimulatorData simulatorData50 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date51 = simulatorData50.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData53 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date54 = simulatorData53.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap55 = opssat.simulator.util.SimulatorData
        .computeDiff(date51, date54);
    opssat.simulator.util.SimulatorHeader simulatorHeader56 = new opssat.simulator.util.SimulatorHeader(
        false, date47, date54);
    opssat.simulator.util.SimulatorData simulatorData57 = new opssat.simulator.util.SimulatorData(
        (short) 0, date47);
    celestiaData41.setDate(date47);
    int int59 = celestiaData41.getMonths();
    float[] floatArray60 = celestiaData41.getRv();
    java.lang.String str61 = celestiaData41.getAnx();
    int int62 = byteList4.indexOf(str61);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertNotNull(byteItor7);
    org.junit.Assert.assertNotNull(byteItor8);
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray23);
    org.junit.Assert.assertTrue("'" + str25 + "' != '" + "UnknownGUIData" + "'",
        str25.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 340.0d + "'", double31 == 340.0d);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 340.0d + "'", double36 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str37 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str37.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray38);
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(date47);
    org.junit.Assert.assertNotNull(date51);
    org.junit.Assert.assertNotNull(date54);
    org.junit.Assert.assertNotNull(timeUnitMap55);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertNull(str61);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
  }

  @Test
  public void test0885() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0885");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    java.lang.String str17 = simulatorHeader12.toString();
    int int18 = simulatorHeader12.getMonthStartDate();
    simulatorHeader12.setOrekitPropagator("1");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
  }

  @Test
  public void test0886() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0886");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    celestiaData32.setDnx("OPS-SAT SoftSim:");
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    int int57 = opssat.simulator.util.DateExtraction.getDayFromDate(date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date60 = simulatorData59.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData62 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date63 = simulatorData62.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap64 = opssat.simulator.util.SimulatorData
        .computeDiff(date60, date63);
    opssat.simulator.util.SimulatorHeader simulatorHeader65 = new opssat.simulator.util.SimulatorHeader(
        false, date56, date63);
    java.util.Date date66 = simulatorHeader65.getEndDate();
    int int67 = simulatorHeader65.getMinuteStartDate();
    opssat.simulator.util.SimulatorData simulatorData69 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long70 = simulatorData69.getCurrentTimeMillis();
    java.lang.String str71 = simulatorData69.getCurrentDay();
    java.lang.String str72 = simulatorData69.getUTCCurrentTime2();
    java.lang.String str73 = simulatorData69.getCurrentDay();
    java.util.Date date74 = simulatorData69.getCurrentTime();
    int int75 = opssat.simulator.util.DateExtraction.getMinuteFromDate(date74);
    simulatorHeader65.setEndDate(date74);
    int int77 = opssat.simulator.util.DateExtraction.getHourFromDate(date74);
    celestiaData32.setDate(date74);
    celestiaData32.setDnx("030958.883");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(date60);
    org.junit.Assert.assertNotNull(date63);
    org.junit.Assert.assertNotNull(timeUnitMap64);
    org.junit.Assert.assertNotNull(date66);
    org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
    org.junit.Assert.assertNotNull(date74);
  }

  @Test
  public void test0887() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0887");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    double double13 = simulatorSpacecraftState11.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState17 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState17.setLongitude(4);
    int int20 = simulatorSpacecraftState17.getSatsInView();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState24 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double25 = simulatorSpacecraftState24.getLatitude();
    java.lang.String str26 = simulatorSpacecraftState24.getMagField();
    java.lang.String str27 = simulatorSpacecraftState24.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    java.lang.String str33 = simulatorSpacecraftState31.getMagField();
    java.lang.String str34 = simulatorSpacecraftState31.toString();
    double[] doubleArray35 = simulatorSpacecraftState31.getSunVector();
    simulatorSpacecraftState24.setMagnetometer(doubleArray35);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState40 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double41 = simulatorSpacecraftState40.getLatitude();
    java.lang.String str42 = simulatorSpacecraftState40.getMagField();
    java.lang.String str43 = simulatorSpacecraftState40.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState47 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double48 = simulatorSpacecraftState47.getLatitude();
    java.lang.String str49 = simulatorSpacecraftState47.getMagField();
    java.lang.String str50 = simulatorSpacecraftState47.toString();
    double[] doubleArray51 = simulatorSpacecraftState47.getSunVector();
    simulatorSpacecraftState40.setMagnetometer(doubleArray51);
    simulatorSpacecraftState24.setMagnetometer(doubleArray51);
    simulatorSpacecraftState17.setSunVector(doubleArray51);
    simulatorSpacecraftState11.setMagField(doubleArray51);
    endlessSingleStreamOperatingBuffer1.setDataBuffer(simulatorSpacecraftState11);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str26 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str26.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str27 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str27.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str33 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str33.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str34 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str34.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray35);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 340.0d + "'", double41 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str42 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str42.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str43 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str43.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double48 + "' != '" + 340.0d + "'", double48 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str49 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str49.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str50 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str50.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray51);
  }

  @Test
  public void test0888() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0888");
    org.ccsds.moims.mo.mal.structures.FineTime fineTime1 = new org.ccsds.moims.mo.mal.structures.FineTime(
        16);
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData3.setCounter((-1));
    simulatorData3.incrementMethods();
    java.lang.String str7 = simulatorData3.getCurrentYear();
    boolean boolean8 = fineTime1.equals(str7);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = fineTime1.getAreaVersion();
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertNotNull(uOctet9);
  }

  @Test
  public void test0890() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0890");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    int int8 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setAltitude((-5));
    double double11 = simulatorSpacecraftState3.getLatitude();
    simulatorSpacecraftState3.setSatsInView((-1));
    java.lang.String str14 = simulatorSpacecraftState3.getSunVectorAsString();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 340.0d + "'", double11 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str14.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
  }

  @Test
  public void test0891() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0891");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMinElevation();
    double double10 = gPSSatInViewScience8.getStdDevElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 48.0d + "'", double9 == 48.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 11111.0d + "'", double10 == 11111.0d);
  }

  @Test
  public void test0892() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0892");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setOrekitTLE1("[]");
    simulatorHeader20
        .setOrekitPropagator("opssat.simulator.util.wav.WavFileException: UnknownGUIData");
    java.lang.String str28 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setTimeFactor(8);
    boolean boolean31 = simulatorHeader20.isUpdateInternet();
    int int32 = simulatorHeader20.getMinuteStartDate();
    java.lang.String str33 = simulatorHeader20.getEndDateString();
    java.lang.String str34 = simulatorHeader20.getOrekitPropagator();
    simulatorHeader20.setOrekitPropagator("1");
    boolean boolean37 = simulatorHeader20.isAutoStartSystem();
    simulatorHeader20.setKeplerElements(
        "SimulatorSpacecraftState{latitude=340.0, longitude=2.81475010265083E14, altitude=-5.0}");
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str28.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertTrue(
        "'" + str34 + "' != '" + "opssat.simulator.util.wav.WavFileException: UnknownGUIData" + "'",
        str34.equals("opssat.simulator.util.wav.WavFileException: UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
  }

  @Test
  public void test0893() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0893");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    java.lang.String str3 = pOpticalReceiver2.getName();
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS
        .float2ByteArray(281474993487876L);
    try {
      pOpticalReceiver2.simSetMessageBuffer(byteArray5);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "031008.320" + "'",
        str3.equals("031008.320"));
    org.junit.Assert.assertNotNull(byteArray5);
  }

  @Test
  public void test0894() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0894");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    boolean boolean24 = simulatorHeader20.isAutoStartSystem();
    int int25 = simulatorHeader20.getMinuteStartDate();
    int int26 = simulatorHeader20.getMonthStartDate();
    boolean boolean27 = simulatorHeader20.isUpdateInternet();
    boolean boolean28 = simulatorHeader20.checkStartBeforeEnd();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
  }

  @Test
  public void test0895() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0895");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long2 = simulatorData1.getCurrentTimeMillis();
    java.lang.String str3 = simulatorData1.getCurrentDay();
    java.lang.String str4 = simulatorData1.getUTCCurrentTime2();
    java.lang.String str5 = simulatorData1.getCurrentDay();
    simulatorData1.setMethodsExecuted(0);
    boolean boolean8 = simulatorData1.isTimeRunning();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
  }

  @Test
  public void test0897() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0897");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    double[] doubleArray7 = new double[] { (-1.0f) };
    simulatorSpacecraftState3.setMagField(doubleArray7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double13 = simulatorSpacecraftState12.getLatitude();
    java.lang.String str14 = simulatorSpacecraftState12.getMagField();
    java.lang.String str15 = simulatorSpacecraftState12.toString();
    double[] doubleArray16 = simulatorSpacecraftState12.getSunVector();
    simulatorSpacecraftState3.setMagnetometer(doubleArray16);
    simulatorSpacecraftState3.setModeOperation("3100.0000000");
    int int20 = simulatorSpacecraftState3.getSatsInView();
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 340.0d + "'", double13 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str14.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str15.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray16);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
  }

  @Test
  public void test0899() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0899");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    java.lang.Long[] longArray11 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList12 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList12, longArray11);
    java.lang.Object obj14 = longList12.clone();
    int int15 = uShortList2.lastIndexOf(obj14);
    java.lang.Byte[] byteArray20 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList21 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean22 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList21, byteArray20);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    boolean boolean28 = byteList21.retainAll(intList26);
    java.lang.Integer[] intArray31 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList32 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean33 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList32, intArray31);
    int int35 = intList32.lastIndexOf((byte) 10);
    boolean boolean36 = intList26.retainAll(intList32);
    java.lang.Object obj37 = intList26.clone();
    boolean boolean38 = uShortList2.removeAll(intList26);
    java.lang.Object[] objArray39 = uShortList2.toArray();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet40 = org.ccsds.moims.mo.mal.structures.StringList.AREA_VERSION;
    boolean boolean41 = uShortList2.equals(uOctet40);
    java.lang.Byte[] byteArray45 = new java.lang.Byte[] { (byte) 1, (byte) -1, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList46 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean47 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList46, byteArray45);
    boolean boolean49 = byteList46.add((byte) 100);
    java.util.stream.Stream<java.lang.Byte> byteStream50 = byteList46.stream();
    int int51 = uShortList2.lastIndexOf(byteList46);
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor53 = new opssat.simulator.util.ArgumentDescriptor(
        int51, "[]");
    try {
      argumentDescriptor53.setIntTypeByIndex(1, 6);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.ClassCastException; message: java.lang.Integer cannot be cast to [I");
    } catch (java.lang.ClassCastException e) {
    }
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(longArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertNotNull(obj14);
    org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    org.junit.Assert.assertNotNull(byteArray20);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertNotNull(intArray31);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33);
    org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertNotNull(obj37);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", !boolean38);
    org.junit.Assert.assertNotNull(objArray39);
    org.junit.Assert.assertNotNull(uOctet40);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", !boolean41);
    org.junit.Assert.assertNotNull(byteArray45);
    org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(byteStream50);
    org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
  }

  @Test
  public void test0900() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0900");
    java.lang.Long[] longArray7 = new java.lang.Long[] { 281474993487875L, 281474993487875L,
        281474993487875L, 281474993487888L, 281475010265070L, 4294967295L, 281474993487878L };
    java.util.ArrayList<java.lang.Long> longList8 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean9 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList8, longArray7);
    boolean boolean11 = longList8.add(281475010265070L);
    java.lang.Boolean[] booleanArray14 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList15 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList15, booleanArray14);
    int int18 = booleanList15.indexOf(10);
    int int19 = longList8.indexOf(booleanList15);
    java.util.stream.Stream<java.lang.Boolean> booleanStream20 = booleanList15.parallelStream();
    org.ccsds.moims.mo.mal.structures.StringList stringList22 = new org.ccsds.moims.mo.mal.structures.StringList(
        36);
    org.ccsds.moims.mo.mal.structures.StringList stringList23 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList25 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor26 = shortList25.listIterator();
    boolean boolean27 = stringList23.equals(shortList25);
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = shortList25.getAreaNumber();
    java.lang.Integer int29 = uShort28.getTypeShortForm();
    int int30 = stringList22.indexOf(int29);
    int int31 = stringList22.size();
    org.ccsds.moims.mo.mal.structures.UShort uShort32 = stringList22.getServiceNumber();
    boolean boolean33 = booleanList15.remove(uShort32);
    opssat.simulator.util.wav.WavFileException wavFileException35 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    opssat.simulator.util.wav.WavFileException wavFileException36 = new opssat.simulator.util.wav.WavFileException(
        wavFileException35);
    int int37 = booleanList15.lastIndexOf(wavFileException35);
    org.junit.Assert.assertNotNull(longArray7);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9);
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11);
    org.junit.Assert.assertNotNull(booleanArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertNotNull(booleanStream20);
    org.junit.Assert.assertNotNull(shortItor26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertNotNull(uShort28);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29.equals(10));
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    org.junit.Assert.assertNotNull(uShort32);
    org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", !boolean33);
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
  }

  @Test
  public void test0901() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0901");
    java.lang.Float[] floatArray3 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList4 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList4, floatArray3);
    boolean boolean7 = floatList4.add((-1.0f));
    floatList4.trimToSize();
    boolean boolean10 = floatList4.add((-1.0f));
    java.lang.Float float12 = floatList4.remove((byte) 0);
    java.lang.Long[] longArray19 = new java.lang.Long[] { 281475010265070L, 100L, 0L,
        281475010265070L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList20 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList20, longArray19);
    boolean boolean22 = longList20.isEmpty();
    java.util.Iterator<java.lang.Long> longItor23 = longList20.iterator();
    java.lang.Byte[] byteArray27 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList28 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean29 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList28, byteArray27);
    java.lang.Object[] objArray30 = byteList28.toArray();
    java.util.stream.Stream<java.lang.Byte> byteStream31 = byteList28.stream();
    java.util.Iterator<java.lang.Byte> byteItor32 = byteList28.iterator();
    java.lang.String str33 = byteList28.toString();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList35 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        48);
    org.ccsds.moims.mo.mal.structures.UShort uShort36 = integerList35.getAreaNumber();
    boolean boolean37 = byteList28.removeAll(integerList35);
    org.ccsds.moims.mo.mal.structures.Element element38 = integerList35.createElement();
    boolean boolean39 = longList20.retainAll(integerList35);
    boolean boolean40 = floatList4.retainAll(integerList35);
    opssat.simulator.util.SimulatorData simulatorData43 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date44 = simulatorData43.getCurrentTime();
    int int45 = opssat.simulator.util.DateExtraction.getDayFromDate(date44);
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData50 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date51 = simulatorData50.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap52 = opssat.simulator.util.SimulatorData
        .computeDiff(date48, date51);
    opssat.simulator.util.SimulatorHeader simulatorHeader53 = new opssat.simulator.util.SimulatorHeader(
        false, date44, date51);
    java.util.Date date54 = simulatorHeader53.getEndDate();
    java.lang.String str55 = simulatorHeader53.getOrekitTLE2();
    int int56 = simulatorHeader53.getMinuteStartDate();
    boolean boolean57 = floatList4.contains(int56);
    org.junit.Assert.assertNotNull(floatArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12.equals(1.0f));
    org.junit.Assert.assertNotNull(longArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertNotNull(longItor23);
    org.junit.Assert.assertNotNull(byteArray27);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
    org.junit.Assert.assertNotNull(objArray30);
    org.junit.Assert.assertNotNull(byteStream31);
    org.junit.Assert.assertNotNull(byteItor32);
    org.junit.Assert.assertTrue("'" + str33 + "' != '" + "[10, 10, -1]" + "'",
        str33.equals("[10, 10, -1]"));
    org.junit.Assert.assertNotNull(uShort36);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", !boolean37);
    org.junit.Assert.assertNotNull(element38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(date51);
    org.junit.Assert.assertNotNull(timeUnitMap52);
    org.junit.Assert.assertNotNull(date54);
    org.junit.Assert.assertNull(str55);
    org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", !boolean57);
  }

  @Test
  public void test0902() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0902");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.incrementMethods();
    simulatorData1.toggleSimulatorRunning();
    int int6 = simulatorData1.getTimeFactor();
    boolean boolean7 = simulatorData1.isSimulatorRunning();
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
  }

  @Test
  public void test0903() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0903");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    float[] floatArray33 = celestiaData32.getQ();
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    int int39 = opssat.simulator.util.DateExtraction.getDayFromDate(date38);
    opssat.simulator.util.SimulatorData simulatorData41 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date42 = simulatorData41.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap46 = opssat.simulator.util.SimulatorData
        .computeDiff(date42, date45);
    opssat.simulator.util.SimulatorHeader simulatorHeader47 = new opssat.simulator.util.SimulatorHeader(
        false, date38, date45);
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (short) 0, date38);
    celestiaData32.setDate(date38);
    int int50 = celestiaData32.getSeconds();
    int int51 = celestiaData32.getDays();
    celestiaData32.setDnx("2019/05/23-15:10:13");
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNotNull(floatArray33);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date42);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(timeUnitMap46);
  }

  @Test
  public void test0904() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0904");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.util.wav.WavFileException wavFileException31 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    opssat.simulator.util.wav.WavFileException wavFileException32 = new opssat.simulator.util.wav.WavFileException(
        "-0500.0000000", wavFileException31);
    java.lang.String str33 = wavFileException32.toString();
    boolean boolean34 = uLong0.equals(wavFileException32);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet35 = uLong0.getAreaVersion();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue(
        "'" + str33 + "' != '" + "opssat.simulator.util.wav.WavFileException: -0500.0000000" + "'",
        str33.equals("opssat.simulator.util.wav.WavFileException: -0500.0000000"));
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", !boolean34);
    org.junit.Assert.assertNotNull(uOctet35);
  }

  @Test
  public void test0905() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0905");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    opssat.simulator.threading.SimulatorNode.DevDatPBind devDatPBind1 = opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels;
    boolean boolean2 = stringList0.equals(devDatPBind1);
    org.ccsds.moims.mo.mal.structures.Element element3 = stringList0.createElement();
    java.lang.String str4 = stringList0.toString();
    java.lang.Integer int5 = stringList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShortList uShortList6 = new org.ccsds.moims.mo.mal.structures.UShortList();
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = uShortList6.getServiceNumber();
    boolean boolean8 = uShortList6.isEmpty();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = uShortList6.getAreaNumber();
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    java.lang.Integer[] intArray25 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList26 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean27 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList26, intArray25);
    int int29 = intList26.lastIndexOf((byte) 10);
    boolean boolean30 = intList20.retainAll(intList26);
    java.lang.Double[] doubleArray35 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList36 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean37 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList36, doubleArray35);
    org.ccsds.moims.mo.mal.structures.UShort uShort38 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray39 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort38 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList40 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean41 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList40,
        uShortArray39);
    uShortList40.ensureCapacity(0);
    int int45 = uShortList40.indexOf((byte) 1);
    uShortList40.clear();
    java.lang.Long[] longArray49 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList50 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean51 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList50, longArray49);
    java.lang.Object obj52 = longList50.clone();
    boolean boolean53 = uShortList40.contains(longList50);
    boolean boolean54 = doubleList36.equals(boolean53);
    java.lang.Integer[] intArray57 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList58 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean59 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
    int int61 = intList58.lastIndexOf((byte) 10);
    boolean boolean62 = doubleList36.removeAll(intList58);
    boolean boolean63 = intList26.retainAll(intList58);
    opssat.simulator.util.SimulatorData simulatorData67 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date68 = simulatorData67.getCurrentTime();
    java.util.Date date69 = simulatorData67.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData70 = new opssat.simulator.util.SimulatorData(
        17, date69);
    opssat.simulator.util.SimulatorData simulatorData73 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date74 = simulatorData73.getCurrentTime();
    int int75 = opssat.simulator.util.DateExtraction.getDayFromDate(date74);
    opssat.simulator.util.SimulatorData simulatorData77 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date78 = simulatorData77.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData80 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date81 = simulatorData80.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap82 = opssat.simulator.util.SimulatorData
        .computeDiff(date78, date81);
    opssat.simulator.util.SimulatorHeader simulatorHeader83 = new opssat.simulator.util.SimulatorHeader(
        false, date74, date81);
    opssat.simulator.util.SimulatorHeader simulatorHeader84 = new opssat.simulator.util.SimulatorHeader(
        false, date69, date74);
    simulatorHeader84.setUpdateInternet(true);
    java.util.Date date87 = null;
    simulatorHeader84.setEndDate(date87);
    int int89 = intList26.lastIndexOf(date87);
    boolean boolean90 = uShortList6.removeAll(intList26);
    boolean boolean91 = stringList0.retainAll(intList26);
    org.junit.Assert.assertTrue(
        "'" + devDatPBind1 + "' != '"
            + opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels + "'",
        devDatPBind1
            .equals(opssat.simulator.threading.SimulatorNode.DevDatPBind.FineADCS_ReactionWheels));
    org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", !boolean2);
    org.junit.Assert.assertNotNull(element3);
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "[]" + "'", str4.equals("[]"));
    org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-15) + "'", int5.equals((-15)));
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertNotNull(intArray25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertNotNull(doubleArray35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertNotNull(uShort38);
    org.junit.Assert.assertNotNull(uShortArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    org.junit.Assert.assertNotNull(longArray49);
    org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51);
    org.junit.Assert.assertNotNull(obj52);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", !boolean53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
    org.junit.Assert.assertNotNull(intArray57);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", !boolean62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
    org.junit.Assert.assertNotNull(date68);
    org.junit.Assert.assertNotNull(date69);
    org.junit.Assert.assertNotNull(date74);
    org.junit.Assert.assertNotNull(date78);
    org.junit.Assert.assertNotNull(date81);
    org.junit.Assert.assertNotNull(timeUnitMap82);
    org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
    org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", !boolean90);
    org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", !boolean91);
  }

  @Test
  public void test0906() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0906");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    java.lang.String str6 = simulatorSpacecraftState3.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState10 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState10.setLongitude(4);
    double[] doubleArray14 = new double[] { (-1.0f) };
    simulatorSpacecraftState10.setMagField(doubleArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState19 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double20 = simulatorSpacecraftState19.getLatitude();
    java.lang.String str21 = simulatorSpacecraftState19.getMagField();
    java.lang.String str22 = simulatorSpacecraftState19.toString();
    double[] doubleArray23 = simulatorSpacecraftState19.getSunVector();
    simulatorSpacecraftState10.setMagnetometer(doubleArray23);
    simulatorSpacecraftState3.setMagField(doubleArray23);
    simulatorSpacecraftState3.setModeOperation("0");
    simulatorSpacecraftState3.setModeOperation("030936.762");
    simulatorSpacecraftState3.setAltitude(60);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState35 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState35.setLongitude(4);
    double[] doubleArray39 = new double[] { (-1.0f) };
    simulatorSpacecraftState35.setMagField(doubleArray39);
    simulatorSpacecraftState3.setMagnetometer(doubleArray39);
    java.lang.String str42 = simulatorSpacecraftState3.getModeOperation();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertNull(str6);
    org.junit.Assert.assertNotNull(doubleArray14);
    org.junit.Assert.assertTrue("'" + double20 + "' != '" + 340.0d + "'", double20 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str21 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str21.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str22.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray23);
    org.junit.Assert.assertNotNull(doubleArray39);
    org.junit.Assert.assertTrue("'" + str42 + "' != '" + "030936.762" + "'",
        str42.equals("030936.762"));
  }

  @Test
  public void test0907() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0907");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    java.util.Date date4 = simulatorData2.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData5 = new opssat.simulator.util.SimulatorData(34,
        date4);
    simulatorData5.setCounter(5);
    java.lang.String str8 = simulatorData5.getCurrentYear();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date4);
  }

  @Test
  public void test0908() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0908");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(8);
    java.lang.String str2 = simulatorData1.toString();
    java.lang.String str3 = simulatorData1.toString();
    java.lang.String str4 = simulatorData1.getUTCCurrentTime();
    boolean boolean5 = simulatorData1.isSimulatorRunning();
    java.lang.String str6 = simulatorData1.toString();
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
  }

  @Test
  public void test0909() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0909");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    org.ccsds.moims.mo.mal.structures.Union union5 = new org.ccsds.moims.mo.mal.structures.Union(
        "$DEFAULT");
    endlessSingleStreamOperatingBuffer1.setDataBuffer("$DEFAULT");
    byte[] byteArray8 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(20);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray8);
    java.lang.String str10 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.util.logging.Logger logger11 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer12 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger11);
    byte[] byteArray14 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.float2ByteArray(64);
    endlessSingleStreamOperatingBuffer12.setDataFromByteArray(byteArray14);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray14);
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray8);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "byte[] {0x41,0xA0,0x00,0x00}" + "'",
        str10.equals("byte[] {0x41,0xA0,0x00,0x00}"));
    org.junit.Assert.assertNotNull(byteArray14);
  }

  @Test
  public void test0910() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0910");
    org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = shortList1.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double7 = simulatorSpacecraftState6.getLatitude();
    java.lang.String str8 = simulatorSpacecraftState6.getMagField();
    java.lang.String str9 = simulatorSpacecraftState6.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double14 = simulatorSpacecraftState13.getLatitude();
    double double15 = simulatorSpacecraftState13.getLongitude();
    java.lang.String str16 = simulatorSpacecraftState13.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState20.setLongitude(4);
    double[] doubleArray24 = new double[] { (-1.0f) };
    simulatorSpacecraftState20.setMagField(doubleArray24);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    java.lang.String str32 = simulatorSpacecraftState29.toString();
    double[] doubleArray33 = simulatorSpacecraftState29.getSunVector();
    simulatorSpacecraftState20.setMagnetometer(doubleArray33);
    simulatorSpacecraftState13.setMagField(doubleArray33);
    simulatorSpacecraftState6.setMagField(doubleArray33);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState40 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray43 = new float[] { 28, 8 };
    simulatorSpacecraftState40.setQ(floatArray43);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState48 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double49 = simulatorSpacecraftState48.getLatitude();
    java.lang.String str50 = simulatorSpacecraftState48.getMagField();
    float[] floatArray51 = simulatorSpacecraftState48.getR();
    simulatorSpacecraftState40.setQ(floatArray51);
    java.lang.String str53 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray51);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState57 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double58 = simulatorSpacecraftState57.getLatitude();
    double double59 = simulatorSpacecraftState57.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState63 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double64 = simulatorSpacecraftState63.getLatitude();
    java.lang.String str65 = simulatorSpacecraftState63.getMagField();
    float[] floatArray66 = simulatorSpacecraftState63.getR();
    simulatorSpacecraftState57.setQ(floatArray66);
    float[] floatArray68 = simulatorSpacecraftState57.getV();
    opssat.simulator.celestia.CelestiaData celestiaData69 = new opssat.simulator.celestia.CelestiaData(
        floatArray51, floatArray68);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState73 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double74 = simulatorSpacecraftState73.getLatitude();
    double double75 = simulatorSpacecraftState73.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState79 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double80 = simulatorSpacecraftState79.getLatitude();
    java.lang.String str81 = simulatorSpacecraftState79.getMagField();
    float[] floatArray82 = simulatorSpacecraftState79.getR();
    simulatorSpacecraftState73.setQ(floatArray82);
    celestiaData69.setQ(floatArray82);
    simulatorSpacecraftState6.setQ(floatArray82);
    boolean boolean86 = uOctet2.equals(floatArray82);
    org.ccsds.moims.mo.mal.structures.Element element87 = uOctet2.createElement();
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertTrue("'" + double7 + "' != '" + 340.0d + "'", double7 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str8 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str8.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str9 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str9.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 340.0d + "'", double14 == 340.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertNotNull(doubleArray24);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str32 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str32.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray33);
    org.junit.Assert.assertNotNull(floatArray43);
    org.junit.Assert.assertTrue("'" + double49 + "' != '" + 340.0d + "'", double49 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str50 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str50.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray51);
    org.junit.Assert.assertTrue("'" + str53 + "' != '" + "UnknownGUIData" + "'",
        str53.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double58 + "' != '" + 340.0d + "'", double58 == 340.0d);
    org.junit.Assert.assertTrue("'" + double59 + "' != '" + 340.0d + "'", double59 == 340.0d);
    org.junit.Assert.assertTrue("'" + double64 + "' != '" + 340.0d + "'", double64 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str65 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str65.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray66);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + double74 + "' != '" + 340.0d + "'", double74 == 340.0d);
    org.junit.Assert.assertTrue("'" + double75 + "' != '" + 340.0d + "'", double75 == 340.0d);
    org.junit.Assert.assertTrue("'" + double80 + "' != '" + 340.0d + "'", double80 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str81 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str81.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray82);
    org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", !boolean86);
    org.junit.Assert.assertNotNull(element87);
  }

  @Test
  public void test0911() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0911");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date2 = simulatorData1.getCurrentTime();
    long long3 = simulatorData1.getCurrentTimeMillis();
    org.junit.Assert.assertNotNull(date2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
  }

  @Test
  public void test0912() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0912");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        100.0f, 2019, (short) 100);
    float[] floatArray4 = simulatorSpacecraftState3.getRv();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState8 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState8.setLongitude(4);
    int int11 = simulatorSpacecraftState8.getSatsInView();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double16 = simulatorSpacecraftState15.getLatitude();
    java.lang.String str17 = simulatorSpacecraftState15.getMagField();
    java.lang.String str18 = simulatorSpacecraftState15.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    java.lang.String str25 = simulatorSpacecraftState22.toString();
    double[] doubleArray26 = simulatorSpacecraftState22.getSunVector();
    simulatorSpacecraftState15.setMagnetometer(doubleArray26);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    java.lang.String str33 = simulatorSpacecraftState31.getMagField();
    java.lang.String str34 = simulatorSpacecraftState31.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState38 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double39 = simulatorSpacecraftState38.getLatitude();
    java.lang.String str40 = simulatorSpacecraftState38.getMagField();
    java.lang.String str41 = simulatorSpacecraftState38.toString();
    double[] doubleArray42 = simulatorSpacecraftState38.getSunVector();
    simulatorSpacecraftState31.setMagnetometer(doubleArray42);
    simulatorSpacecraftState15.setMagnetometer(doubleArray42);
    simulatorSpacecraftState8.setSunVector(doubleArray42);
    simulatorSpacecraftState3.setSunVector(doubleArray42);
    org.junit.Assert.assertNotNull(floatArray4);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 340.0d + "'", double16 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str17 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str17.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str18 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str18.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str25 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str25.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray26);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str33 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str33.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str34 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str34.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + 340.0d + "'", double39 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str40 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str40.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str41 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str41.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray42);
  }

  @Test
  public void test0913() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0913");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.lang.String str13 = simulatorHeader12.getEndDateString();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    int int18 = opssat.simulator.util.DateExtraction.getDayFromDate(date17);
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date21 = simulatorData20.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap25 = opssat.simulator.util.SimulatorData
        .computeDiff(date21, date24);
    opssat.simulator.util.SimulatorHeader simulatorHeader26 = new opssat.simulator.util.SimulatorHeader(
        false, date17, date24);
    java.util.Date date27 = simulatorHeader26.getEndDate();
    boolean boolean28 = simulatorHeader26.isAutoStartSystem();
    int int29 = simulatorHeader26.getDayStartDate();
    boolean boolean30 = simulatorHeader26.isUseCelestia();
    opssat.simulator.util.SimulatorData simulatorData33 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date34 = simulatorData33.getCurrentTime();
    int int35 = opssat.simulator.util.DateExtraction.getDayFromDate(date34);
    opssat.simulator.util.SimulatorData simulatorData37 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date38 = simulatorData37.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap42 = opssat.simulator.util.SimulatorData
        .computeDiff(date38, date41);
    opssat.simulator.util.SimulatorHeader simulatorHeader43 = new opssat.simulator.util.SimulatorHeader(
        false, date34, date41);
    simulatorHeader26.setStartDate(date41);
    simulatorHeader12.setStartDate(date41);
    simulatorHeader12.setAutoStartTime(false);
    int int48 = simulatorHeader12.getTimeFactor();
    int int49 = simulatorHeader12.getMinuteStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(timeUnitMap25);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", !boolean30);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date38);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(timeUnitMap42);
    org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
  }

  @Test
  public void test0914() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0914");
    org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    int int7 = booleanList4.indexOf(10);
    int int8 = booleanList4.size();
    java.lang.Byte[] byteArray12 = new java.lang.Byte[] { (byte) 10, (byte) 10, (byte) -1 };
    java.util.ArrayList<java.lang.Byte> byteList13 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean14 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList13, byteArray12);
    java.lang.Object[] objArray15 = byteList13.toArray();
    java.util.Iterator<java.lang.Byte> byteItor16 = byteList13.iterator();
    boolean boolean17 = booleanList4.contains(byteList13);
    java.util.stream.Stream<java.lang.Boolean> booleanStream18 = booleanList4.stream();
    int int19 = uShortList0.lastIndexOf(booleanList4);
    org.ccsds.moims.mo.mal.structures.UShort uShort20 = uShortList0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort21 = uShortList0.getServiceNumber();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream22 = uShortList0
        .stream();
    org.ccsds.moims.mo.mal.structures.Duration duration24 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet25 = duration24.getAreaVersion();
    java.lang.Long long26 = duration24.getShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = duration24.getAreaNumber();
    boolean boolean28 = uShortList0.contains(duration24);
    opssat.simulator.util.SimulatorSpacecraftState[] simulatorSpacecraftStateArray29 = new opssat.simulator.util.SimulatorSpacecraftState[] {};
    opssat.simulator.util.SimulatorSpacecraftState[] simulatorSpacecraftStateArray30 = uShortList0
        .toArray(simulatorSpacecraftStateArray29);
    org.ccsds.moims.mo.mal.structures.BooleanList booleanList32 = new org.ccsds.moims.mo.mal.structures.BooleanList(
        36);
    java.lang.Integer int33 = booleanList32.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList35 = new org.ccsds.moims.mo.mal.structures.IntegerList(
        70);
    boolean boolean36 = booleanList32.containsAll(integerList35);
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = integerList35.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort38 = integerList35.getAreaNumber();
    boolean boolean39 = uShortList0.remove(uShort38);
    org.ccsds.moims.mo.mal.structures.Duration duration41 = new org.ccsds.moims.mo.mal.structures.Duration(
        0.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet42 = duration41.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort43 = duration41.getAreaNumber();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState47 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray50 = new float[] { 28, 8 };
    simulatorSpacecraftState47.setQ(floatArray50);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState55 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double56 = simulatorSpacecraftState55.getLatitude();
    java.lang.String str57 = simulatorSpacecraftState55.getMagField();
    float[] floatArray58 = simulatorSpacecraftState55.getR();
    simulatorSpacecraftState47.setQ(floatArray58);
    java.lang.String str60 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray58);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState64 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double65 = simulatorSpacecraftState64.getLatitude();
    double double66 = simulatorSpacecraftState64.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState70 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double71 = simulatorSpacecraftState70.getLatitude();
    java.lang.String str72 = simulatorSpacecraftState70.getMagField();
    float[] floatArray73 = simulatorSpacecraftState70.getR();
    simulatorSpacecraftState64.setQ(floatArray73);
    float[] floatArray75 = simulatorSpacecraftState64.getV();
    opssat.simulator.celestia.CelestiaData celestiaData76 = new opssat.simulator.celestia.CelestiaData(
        floatArray58, floatArray75);
    float[] floatArray77 = celestiaData76.getQ();
    opssat.simulator.util.SimulatorData simulatorData81 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date82 = simulatorData81.getCurrentTime();
    int int83 = opssat.simulator.util.DateExtraction.getDayFromDate(date82);
    opssat.simulator.util.SimulatorData simulatorData85 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date86 = simulatorData85.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData88 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date89 = simulatorData88.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap90 = opssat.simulator.util.SimulatorData
        .computeDiff(date86, date89);
    opssat.simulator.util.SimulatorHeader simulatorHeader91 = new opssat.simulator.util.SimulatorHeader(
        false, date82, date89);
    opssat.simulator.util.SimulatorData simulatorData92 = new opssat.simulator.util.SimulatorData(
        (short) 0, date82);
    celestiaData76.setDate(date82);
    boolean boolean94 = duration41.equals(date82);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet95 = duration41.getAreaVersion();
    boolean boolean96 = uShortList0.contains(duration41);
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    org.junit.Assert.assertNotNull(byteArray12);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14);
    org.junit.Assert.assertNotNull(objArray15);
    org.junit.Assert.assertNotNull(byteItor16);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertNotNull(booleanStream18);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertNotNull(uShort20);
    org.junit.Assert.assertNotNull(uShort21);
    org.junit.Assert.assertNotNull(uShortStream22);
    org.junit.Assert.assertNotNull(uOctet25);
    org.junit.Assert.assertTrue("'" + long26 + "' != '" + 281474993487875L + "'",
        long26.equals(281474993487875L));
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertNotNull(simulatorSpacecraftStateArray29);
    org.junit.Assert.assertNotNull(simulatorSpacecraftStateArray30);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-2) + "'", int33.equals((-2)));
    org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36);
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(uShort38);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertNotNull(uOctet42);
    org.junit.Assert.assertNotNull(uShort43);
    org.junit.Assert.assertNotNull(floatArray50);
    org.junit.Assert.assertTrue("'" + double56 + "' != '" + 340.0d + "'", double56 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str57 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str57.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray58);
    org.junit.Assert.assertTrue("'" + str60 + "' != '" + "UnknownGUIData" + "'",
        str60.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double65 + "' != '" + 340.0d + "'", double65 == 340.0d);
    org.junit.Assert.assertTrue("'" + double66 + "' != '" + 340.0d + "'", double66 == 340.0d);
    org.junit.Assert.assertTrue("'" + double71 + "' != '" + 340.0d + "'", double71 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str72 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str72.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray73);
    org.junit.Assert.assertNotNull(floatArray75);
    org.junit.Assert.assertNotNull(floatArray77);
    org.junit.Assert.assertNotNull(date82);
    org.junit.Assert.assertNotNull(date86);
    org.junit.Assert.assertNotNull(date89);
    org.junit.Assert.assertNotNull(timeUnitMap90);
    org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", !boolean94);
    org.junit.Assert.assertNotNull(uOctet95);
    org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", !boolean96);
  }

  @Test
  public void test0915() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0915");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState9 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray12 = new float[] { 28, 8 };
    simulatorSpacecraftState9.setQ(floatArray12);
    int int14 = simulatorSpacecraftState9.getSatsInView();
    simulatorSpacecraftState9.setAltitude((-5));
    double[] doubleArray17 = simulatorSpacecraftState9.getSunVector();
    simulatorSpacecraftState3.setMagField(doubleArray17);
    double double19 = simulatorSpacecraftState3.getLongitude();
    simulatorSpacecraftState3.setModeOperation("031008.320");
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertNotNull(doubleArray17);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
  }

  @Test
  public void test0916() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0916");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    java.util.Date date4 = simulatorData2.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData5 = new opssat.simulator.util.SimulatorData(17,
        date4);
    java.lang.String str6 = simulatorData5.getCurrentMonth();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date4);
  }

  @Test
  public void test0917() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0917");
    org.ccsds.moims.mo.mal.structures.ULong uLong0 = new org.ccsds.moims.mo.mal.structures.ULong();
    java.lang.Long long1 = uLong0.getShortForm();
    java.lang.Boolean[] booleanArray3 = new java.lang.Boolean[] { true };
    java.util.ArrayList<java.lang.Boolean> booleanList4 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList4, booleanArray3);
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator6 = booleanList4.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    octetList7.ensureCapacity(13);
    java.lang.Byte[] byteArray14 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList15 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList15, byteArray14);
    java.lang.Integer[] intArray19 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList20 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean21 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList20, intArray19);
    boolean boolean22 = byteList15.retainAll(intList20);
    boolean boolean23 = octetList7.containsAll(intList20);
    java.util.Iterator<java.lang.Integer> intItor24 = intList20.iterator();
    boolean boolean25 = booleanList4.retainAll(intList20);
    java.lang.String str26 = booleanList4.toString();
    java.lang.String str27 = booleanList4.toString();
    boolean boolean28 = uLong0.equals(booleanList4);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience37 = new opssat.simulator.orekit.GPSSatInViewScience(
        4.0d, (short) 100, 281475010265075L, (-4), 0.0d, (-7), 281474993487888L, (short) 255);
    double double38 = gPSSatInViewScience37.getMaxDistance();
    boolean boolean39 = uLong0.equals(gPSSatInViewScience37);
    double double40 = gPSSatInViewScience37.getMaxDistance();
    double double41 = gPSSatInViewScience37.getStdDevDistance();
    double double42 = gPSSatInViewScience37.getAvgDistance();
    double double43 = gPSSatInViewScience37.getStdDevElevation();
    double double44 = gPSSatInViewScience37.getMinElevation();
    org.junit.Assert.assertTrue("'" + long1 + "' != '" + 281474993487886L + "'",
        long1.equals(281474993487886L));
    org.junit.Assert.assertNotNull(booleanArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertNotNull(booleanSpliterator6);
    org.junit.Assert.assertNotNull(byteArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertNotNull(intArray19);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intItor24);
    org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25);
    org.junit.Assert.assertTrue("'" + str26 + "' != '" + "[]" + "'", str26.equals("[]"));
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "[]" + "'", str27.equals("[]"));
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", !boolean28);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 100.0d + "'", double40 == 100.0d);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 2.81474993487888E14d + "'",
        double41 == 2.81474993487888E14d);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    org.junit.Assert.assertTrue("'" + double43 + "' != '" + 255.0d + "'", double43 == 255.0d);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 2.81475010265075E14d + "'",
        double44 == 2.81475010265075E14d);
  }

  @Test
  public void test0918() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0918");
    opssat.simulator.util.SimulatorTimer simulatorTimer2 = new opssat.simulator.util.SimulatorTimer(
        "SimulatorData", 1L);
    boolean boolean3 = simulatorTimer2.isElapsed();
    simulatorTimer2.setDuration((-10));
    simulatorTimer2.setDuration((-4));
    simulatorTimer2.setDuration(281475010265084L);
    simulatorTimer2.timeElapsed(4);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", !boolean3);
  }

  @Test
  public void test0919() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0919");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    simulatorData1.incrementMethods();
    int int9 = simulatorData1.getCounter();
    simulatorData1.setTimeFactor(38);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
  }

  @Test
  public void test0920() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0920");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    int int5 = opssat.simulator.util.DateExtraction.getDayFromDate(date4);
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap12 = opssat.simulator.util.SimulatorData
        .computeDiff(date8, date11);
    opssat.simulator.util.SimulatorHeader simulatorHeader13 = new opssat.simulator.util.SimulatorHeader(
        false, date4, date11);
    java.util.Date date14 = simulatorHeader13.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData15 = new opssat.simulator.util.SimulatorData(
        13, date14);
    simulatorData15.incrementMethods();
    int int17 = simulatorData15.getTimeFactor();
    simulatorData15.toggleSimulatorRunning();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(timeUnitMap12);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
  }

  @Test
  public void test0921() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0921");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    boolean boolean3 = doubleList1.add(100.0d);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = doubleList1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = doubleList1.getAreaVersion();
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData7 = new opssat.simulator.util.SimulatorDeviceData(
        "[]");
    java.lang.String str8 = simulatorDeviceData7.getName();
    java.util.LinkedList<opssat.simulator.util.ArgumentDescriptor> argumentDescriptorList9 = simulatorDeviceData7
        .getDataList();
    int int10 = doubleList1.lastIndexOf(simulatorDeviceData7);
    doubleList1.clear();
    java.lang.Long[] longArray15 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList16 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList16, longArray15);
    boolean boolean19 = longList16.add(281474993487885L);
    java.lang.Byte[] byteArray24 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList25 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean26 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList25, byteArray24);
    java.lang.Integer[] intArray29 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList30 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean31 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList30, intArray29);
    boolean boolean32 = byteList25.retainAll(intList30);
    java.lang.Integer[] intArray35 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList36 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean37 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList36, intArray35);
    int int39 = intList36.lastIndexOf((byte) 10);
    boolean boolean40 = intList30.removeAll(intList36);
    java.util.Spliterator<java.lang.Integer> intSpliterator41 = intList30.spliterator();
    intList30.trimToSize();
    java.lang.Object obj43 = null;
    int int44 = intList30.lastIndexOf(obj43);
    boolean boolean45 = longList16.removeAll(intList30);
    boolean boolean46 = doubleList1.removeAll(intList30);
    doubleList1.clear();
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "[]" + "'", str8.equals("[]"));
    org.junit.Assert.assertNotNull(argumentDescriptorList9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    org.junit.Assert.assertNotNull(longArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19);
    org.junit.Assert.assertNotNull(byteArray24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26);
    org.junit.Assert.assertNotNull(intArray29);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31);
    org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32);
    org.junit.Assert.assertNotNull(intArray35);
    org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37);
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(intSpliterator41);
    org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", !boolean45);
    org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", !boolean46);
  }

  @Test
  public void test0922() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0922");
    org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long2 = shortList1.getShortForm();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience11 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double12 = gPSSatInViewScience11.getMaxDistance();
    double double13 = gPSSatInViewScience11.getMaxDistance();
    double double14 = gPSSatInViewScience11.getMinElevation();
    double double15 = gPSSatInViewScience11.getAvgDistance();
    boolean boolean16 = shortList1.remove(gPSSatInViewScience11);
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265079L + "'",
        long2.equals(281475010265079L));
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 48.0d + "'", double14 == 48.0d);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
  }

  @Test
  public void test0923() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0923");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    boolean boolean24 = simulatorHeader20.isAutoStartSystem();
    int int25 = simulatorHeader20.getMinuteStartDate();
    boolean boolean26 = simulatorHeader20.isUseCelestia();
    simulatorHeader20.setOrekitTLE1("030958.944");
    boolean boolean29 = simulatorHeader20.checkStartBeforeEnd();
    java.util.Date date30 = simulatorHeader20.getEndDate();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29);
    org.junit.Assert.assertNotNull(date30);
  }

  @Test
  public void test0924() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0924");
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException(
        "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008");
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException(
        "2019:05:23 15:09:34 UTC", wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet10 = octetList7.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException12 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray13 = wavFileException12.getSuppressed();
    boolean boolean14 = octetList7.equals(wavFileException12);
    opssat.simulator.util.wav.WavFileException wavFileException16 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException12.addSuppressed(wavFileException16);
    java.lang.String str18 = wavFileException16.toString();
    wavFileException5.addSuppressed(wavFileException16);
    java.lang.String str20 = wavFileException16.toString();
    wavFileException2.addSuppressed(wavFileException16);
    opssat.simulator.util.wav.WavFileException wavFileException22 = new opssat.simulator.util.wav.WavFileException(
        wavFileException2);
    opssat.simulator.util.wav.WavFileException wavFileException25 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:010");
    opssat.simulator.util.wav.WavFileException wavFileException26 = new opssat.simulator.util.wav.WavFileException(
        "{counter=-1, methodsExecuted=1, currentTime=Thu May 23 15:09:32 UTC 2019}",
        wavFileException25);
    wavFileException22.addSuppressed(wavFileException25);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(uOctet10);
    org.junit.Assert.assertNotNull(throwableArray13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert
        .assertTrue(
            "'" + str18 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str18.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
    org.junit.Assert
        .assertTrue(
            "'" + str20 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str20.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
  }

  @Test
  public void test0925() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0925");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    java.util.Iterator<java.lang.String> strItor1 = stringList0.iterator();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = stringList0.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray9 = new float[] { 28, 8 };
    simulatorSpacecraftState6.setQ(floatArray9);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double15 = simulatorSpacecraftState14.getLatitude();
    java.lang.String str16 = simulatorSpacecraftState14.getMagField();
    float[] floatArray17 = simulatorSpacecraftState14.getR();
    simulatorSpacecraftState6.setQ(floatArray17);
    java.lang.String str19 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double24 = simulatorSpacecraftState23.getLatitude();
    double double25 = simulatorSpacecraftState23.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    float[] floatArray32 = simulatorSpacecraftState29.getR();
    simulatorSpacecraftState23.setQ(floatArray32);
    float[] floatArray34 = simulatorSpacecraftState23.getV();
    opssat.simulator.celestia.CelestiaData celestiaData35 = new opssat.simulator.celestia.CelestiaData(
        floatArray17, floatArray34);
    float[] floatArray36 = celestiaData35.getQ();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (short) 0, date41);
    celestiaData35.setDate(date41);
    int int53 = celestiaData35.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState57 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray60 = new float[] { 28, 8 };
    simulatorSpacecraftState57.setQ(floatArray60);
    celestiaData35.setQ(floatArray60);
    int int63 = stringList0.lastIndexOf(celestiaData35);
    celestiaData35
        .setDate("{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:32 UTC 2019}");
    celestiaData35.setAnx("0");
    float[] floatArray68 = celestiaData35.getRv();
    java.lang.String str69 = celestiaData35.getLos();
    org.junit.Assert.assertNotNull(strItor1);
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(floatArray9);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 340.0d + "'", double15 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str16.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "UnknownGUIData" + "'",
        str19.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 340.0d + "'", double24 == 340.0d);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertNull(str69);
  }

  @Test
  public void test0926() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0926");
    org.ccsds.moims.mo.mal.structures.UShort uShort0 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray1 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort0 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList2 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean3 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList2, uShortArray1);
    uShortList2.ensureCapacity(0);
    int int7 = uShortList2.indexOf((byte) 1);
    uShortList2.clear();
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList10 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UShort uShort11 = doubleList10.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort12 = doubleList10.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = doubleList10.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.UShort uShort14 = doubleList10.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.Element element15 = doubleList10.createElement();
    java.lang.Long long16 = doubleList10.getShortForm();
    java.util.stream.Stream<java.lang.Double> doubleStream17 = doubleList10.stream();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        8);
    java.lang.String str20 = simulatorData19.toString();
    java.lang.String str21 = simulatorData19.toString();
    java.lang.String str22 = simulatorData19.getUTCCurrentTime();
    boolean boolean23 = simulatorData19.isSimulatorRunning();
    int int24 = doubleList10.indexOf(boolean23);
    int int25 = uShortList2.indexOf(doubleList10);
    org.junit.Assert.assertNotNull(uShort0);
    org.junit.Assert.assertNotNull(uShortArray1);
    org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    org.junit.Assert.assertNotNull(uShort11);
    org.junit.Assert.assertNotNull(uShort12);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(uShort14);
    org.junit.Assert.assertNotNull(element15);
    org.junit.Assert.assertTrue("'" + long16 + "' != '" + 281475010265083L + "'",
        long16.equals(281475010265083L));
    org.junit.Assert.assertNotNull(doubleStream17);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
  }

  @Test
  public void test0927() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0927");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    java.lang.String str14 = simulatorHeader12.getOrekitTLE2();
    int int15 = simulatorHeader12.getMinuteStartDate();
    boolean boolean17 = simulatorHeader12.validateTimeFactor((-11));
    simulatorHeader12.setCelestiaPort((short) -1);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
  }

  @Test
  public void test0928() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0928");
    opssat.simulator.util.wav.WavFileException wavFileException2 = new opssat.simulator.util.wav.WavFileException(
        "byte[] {0x00,0x0F}");
    opssat.simulator.util.wav.WavFileException wavFileException4 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.Throwable[] throwableArray5 = wavFileException4.getSuppressed();
    org.ccsds.moims.mo.mal.structures.OctetList octetList6 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int7 = octetList6.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort8 = octetList6.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = octetList6.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException11 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray12 = wavFileException11.getSuppressed();
    boolean boolean13 = octetList6.equals(wavFileException11);
    opssat.simulator.util.wav.WavFileException wavFileException15 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException11.addSuppressed(wavFileException15);
    java.lang.String str17 = wavFileException15.toString();
    wavFileException4.addSuppressed(wavFileException15);
    wavFileException2.addSuppressed(wavFileException15);
    opssat.simulator.util.wav.WavFileException wavFileException20 = new opssat.simulator.util.wav.WavFileException(
        "", wavFileException15);
    org.junit.Assert.assertNotNull(throwableArray5);
    org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-7) + "'", int7.equals((-7)));
    org.junit.Assert.assertNotNull(uShort8);
    org.junit.Assert.assertNotNull(uOctet9);
    org.junit.Assert.assertNotNull(throwableArray12);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert
        .assertTrue(
            "'" + str17 + "' != '"
                + "opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008" + "'",
            str17.equals("opssat.simulator.util.wav.WavFileException: 00000:00:00:00:008"));
  }

  @Test
  public void test0929() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0929");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    boolean boolean16 = simulatorHeader12.isUseCelestia();
    int int17 = simulatorHeader12.getDayStartDate();
    simulatorHeader12.setAutoStartTime(false);
    java.lang.String str20 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(14);
    java.lang.String str23 = simulatorHeader12.DATE_FORMAT;
    java.lang.String str24 = simulatorHeader12.toFileString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", !boolean16);
    org.junit.Assert.assertNull(str20);
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str23.equals("yyyy:MM:dd HH:mm:ss z"));
  }

  @Test
  public void test0930() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0930");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    simulatorSpacecraftState3.setLongitude(13);
    java.lang.String str7 = simulatorSpacecraftState3.getMagnetometerAsString();
    simulatorSpacecraftState3.setLatitude(64.0d);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str7 + "' != '" + "X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]" + "'",
        str7.equals("X:[+00000.00] ; Y:[+00000.00] ; Z: [+00000.00] units [nT]"));
  }

  @Test
  public void test0931() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0931");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    boolean boolean15 = simulatorHeader12.isUpdateInternet();
    java.util.Date date17 = simulatorHeader12.parseStringIntoDate("030958.944");
    java.lang.String str18 = simulatorHeader12.toFileString();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNull(date17);
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:10:34 UTC\nendDate=2019:05:23 15:10:34 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO" + "'", str18.equals("#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:10:34 UTC\nendDate=2019:05:23 15:10:34 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO"));
  }

  @Test
  public void test0932() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0932");
    opssat.simulator.util.SimulatorDeviceData simulatorDeviceData1 = new opssat.simulator.util.SimulatorDeviceData(
        "0100.0000000");
    java.lang.String str2 = simulatorDeviceData1.getName();
    org.junit.Assert.assertTrue("'" + str2 + "' != '" + "0100.0000000" + "'",
        str2.equals("0100.0000000"));
  }

  @Test
  public void test0933() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0933");
    opssat.simulator.threading.SimulatorNode simulatorNode0 = null;
    opssat.simulator.peripherals.POpticalReceiver pOpticalReceiver2 = new opssat.simulator.peripherals.POpticalReceiver(
        simulatorNode0, "031008.320");
    java.lang.String str3 = pOpticalReceiver2.getName();
    try {
      byte[] byteArray5 = pOpticalReceiver2.readFromMessageBuffer((byte) 0);
      org.junit.Assert
          .fail("Expected exception of type java.lang.NullPointerException; message: null");
    } catch (java.lang.NullPointerException e) {
    }
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "031008.320" + "'",
        str3.equals("031008.320"));
  }

  @Test
  public void test0934() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0934");
    opssat.simulator.util.wav.WavFileException wavFileException3 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray4 = wavFileException3.getSuppressed();
    opssat.simulator.util.wav.WavFileException wavFileException6 = new opssat.simulator.util.wav.WavFileException(
        "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}");
    opssat.simulator.util.wav.WavFileException wavFileException7 = new opssat.simulator.util.wav.WavFileException();
    org.ccsds.moims.mo.mal.structures.OctetList octetList8 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int9 = octetList8.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort10 = octetList8.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = octetList8.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException13 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray14 = wavFileException13.getSuppressed();
    boolean boolean15 = octetList8.equals(wavFileException13);
    wavFileException7.addSuppressed(wavFileException13);
    wavFileException6.addSuppressed(wavFileException13);
    opssat.simulator.util.wav.WavFileException wavFileException18 = new opssat.simulator.util.wav.WavFileException(
        wavFileException13);
    opssat.simulator.util.wav.WavFileException wavFileException20 = new opssat.simulator.util.wav.WavFileException(
        "00000:00:00:00:008");
    wavFileException13.addSuppressed(wavFileException20);
    opssat.simulator.util.wav.WavFileException wavFileException23 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    opssat.simulator.util.wav.WavFileException wavFileException24 = new opssat.simulator.util.wav.WavFileException(
        wavFileException23);
    wavFileException13.addSuppressed(wavFileException23);
    wavFileException3.addSuppressed(wavFileException13);
    opssat.simulator.util.wav.WavFileException wavFileException27 = new opssat.simulator.util.wav.WavFileException(
        "0900.0000", wavFileException3);
    opssat.simulator.util.wav.WavFileException wavFileException28 = new opssat.simulator.util.wav.WavFileException(
        "2019:05:23 15:10:25 UTC", wavFileException27);
    org.junit.Assert.assertNotNull(throwableArray4);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-7) + "'", int9.equals((-7)));
    org.junit.Assert.assertNotNull(uShort10);
    org.junit.Assert.assertNotNull(uOctet11);
    org.junit.Assert.assertNotNull(throwableArray14);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
  }

  @Test
  public void test0935() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0935");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    simulatorData3.toggleSimulatorRunning();
    simulatorData3.setTimeFactor(41);
    endlessWavStreamOperatingBuffer1.setDataBuffer(41);
    endlessWavStreamOperatingBuffer1.setOperatingIndex((byte) 100);
    java.util.logging.Logger logger12 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer13 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger12);
    byte[] byteArray15 = endlessSingleStreamOperatingBuffer13.getDataAsByteArray('4');
    byte[] byteArray17 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer13.setDataFromByteArray(byteArray17);
    int int19 = endlessSingleStreamOperatingBuffer13.getOperatingIndex();
    byte[] byteArray21 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int2ByteArray(' ');
    endlessSingleStreamOperatingBuffer13.setDataFromByteArray(byteArray21);
    endlessWavStreamOperatingBuffer1.setDataFromByteArray(byteArray21);
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(byteArray15);
    org.junit.Assert.assertNotNull(byteArray17);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    org.junit.Assert.assertNotNull(byteArray21);
  }

  @Test
  public void test0936() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0936");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    double double5 = simulatorSpacecraftState3.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState9 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray12 = new float[] { 28, 8 };
    simulatorSpacecraftState9.setQ(floatArray12);
    int int14 = simulatorSpacecraftState9.getSatsInView();
    simulatorSpacecraftState9.setAltitude((-5));
    double[] doubleArray17 = simulatorSpacecraftState9.getSunVector();
    simulatorSpacecraftState3.setMagField(doubleArray17);
    double double19 = simulatorSpacecraftState3.getLongitude();
    float[] floatArray20 = simulatorSpacecraftState3.getMagnetometer();
    org.ccsds.moims.mo.mal.structures.FineTime fineTime22 = new org.ccsds.moims.mo.mal.structures.FineTime(
        0L);
    org.ccsds.moims.mo.mal.structures.UShort uShort23 = fineTime22.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet24 = fineTime22.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState28 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray31 = new float[] { 28, 8 };
    simulatorSpacecraftState28.setQ(floatArray31);
    int int33 = simulatorSpacecraftState28.getSatsInView();
    simulatorSpacecraftState28.setAltitude((-5));
    float[] floatArray36 = simulatorSpacecraftState28.getV();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState40 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double41 = simulatorSpacecraftState40.getLatitude();
    java.lang.String str42 = simulatorSpacecraftState40.getMagField();
    java.lang.String str43 = simulatorSpacecraftState40.getSunVectorAsString();
    simulatorSpacecraftState40.setSatsInView(13);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState49 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double50 = simulatorSpacecraftState49.getLatitude();
    java.lang.String str51 = simulatorSpacecraftState49.getMagField();
    float[] floatArray52 = simulatorSpacecraftState49.getR();
    simulatorSpacecraftState40.setRv(floatArray52);
    simulatorSpacecraftState28.setQ(floatArray52);
    java.lang.String str55 = simulatorSpacecraftState28.getMagField();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState59 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray62 = new float[] { 28, 8 };
    simulatorSpacecraftState59.setQ(floatArray62);
    float[] floatArray67 = new float[] { 281474993487887L, 281475010265070L, 281474993487881L };
    simulatorSpacecraftState59.setRv(floatArray67);
    double[][] doubleArray69 = null;
    simulatorSpacecraftState59.setRotation(doubleArray69);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState74 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double75 = simulatorSpacecraftState74.getLatitude();
    double double76 = simulatorSpacecraftState74.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState80 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray83 = new float[] { 28, 8 };
    simulatorSpacecraftState80.setQ(floatArray83);
    int int85 = simulatorSpacecraftState80.getSatsInView();
    simulatorSpacecraftState80.setAltitude((-5));
    double[] doubleArray88 = simulatorSpacecraftState80.getSunVector();
    simulatorSpacecraftState74.setMagField(doubleArray88);
    simulatorSpacecraftState59.setSunVector(doubleArray88);
    simulatorSpacecraftState28.setMagnetometer(doubleArray88);
    float[] floatArray92 = simulatorSpacecraftState28.getMagnetometer();
    boolean boolean93 = fineTime22.equals(floatArray92);
    simulatorSpacecraftState3.setRv(floatArray92);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + double5 + "' != '" + (-1.0d) + "'", double5 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray12);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    org.junit.Assert.assertNotNull(doubleArray17);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray20);
    org.junit.Assert.assertNotNull(uShort23);
    org.junit.Assert.assertNotNull(uOctet24);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 340.0d + "'", double41 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str42 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str42.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str43 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str43.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double50 + "' != '" + 340.0d + "'", double50 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str51 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str51.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray52);
    org.junit.Assert.assertTrue(
        "'" + str55 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str55.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray62);
    org.junit.Assert.assertNotNull(floatArray67);
    org.junit.Assert.assertTrue("'" + double75 + "' != '" + 340.0d + "'", double75 == 340.0d);
    org.junit.Assert.assertTrue("'" + double76 + "' != '" + (-1.0d) + "'", double76 == (-1.0d));
    org.junit.Assert.assertNotNull(floatArray83);
    org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    org.junit.Assert.assertNotNull(doubleArray88);
    org.junit.Assert.assertNotNull(floatArray92);
    org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", !boolean93);
  }

  @Test
  public void test0939() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0939");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        100L, 281474993487886L, (byte) 0);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState7 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double8 = simulatorSpacecraftState7.getLatitude();
    double double9 = simulatorSpacecraftState7.getLongitude();
    java.lang.String str10 = simulatorSpacecraftState7.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState14.setLongitude(4);
    double[] doubleArray18 = new double[] { (-1.0f) };
    simulatorSpacecraftState14.setMagField(doubleArray18);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double24 = simulatorSpacecraftState23.getLatitude();
    java.lang.String str25 = simulatorSpacecraftState23.getMagField();
    java.lang.String str26 = simulatorSpacecraftState23.toString();
    double[] doubleArray27 = simulatorSpacecraftState23.getSunVector();
    simulatorSpacecraftState14.setMagnetometer(doubleArray27);
    simulatorSpacecraftState7.setMagField(doubleArray27);
    simulatorSpacecraftState7.setModeOperation("0");
    simulatorSpacecraftState7.setModeOperation("030936.762");
    simulatorSpacecraftState7.setAltitude(60);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState39 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double40 = simulatorSpacecraftState39.getLatitude();
    java.lang.String str41 = simulatorSpacecraftState39.getMagField();
    float[] floatArray42 = simulatorSpacecraftState39.getR();
    simulatorSpacecraftState7.setQ(floatArray42);
    simulatorSpacecraftState3.setRv(floatArray42);
    simulatorSpacecraftState3.setModeOperation("[]");
    java.lang.String str47 = simulatorSpacecraftState3.getRotationAsString();
    org.junit.Assert.assertTrue("'" + double8 + "' != '" + 340.0d + "'", double8 == 340.0d);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertNull(str10);
    org.junit.Assert.assertNotNull(doubleArray18);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 340.0d + "'", double24 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str25 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str25.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str26 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str26.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray27);
    org.junit.Assert.assertTrue("'" + double40 + "' != '" + 340.0d + "'", double40 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str41 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str41.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertTrue("'" + str47 + "' != '"
        + "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"
        + "'",
        str47.equals(
            "\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000\n+0.000000 +0.000000 +0.000000"));
  }

  @Test
  public void test0940() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0940");
    org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(
        36);
    org.ccsds.moims.mo.mal.structures.Element element2 = booleanList1.createElement();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = booleanList1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort4 = booleanList1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.IntegerList integerList5 = new org.ccsds.moims.mo.mal.structures.IntegerList();
    java.lang.Integer int6 = integerList5.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet7 = integerList5.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet8 = integerList5.getAreaVersion();
    java.lang.Short[] shortArray11 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList12 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean13 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList12, shortArray11);
    shortList12.clear();
    boolean boolean15 = shortList12.isEmpty();
    boolean boolean17 = shortList12.equals(5);
    java.lang.String str18 = shortList12.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    java.lang.String str25 = simulatorSpacecraftState22.getSunVectorAsString();
    boolean boolean26 = shortList12.contains(str25);
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray28 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort27 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList29 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean30 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList29,
        uShortArray28);
    uShortList29.ensureCapacity(0);
    int int34 = uShortList29.indexOf((byte) 1);
    uShortList29.clear();
    java.lang.Long[] longArray38 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList39 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean40 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList39, longArray38);
    java.lang.Object obj41 = longList39.clone();
    int int42 = uShortList29.lastIndexOf(obj41);
    java.lang.Byte[] byteArray47 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList48 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean49 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList48, byteArray47);
    java.lang.Integer[] intArray52 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList53 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean54 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList53, intArray52);
    boolean boolean55 = byteList48.retainAll(intList53);
    java.lang.Integer[] intArray58 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList59 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean60 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
    int int62 = intList59.lastIndexOf((byte) 10);
    boolean boolean63 = intList53.retainAll(intList59);
    java.lang.Object obj64 = intList53.clone();
    boolean boolean65 = uShortList29.removeAll(intList53);
    boolean boolean66 = shortList12.removeAll(intList53);
    java.lang.Object obj67 = intList53.clone();
    boolean boolean68 = integerList5.retainAll(intList53);
    boolean boolean69 = booleanList1.remove(intList53);
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(uShort4);
    org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-11) + "'", int6.equals((-11)));
    org.junit.Assert.assertNotNull(uOctet7);
    org.junit.Assert.assertNotNull(uOctet8);
    org.junit.Assert.assertNotNull(shortArray11);
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertTrue("'" + str18 + "' != '" + "[]" + "'", str18.equals("[]"));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str25 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str25.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", !boolean26);
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertNotNull(uShortArray28);
    org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30);
    org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    org.junit.Assert.assertNotNull(longArray38);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40);
    org.junit.Assert.assertNotNull(obj41);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    org.junit.Assert.assertNotNull(byteArray47);
    org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49);
    org.junit.Assert.assertNotNull(intArray52);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55);
    org.junit.Assert.assertNotNull(intArray58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertNotNull(obj64);
    org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", !boolean65);
    org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", !boolean66);
    org.junit.Assert.assertNotNull(obj67);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", !boolean68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", !boolean69);
  }

  @Test
  public void test0941() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0941");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.lang.String str13 = simulatorHeader12.getEndDateString();
    java.lang.String str14 = simulatorHeader12.getOrekitTLE2();
    java.lang.String str15 = simulatorHeader12.getKeplerElements();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE2();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNull(str14);
    org.junit.Assert.assertNull(str15);
    org.junit.Assert.assertNull(str16);
  }

  @Test
  public void test0943() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0943");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = octetList0.getAreaNumber();
    java.lang.Long[] longArray14 = new java.lang.Long[] { 281474993487875L, 281474993487875L,
        281474993487875L, 281474993487888L, 281475010265070L, 4294967295L, 281474993487878L };
    java.util.ArrayList<java.lang.Long> longList15 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean16 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList15, longArray14);
    boolean boolean18 = longList15.add(281475010265070L);
    java.lang.Boolean[] booleanArray21 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList22 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean23 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList22, booleanArray21);
    int int25 = booleanList22.indexOf(10);
    int int26 = longList15.indexOf(booleanList22);
    java.util.stream.Stream<java.lang.Boolean> booleanStream27 = booleanList22.parallelStream();
    org.ccsds.moims.mo.mal.structures.StringList stringList29 = new org.ccsds.moims.mo.mal.structures.StringList(
        36);
    org.ccsds.moims.mo.mal.structures.StringList stringList30 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList32 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor33 = shortList32.listIterator();
    boolean boolean34 = stringList30.equals(shortList32);
    org.ccsds.moims.mo.mal.structures.UShort uShort35 = shortList32.getAreaNumber();
    java.lang.Integer int36 = uShort35.getTypeShortForm();
    int int37 = stringList29.indexOf(int36);
    int int38 = stringList29.size();
    org.ccsds.moims.mo.mal.structures.UShort uShort39 = stringList29.getServiceNumber();
    boolean boolean40 = booleanList22.remove(uShort39);
    org.ccsds.moims.mo.mal.structures.ShortList shortList42 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long43 = shortList42.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream44 = shortList42.stream();
    org.ccsds.moims.mo.mal.structures.UShort uShort45 = shortList42.getAreaNumber();
    java.util.stream.Stream<java.lang.Short> shortStream46 = shortList42.stream();
    java.lang.Integer[] intArray54 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList55 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean56 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList55, intArray54);
    java.lang.Byte[] byteArray61 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList62 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean63 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList62, byteArray61);
    java.lang.Integer[] intArray66 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList67 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean68 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList67, intArray66);
    boolean boolean69 = byteList62.retainAll(intList67);
    java.lang.Integer[] intArray72 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList73 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean74 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList73, intArray72);
    int int76 = intList73.lastIndexOf((byte) 10);
    boolean boolean77 = intList67.removeAll(intList73);
    boolean boolean78 = intList55.retainAll(intList73);
    java.util.stream.Stream<java.lang.Integer> intStream79 = intList73.stream();
    java.lang.Integer int81 = intList73.remove(0);
    boolean boolean82 = shortList42.containsAll(intList73);
    boolean boolean83 = uShort39.equals(intList73);
    int int84 = octetList0.indexOf(boolean83);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(longArray14);
    org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertNotNull(booleanArray21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23);
    org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    org.junit.Assert.assertNotNull(booleanStream27);
    org.junit.Assert.assertNotNull(shortItor33);
    org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34);
    org.junit.Assert.assertNotNull(uShort35);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36.equals(10));
    org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
    org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    org.junit.Assert.assertNotNull(uShort39);
    org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", !boolean40);
    org.junit.Assert.assertTrue("'" + long43 + "' != '" + 281475010265079L + "'",
        long43.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream44);
    org.junit.Assert.assertNotNull(uShort45);
    org.junit.Assert.assertNotNull(shortStream46);
    org.junit.Assert.assertNotNull(intArray54);
    org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56);
    org.junit.Assert.assertNotNull(byteArray61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertNotNull(intArray66);
    org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertNotNull(intArray72);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
    org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
    org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78);
    org.junit.Assert.assertNotNull(intStream79);
    org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81.equals(0));
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", !boolean82);
    org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", !boolean83);
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
  }

  @Test
  public void test0944() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0944");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    boolean boolean15 = floatList9.add((-1.0f));
    java.util.stream.Stream<java.lang.Float> floatStream16 = floatList9.parallelStream();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15);
    org.junit.Assert.assertNotNull(floatStream16);
  }

  @Test
  public void test0945() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0945");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    int int36 = opssat.simulator.util.DateExtraction.getMonthFromDate(date19);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
  }

  @Test
  public void test0946() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0946");
    opssat.simulator.util.ArgumentTemplate argumentTemplate2 = new opssat.simulator.util.ArgumentTemplate(
        "*76", "13");
    java.lang.String str3 = argumentTemplate2.toString();
    java.lang.String str4 = argumentTemplate2.getArgContent();
    java.lang.String str5 = argumentTemplate2.getDescription();
    java.lang.String str6 = argumentTemplate2.getDescription();
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "*76|13" + "'", str3.equals("*76|13"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "13" + "'", str4.equals("13"));
    org.junit.Assert.assertTrue("'" + str5 + "' != '" + "*76" + "'", str5.equals("*76"));
    org.junit.Assert.assertTrue("'" + str6 + "' != '" + "*76" + "'", str6.equals("*76"));
  }

  @Test
  public void test0947() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0947");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState8 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray11 = new float[] { 28, 8 };
    simulatorSpacecraftState8.setQ(floatArray11);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState16 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double17 = simulatorSpacecraftState16.getLatitude();
    java.lang.String str18 = simulatorSpacecraftState16.getMagField();
    float[] floatArray19 = simulatorSpacecraftState16.getR();
    simulatorSpacecraftState8.setQ(floatArray19);
    java.lang.String str21 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray19);
    simulatorSpacecraftState3.setRv(floatArray19);
    simulatorSpacecraftState3.setLatitude(281474993487885L);
    double[] doubleArray25 = simulatorSpacecraftState3.getSunVector();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertNotNull(floatArray11);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 340.0d + "'", double17 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str18 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str18.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray19);
    org.junit.Assert.assertTrue("'" + str21 + "' != '" + "UnknownGUIData" + "'",
        str21.equals("UnknownGUIData"));
    org.junit.Assert.assertNotNull(doubleArray25);
  }

  @Test
  public void test0948() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0948");
    org.ccsds.moims.mo.mal.structures.URI uRI1 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int2 = uRI1.getTypeShortForm();
    java.lang.String str3 = uRI1.toString();
    java.lang.String str4 = uRI1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uRI1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList7 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long8 = shortList7.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream9 = shortList7.stream();
    boolean boolean10 = uOctet5.equals(shortList7);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray17 = new float[] { 28, 8 };
    simulatorSpacecraftState14.setQ(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    java.lang.String str24 = simulatorSpacecraftState22.getMagField();
    float[] floatArray25 = simulatorSpacecraftState22.getR();
    simulatorSpacecraftState14.setQ(floatArray25);
    java.lang.String str27 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray25);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    double double33 = simulatorSpacecraftState31.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState37 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double38 = simulatorSpacecraftState37.getLatitude();
    java.lang.String str39 = simulatorSpacecraftState37.getMagField();
    float[] floatArray40 = simulatorSpacecraftState37.getR();
    simulatorSpacecraftState31.setQ(floatArray40);
    float[] floatArray42 = simulatorSpacecraftState31.getV();
    opssat.simulator.celestia.CelestiaData celestiaData43 = new opssat.simulator.celestia.CelestiaData(
        floatArray25, floatArray42);
    float[] floatArray44 = celestiaData43.getQ();
    opssat.simulator.util.SimulatorData simulatorData48 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date49 = simulatorData48.getCurrentTime();
    int int50 = opssat.simulator.util.DateExtraction.getDayFromDate(date49);
    opssat.simulator.util.SimulatorData simulatorData52 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date53 = simulatorData52.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData55 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date56 = simulatorData55.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap57 = opssat.simulator.util.SimulatorData
        .computeDiff(date53, date56);
    opssat.simulator.util.SimulatorHeader simulatorHeader58 = new opssat.simulator.util.SimulatorHeader(
        false, date49, date56);
    opssat.simulator.util.SimulatorData simulatorData59 = new opssat.simulator.util.SimulatorData(
        (short) 0, date49);
    celestiaData43.setDate(date49);
    int int61 = celestiaData43.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState65 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray68 = new float[] { 28, 8 };
    simulatorSpacecraftState65.setQ(floatArray68);
    celestiaData43.setQ(floatArray68);
    boolean boolean71 = shortList7.contains(celestiaData43);
    int int72 = celestiaData43.getDays();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + 18 + "'", int2.equals(18));
    org.junit.Assert.assertTrue("'" + str3 + "' != '" + "0100.0000" + "'",
        str3.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "0100.0000" + "'",
        str4.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertTrue("'" + long8 + "' != '" + 281475010265079L + "'",
        long8.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream9);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str24 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str24.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray25);
    org.junit.Assert.assertTrue("'" + str27 + "' != '" + "UnknownGUIData" + "'",
        str27.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue("'" + double33 + "' != '" + 340.0d + "'", double33 == 340.0d);
    org.junit.Assert.assertTrue("'" + double38 + "' != '" + 340.0d + "'", double38 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str39 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str39.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray40);
    org.junit.Assert.assertNotNull(floatArray42);
    org.junit.Assert.assertNotNull(floatArray44);
    org.junit.Assert.assertNotNull(date49);
    org.junit.Assert.assertNotNull(date53);
    org.junit.Assert.assertNotNull(date56);
    org.junit.Assert.assertNotNull(timeUnitMap57);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", !boolean71);
  }

  @Test
  public void test0950() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0950");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    byte[] byteArray9 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int2ByteArray((-30));
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray9);
    try {
      float float12 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS
          .getFloatFromByteArray(byteArray9, 65535);
      org.junit.Assert
          .fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: null");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertNotNull(byteArray9);
  }

  @Test
  public void test0951() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0951");
    java.lang.Long[] longArray6 = new java.lang.Long[] { 281475010265070L, 100L, 0L,
        281475010265070L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList7 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean8 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList7, longArray6);
    boolean boolean9 = longList7.isEmpty();
    java.lang.Object obj10 = longList7.clone();
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    int int15 = opssat.simulator.util.DateExtraction.getDayFromDate(date14);
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date21 = simulatorData20.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap22 = opssat.simulator.util.SimulatorData
        .computeDiff(date18, date21);
    opssat.simulator.util.SimulatorHeader simulatorHeader23 = new opssat.simulator.util.SimulatorHeader(
        false, date14, date21);
    boolean boolean24 = longList7.remove(date21);
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date21);
    org.junit.Assert.assertNotNull(longArray6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8);
    org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", !boolean9);
    org.junit.Assert.assertNotNull(obj10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date21);
    org.junit.Assert.assertNotNull(timeUnitMap22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
  }

  @Test
  public void test0953() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0953");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        12, 11, "-100.0000");
    java.lang.String str4 = simulatorSchedulerPiece3.getArgumentTemplateDescription();
    org.junit.Assert.assertTrue("'" + str4 + "' != '" + "-100.0000" + "'",
        str4.equals("-100.0000"));
  }

  @Test
  public void test0954() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0954");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList3 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int4 = octetList3.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort5 = octetList3.getAreaNumber();
    java.lang.Object[] objArray6 = octetList3.toArray();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    org.ccsds.moims.mo.mal.structures.UShort uShort13 = octetList7.getAreaNumber();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    java.util.Spliterator<java.lang.Boolean> booleanSpliterator22 = booleanList17.spliterator();
    org.ccsds.moims.mo.mal.structures.OctetList octetList23 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int24 = octetList23.getTypeShortForm();
    java.lang.Object obj25 = octetList23.clone();
    octetList23.trimToSize();
    boolean boolean27 = booleanList17.contains(octetList23);
    org.ccsds.moims.mo.mal.structures.OctetList octetList28 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int29 = octetList28.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort30 = octetList28.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList31 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int32 = octetList31.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort33 = octetList31.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet34 = octetList31.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.OctetList octetList35 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int36 = octetList35.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort37 = octetList35.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray38 = new org.ccsds.moims.mo.mal.structures.OctetList[] {
        octetList3, octetList7, octetList23, octetList28, octetList31, octetList35 };
    org.ccsds.moims.mo.mal.structures.OctetList[] octetListArray39 = octetList0
        .toArray(octetListArray38);
    org.ccsds.moims.mo.mal.structures.URI uRI41 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int42 = uRI41.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.URI uRI44 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.UOctet uOctet45 = uRI44.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.URI uRI47 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    org.ccsds.moims.mo.mal.structures.URI[] uRIArray48 = new org.ccsds.moims.mo.mal.structures.URI[] {
        uRI41, uRI44, uRI47 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI> uRIList49 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.URI>();
    boolean boolean50 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.URI>) uRIList49, uRIArray48);
    org.ccsds.moims.mo.mal.structures.FineTime fineTime51 = new org.ccsds.moims.mo.mal.structures.FineTime();
    int int52 = uRIList49.indexOf(fineTime51);
    uRIList49.ensureCapacity(40);
    boolean boolean55 = uRIList49.isEmpty();
    java.lang.String str56 = uRIList49.toString();
    java.lang.Object obj57 = uRIList49.clone();
    org.ccsds.moims.mo.mal.structures.LongList longList58 = new org.ccsds.moims.mo.mal.structures.LongList();
    java.util.ListIterator<java.lang.Long> longItor59 = longList58.listIterator();
    boolean boolean60 = uRIList49.equals(longList58);
    java.lang.Long long61 = longList58.getShortForm();
    java.lang.Object[] objArray62 = longList58.toArray();
    java.util.ListIterator<java.lang.Long> longItor63 = longList58.listIterator();
    java.util.ListIterator<java.lang.Long> longItor64 = longList58.listIterator();
    java.lang.Long[] longArray67 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList68 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean69 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList68, longArray67);
    java.lang.Object obj70 = longList68.clone();
    java.util.ListIterator<java.lang.Long> longItor72 = longList68.listIterator((byte) 1);
    org.ccsds.moims.mo.mal.structures.LongList longList73 = new org.ccsds.moims.mo.mal.structures.LongList();
    java.lang.Integer int74 = longList73.getTypeShortForm();
    java.util.stream.Stream<java.lang.Long> longStream75 = longList73.parallelStream();
    java.util.ListIterator<java.lang.Long> longItor76 = longList73.listIterator();
    java.util.ListIterator[] listIteratorArray78 = new java.util.ListIterator[3];
    @SuppressWarnings("unchecked")
    java.util.ListIterator<java.lang.Long>[] longItorArray79 = listIteratorArray78;
    longItorArray79[0] = longItor64;
    longItorArray79[1] = longItor72;
    longItorArray79[2] = longItor76;
    java.util.ListIterator<java.lang.Long>[] longItorArray86 = octetList0.toArray(longItorArray79);
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-7) + "'", int4.equals((-7)));
    org.junit.Assert.assertNotNull(uShort5);
    org.junit.Assert.assertNotNull(objArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertNotNull(uShort13);
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertNotNull(booleanSpliterator22);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-7) + "'", int24.equals((-7)));
    org.junit.Assert.assertNotNull(obj25);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-7) + "'", int29.equals((-7)));
    org.junit.Assert.assertNotNull(uShort30);
    org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-7) + "'", int32.equals((-7)));
    org.junit.Assert.assertNotNull(uShort33);
    org.junit.Assert.assertNotNull(uOctet34);
    org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-7) + "'", int36.equals((-7)));
    org.junit.Assert.assertNotNull(uShort37);
    org.junit.Assert.assertNotNull(octetListArray38);
    org.junit.Assert.assertNotNull(octetListArray39);
    org.junit.Assert.assertTrue("'" + int42 + "' != '" + 18 + "'", int42.equals(18));
    org.junit.Assert.assertNotNull(uOctet45);
    org.junit.Assert.assertNotNull(uRIArray48);
    org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50);
    org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    org.junit.Assert.assertTrue("'" + str56 + "' != '" + "[0100.0000, 0100.0000, 0100.0000]" + "'",
        str56.equals("[0100.0000, 0100.0000, 0100.0000]"));
    org.junit.Assert.assertNotNull(obj57);
    org.junit.Assert.assertNotNull(longItor59);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", !boolean60);
    org.junit.Assert.assertTrue("'" + long61 + "' != '" + 281475010265075L + "'",
        long61.equals(281475010265075L));
    org.junit.Assert.assertNotNull(objArray62);
    org.junit.Assert.assertNotNull(longItor63);
    org.junit.Assert.assertNotNull(longItor64);
    org.junit.Assert.assertNotNull(longArray67);
    org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69);
    org.junit.Assert.assertNotNull(obj70);
    org.junit.Assert.assertNotNull(longItor72);
    org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-13) + "'", int74.equals((-13)));
    org.junit.Assert.assertNotNull(longStream75);
    org.junit.Assert.assertNotNull(longItor76);
    org.junit.Assert.assertNotNull(listIteratorArray78);
    org.junit.Assert.assertNotNull(longItorArray79);
    org.junit.Assert.assertNotNull(longItorArray86);
  }

  @Test
  public void test0955() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0955");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor3 = octetList0.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor5 = new opssat.simulator.util.ArgumentDescriptor(
        octetList0, "hi!");
    argumentDescriptor5.restoreArgument();
    argumentDescriptor5.restoreArgument();
    java.lang.Object obj8 = argumentDescriptor5.getType();
    java.lang.Object obj9 = argumentDescriptor5.getType();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(byteItor3);
    org.junit.Assert.assertNotNull(obj8);
    org.junit.Assert.assertNotNull(obj9);
  }

  @Test
  public void test0956() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0956");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long2 = simulatorData1.getCurrentTimeMillis();
    java.lang.String str3 = simulatorData1.getCurrentDay();
    java.lang.String str4 = simulatorData1.getUTCCurrentTime2();
    java.lang.String str5 = simulatorData1.getCurrentDay();
    boolean boolean6 = simulatorData1.isSimulatorRunning();
    simulatorData1.toggleTimeRunning();
    java.lang.String str8 = simulatorData1.getUTCCurrentTime2();
    int int9 = simulatorData1.getTimeFactor();
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
  }

  @Test
  public void test0957() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0957");
    java.lang.Short[] shortArray2 = new java.lang.Short[] { (short) 1, (short) 1 };
    java.util.ArrayList<java.lang.Short> shortList3 = new java.util.ArrayList<java.lang.Short>();
    boolean boolean4 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Short>) shortList3, shortArray2);
    shortList3.clear();
    boolean boolean6 = shortList3.isEmpty();
    boolean boolean8 = shortList3.equals(5);
    java.lang.String str9 = shortList3.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState13 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double14 = simulatorSpacecraftState13.getLatitude();
    java.lang.String str15 = simulatorSpacecraftState13.getMagField();
    java.lang.String str16 = simulatorSpacecraftState13.getSunVectorAsString();
    boolean boolean17 = shortList3.contains(str16);
    boolean boolean19 = shortList3.equals("0309");
    try {
      java.util.List<java.lang.Short> shortList22 = shortList3.subList((-2), (-18));
      org.junit.Assert.fail(
          "Expected exception of type java.lang.IndexOutOfBoundsException; message: fromIndex = -2");
    } catch (java.lang.IndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(shortArray2);
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertTrue("'" + str9 + "' != '" + "[]" + "'", str9.equals("[]"));
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 340.0d + "'", double14 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str15.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str16.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", !boolean17);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
  }

  @Test
  public void test0960() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0960");
    org.ccsds.moims.mo.mal.structures.ShortList shortList1 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long2 = shortList1.getShortForm();
    boolean boolean4 = shortList1.equals(6);
    java.lang.Long long5 = shortList1.getShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = shortList1.getServiceNumber();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState10 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray13 = new float[] { 28, 8 };
    simulatorSpacecraftState10.setQ(floatArray13);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState18 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double19 = simulatorSpacecraftState18.getLatitude();
    java.lang.String str20 = simulatorSpacecraftState18.getMagField();
    float[] floatArray21 = simulatorSpacecraftState18.getR();
    simulatorSpacecraftState10.setQ(floatArray21);
    java.lang.String str23 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray21);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    double double29 = simulatorSpacecraftState27.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState33 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double34 = simulatorSpacecraftState33.getLatitude();
    java.lang.String str35 = simulatorSpacecraftState33.getMagField();
    float[] floatArray36 = simulatorSpacecraftState33.getR();
    simulatorSpacecraftState27.setQ(floatArray36);
    float[] floatArray38 = simulatorSpacecraftState27.getV();
    opssat.simulator.celestia.CelestiaData celestiaData39 = new opssat.simulator.celestia.CelestiaData(
        floatArray21, floatArray38);
    java.lang.String str40 = celestiaData39.getInfo();
    java.lang.String str41 = celestiaData39.getAnx();
    celestiaData39.setDnx("Unknown data type [java.lang.String]");
    boolean boolean44 = shortList1.contains("Unknown data type [java.lang.String]");
    org.junit.Assert.assertTrue("'" + long2 + "' != '" + 281475010265079L + "'",
        long2.equals(281475010265079L));
    org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", !boolean4);
    org.junit.Assert.assertTrue("'" + long5 + "' != '" + 281475010265079L + "'",
        long5.equals(281475010265079L));
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertNotNull(floatArray13);
    org.junit.Assert.assertTrue("'" + double19 + "' != '" + 340.0d + "'", double19 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str20 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str20.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray21);
    org.junit.Assert.assertTrue("'" + str23 + "' != '" + "UnknownGUIData" + "'",
        str23.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + 340.0d + "'", double29 == 340.0d);
    org.junit.Assert.assertTrue("'" + double34 + "' != '" + 340.0d + "'", double34 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str35 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str35.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertNotNull(floatArray38);
    org.junit.Assert.assertNull(str40);
    org.junit.Assert.assertNull(str41);
    org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", !boolean44);
  }

  @Test
  public void test0961() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0961");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setOrekitPropagator("Alive");
    simulatorHeader12.setUpdateInternet(true);
    boolean boolean23 = simulatorHeader12.isAutoStartTime();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
  }

  @Test
  public void test0963() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0963");
    org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int2 = floatList1.getTypeShortForm();
    floatList1.trimToSize();
    org.ccsds.moims.mo.mal.structures.StringList stringList5 = new org.ccsds.moims.mo.mal.structures.StringList(
        36);
    java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean12 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
    java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
    boolean boolean18 = byteList11.retainAll(intList16);
    int int19 = stringList5.indexOf(intList16);
    boolean boolean21 = intList16.add(24);
    boolean boolean22 = floatList1.retainAll(intList16);
    java.lang.Object obj23 = null;
    boolean boolean24 = floatList1.contains(obj23);
    org.ccsds.moims.mo.mal.structures.OctetList octetList25 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int26 = octetList25.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort27 = octetList25.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor28 = octetList25.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor30 = new opssat.simulator.util.ArgumentDescriptor(
        octetList25, "hi!");
    java.lang.Object obj31 = argumentDescriptor30.getType();
    java.lang.Double[] doubleArray36 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList37 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean38 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList37, doubleArray36);
    org.ccsds.moims.mo.mal.structures.UShort uShort39 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray40 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort39 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList41 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean42 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList41,
        uShortArray40);
    uShortList41.ensureCapacity(0);
    int int46 = uShortList41.indexOf((byte) 1);
    uShortList41.clear();
    java.lang.Long[] longArray50 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList51 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean52 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList51, longArray50);
    java.lang.Object obj53 = longList51.clone();
    boolean boolean54 = uShortList41.contains(longList51);
    boolean boolean55 = doubleList37.equals(boolean54);
    java.lang.Integer[] intArray58 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList59 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean60 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList59, intArray58);
    int int62 = intList59.lastIndexOf((byte) 10);
    boolean boolean63 = doubleList37.removeAll(intList59);
    java.util.stream.Stream<java.lang.Double> doubleStream64 = doubleList37.stream();
    java.lang.Byte[] byteArray69 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList70 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean71 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList70, byteArray69);
    java.lang.Integer[] intArray74 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList75 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean76 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList75, intArray74);
    boolean boolean77 = byteList70.retainAll(intList75);
    java.lang.Integer[] intArray80 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList81 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean82 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList81, intArray80);
    int int84 = intList81.lastIndexOf((byte) 10);
    boolean boolean85 = intList75.removeAll(intList81);
    java.util.Spliterator<java.lang.Integer> intSpliterator86 = intList75.spliterator();
    boolean boolean87 = doubleList37.retainAll(intList75);
    argumentDescriptor30.setType(boolean87);
    int int89 = floatList1.indexOf(argumentDescriptor30);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
    org.junit.Assert.assertNotNull(byteArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertNotNull(intArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-7) + "'", int26.equals((-7)));
    org.junit.Assert.assertNotNull(uShort27);
    org.junit.Assert.assertNotNull(byteItor28);
    org.junit.Assert.assertNotNull(obj31);
    org.junit.Assert.assertNotNull(doubleArray36);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertNotNull(uShort39);
    org.junit.Assert.assertNotNull(uShortArray40);
    org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42);
    org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    org.junit.Assert.assertNotNull(longArray50);
    org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52);
    org.junit.Assert.assertNotNull(obj53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", !boolean54);
    org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", !boolean55);
    org.junit.Assert.assertNotNull(intArray58);
    org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60);
    org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", !boolean63);
    org.junit.Assert.assertNotNull(doubleStream64);
    org.junit.Assert.assertNotNull(byteArray69);
    org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71);
    org.junit.Assert.assertNotNull(intArray74);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76);
    org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77);
    org.junit.Assert.assertNotNull(intArray80);
    org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82);
    org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
    org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85);
    org.junit.Assert.assertNotNull(intSpliterator86);
    org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87);
    org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
  }

  @Test
  public void test0964() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0964");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        62, 281474993487887L, 281474993487878L, 11111.0d, 281475010265070L, 70, 'a',
        281475010265078L);
    double double9 = gPSSatInViewScience8.getMaxElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 11111.0d + "'", double9 == 11111.0d);
  }

  @Test
  public void test0965() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0965");
    org.ccsds.moims.mo.mal.structures.OctetList octetList0 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int1 = octetList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort2 = octetList0.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet3 = octetList0.getAreaVersion();
    opssat.simulator.util.wav.WavFileException wavFileException5 = new opssat.simulator.util.wav.WavFileException(
        "UnknownGUIData");
    java.lang.Throwable[] throwableArray6 = wavFileException5.getSuppressed();
    boolean boolean7 = octetList0.equals(wavFileException5);
    org.ccsds.moims.mo.mal.structures.FloatList floatList9 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int10 = floatList9.getTypeShortForm();
    java.lang.Integer int11 = floatList9.getTypeShortForm();
    floatList9.clear();
    boolean boolean13 = octetList0.remove(floatList9);
    java.util.ListIterator<java.lang.Float> floatItor14 = floatList9.listIterator();
    org.ccsds.moims.mo.mal.structures.UShort uShort15 = floatList9.getAreaNumber();
    floatList9.trimToSize();
    org.ccsds.moims.mo.mal.structures.UShort uShort17 = floatList9.getServiceNumber();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-7) + "'", int1.equals((-7)));
    org.junit.Assert.assertNotNull(uShort2);
    org.junit.Assert.assertNotNull(uOctet3);
    org.junit.Assert.assertNotNull(throwableArray6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10.equals((-4)));
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-4) + "'", int11.equals((-4)));
    org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", !boolean13);
    org.junit.Assert.assertNotNull(floatItor14);
    org.junit.Assert.assertNotNull(uShort15);
    org.junit.Assert.assertNotNull(uShort17);
  }

  @Test
  public void test0966() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0966");
    java.lang.Double[] doubleArray4 = new java.lang.Double[] { (-1.0d), 100.0d, 10.0d, 10.0d };
    java.util.ArrayList<java.lang.Double> doubleList5 = new java.util.ArrayList<java.lang.Double>();
    boolean boolean6 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Double>) doubleList5, doubleArray4);
    org.ccsds.moims.mo.mal.structures.UShort uShort7 = org.ccsds.moims.mo.mal.structures.URIList.SERVICE_SHORT_FORM;
    org.ccsds.moims.mo.mal.structures.UShort[] uShortArray8 = new org.ccsds.moims.mo.mal.structures.UShort[] {
        uShort7 };
    java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort> uShortList9 = new java.util.ArrayList<org.ccsds.moims.mo.mal.structures.UShort>();
    boolean boolean10 = java.util.Collections.addAll(
        (java.util.Collection<org.ccsds.moims.mo.mal.structures.UShort>) uShortList9, uShortArray8);
    uShortList9.ensureCapacity(0);
    int int14 = uShortList9.indexOf((byte) 1);
    uShortList9.clear();
    java.lang.Long[] longArray18 = new java.lang.Long[] { 0L, 10L };
    java.util.ArrayList<java.lang.Long> longList19 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean20 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList19, longArray18);
    java.lang.Object obj21 = longList19.clone();
    boolean boolean22 = uShortList9.contains(longList19);
    boolean boolean23 = doubleList5.equals(boolean22);
    java.lang.Integer[] intArray26 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList27 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean28 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList27, intArray26);
    int int30 = intList27.lastIndexOf((byte) 10);
    boolean boolean31 = doubleList5.removeAll(intList27);
    java.lang.Integer[] intArray39 = new java.lang.Integer[] { 13, 10, 100, 100, 11111, 13, 11111 };
    java.util.ArrayList<java.lang.Integer> intList40 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean41 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList40, intArray39);
    java.lang.Byte[] byteArray46 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList47 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean48 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList47, byteArray46);
    java.lang.Integer[] intArray51 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList52 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean53 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList52, intArray51);
    boolean boolean54 = byteList47.retainAll(intList52);
    java.lang.Integer[] intArray57 = new java.lang.Integer[] { 0, 1 };
    java.util.ArrayList<java.lang.Integer> intList58 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean59 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList58, intArray57);
    int int61 = intList58.lastIndexOf((byte) 10);
    boolean boolean62 = intList52.removeAll(intList58);
    boolean boolean63 = intList40.retainAll(intList58);
    boolean boolean64 = doubleList5.removeAll(intList58);
    java.lang.Float[] floatArray68 = new java.lang.Float[] { 1.0f, 1.0f, (-1.0f) };
    java.util.ArrayList<java.lang.Float> floatList69 = new java.util.ArrayList<java.lang.Float>();
    boolean boolean70 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Float>) floatList69, floatArray68);
    boolean boolean72 = floatList69.add((-1.0f));
    floatList69.clear();
    boolean boolean74 = floatList69.isEmpty();
    java.util.ListIterator<java.lang.Float> floatItor75 = floatList69.listIterator();
    boolean boolean76 = doubleList5.contains(floatItor75);
    doubleList5.trimToSize();
    java.util.stream.Stream<java.lang.Double> doubleStream78 = doubleList5.parallelStream();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState82 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double83 = simulatorSpacecraftState82.getLatitude();
    java.lang.String str84 = simulatorSpacecraftState82.getMagField();
    float[] floatArray85 = simulatorSpacecraftState82.getR();
    int int86 = simulatorSpacecraftState82.getSatsInView();
    double double87 = simulatorSpacecraftState82.getAltitude();
    boolean boolean88 = doubleList5.remove(double87);
    org.junit.Assert.assertNotNull(doubleArray4);
    org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6);
    org.junit.Assert.assertNotNull(uShort7);
    org.junit.Assert.assertNotNull(uShortArray8);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertNotNull(longArray18);
    org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20);
    org.junit.Assert.assertNotNull(obj21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertNotNull(intArray26);
    org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28);
    org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNotNull(intArray39);
    org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41);
    org.junit.Assert.assertNotNull(byteArray46);
    org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48);
    org.junit.Assert.assertNotNull(intArray51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54);
    org.junit.Assert.assertNotNull(intArray57);
    org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59);
    org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
    org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", !boolean64);
    org.junit.Assert.assertNotNull(floatArray68);
    org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70);
    org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72);
    org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74);
    org.junit.Assert.assertNotNull(floatItor75);
    org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", !boolean76);
    org.junit.Assert.assertNotNull(doubleStream78);
    org.junit.Assert.assertTrue("'" + double83 + "' != '" + 340.0d + "'", double83 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str84 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str84.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray85);
    org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    org.junit.Assert.assertTrue("'" + double87 + "' != '" + 14.0d + "'", double87 == 14.0d);
    org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", !boolean88);
  }

  @Test
  public void test0968() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0968");
    org.ccsds.moims.mo.mal.structures.BooleanList booleanList1 = new org.ccsds.moims.mo.mal.structures.BooleanList(
        3);
    org.ccsds.moims.mo.mal.structures.FloatList floatList3 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet4 = floatList3.getAreaVersion();
    byte[] byteArray6 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(56);
    org.ccsds.moims.mo.mal.structures.Blob blob9 = new org.ccsds.moims.mo.mal.structures.Blob(
        byteArray6, 20, 24);
    boolean boolean10 = blob9.isURLBased();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet11 = blob9.getAreaVersion();
    int int12 = floatList3.indexOf(uOctet11);
    java.util.stream.Stream<java.lang.Float> floatStream13 = floatList3.stream();
    java.lang.Long long14 = floatList3.getShortForm();
    opssat.simulator.util.wav.WavFileException wavFileException16 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.String str17 = wavFileException16.toString();
    int int18 = floatList3.lastIndexOf(str17);
    boolean boolean19 = booleanList1.equals(int18);
    org.junit.Assert.assertNotNull(uOctet4);
    org.junit.Assert.assertNotNull(byteArray6);
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
    org.junit.Assert.assertNotNull(uOctet11);
    org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
    org.junit.Assert.assertNotNull(floatStream13);
    org.junit.Assert.assertTrue("'" + long14 + "' != '" + 281475010265084L + "'",
        long14.equals(281475010265084L));
    org.junit.Assert.assertTrue(
        "'" + str17 + "' != '" + "opssat.simulator.util.wav.WavFileException: [0, 1]" + "'",
        str17.equals("opssat.simulator.util.wav.WavFileException: [0, 1]"));
    org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
  }

  @Test
  public void test0969() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0969");
    org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = floatList1.getAreaVersion();
    byte[] byteArray4 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(56);
    org.ccsds.moims.mo.mal.structures.Blob blob7 = new org.ccsds.moims.mo.mal.structures.Blob(
        byteArray4, 20, 24);
    boolean boolean8 = blob7.isURLBased();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet9 = blob7.getAreaVersion();
    int int10 = floatList1.indexOf(uOctet9);
    java.util.stream.Stream<java.lang.Float> floatStream11 = floatList1.stream();
    java.lang.Long long12 = floatList1.getShortForm();
    opssat.simulator.util.wav.WavFileException wavFileException14 = new opssat.simulator.util.wav.WavFileException(
        "[0, 1]");
    java.lang.String str15 = wavFileException14.toString();
    int int16 = floatList1.lastIndexOf(str15);
    int int17 = floatList1.size();
    java.util.Iterator<java.lang.Float> floatItor18 = floatList1.iterator();
    java.lang.Integer int19 = floatList1.getTypeShortForm();
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(byteArray4);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertNotNull(uOctet9);
    org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    org.junit.Assert.assertNotNull(floatStream11);
    org.junit.Assert.assertTrue("'" + long12 + "' != '" + 281475010265084L + "'",
        long12.equals(281475010265084L));
    org.junit.Assert.assertTrue(
        "'" + str15 + "' != '" + "opssat.simulator.util.wav.WavFileException: [0, 1]" + "'",
        str15.equals("opssat.simulator.util.wav.WavFileException: [0, 1]"));
    org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    org.junit.Assert.assertNotNull(floatItor18);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-4) + "'", int19.equals((-4)));
  }

  @Test
  public void test0970() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0970");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.getSunVectorAsString();
    simulatorSpacecraftState3.setSatsInView(13);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double13 = simulatorSpacecraftState12.getLatitude();
    java.lang.String str14 = simulatorSpacecraftState12.getMagField();
    float[] floatArray15 = simulatorSpacecraftState12.getR();
    simulatorSpacecraftState3.setRv(floatArray15);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    java.lang.String str22 = simulatorSpacecraftState20.getMagField();
    java.lang.String str23 = simulatorSpacecraftState20.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState27 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double28 = simulatorSpacecraftState27.getLatitude();
    double double29 = simulatorSpacecraftState27.getLongitude();
    java.lang.String str30 = simulatorSpacecraftState27.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState34 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState34.setLongitude(4);
    double[] doubleArray38 = new double[] { (-1.0f) };
    simulatorSpacecraftState34.setMagField(doubleArray38);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    double[] doubleArray47 = simulatorSpacecraftState43.getSunVector();
    simulatorSpacecraftState34.setMagnetometer(doubleArray47);
    simulatorSpacecraftState27.setMagField(doubleArray47);
    simulatorSpacecraftState20.setMagField(doubleArray47);
    simulatorSpacecraftState3.setMagField(doubleArray47);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str6.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 340.0d + "'", double13 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str14.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str22 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str22.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str23 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str23.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double28 + "' != '" + 340.0d + "'", double28 == 340.0d);
    org.junit.Assert.assertTrue("'" + double29 + "' != '" + (-1.0d) + "'", double29 == (-1.0d));
    org.junit.Assert.assertNull(str30);
    org.junit.Assert.assertNotNull(doubleArray38);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray47);
  }

  @Test
  public void test0971() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0971");
    org.ccsds.moims.mo.mal.structures.FloatList floatList1 = new org.ccsds.moims.mo.mal.structures.FloatList(
        (byte) 0);
    java.lang.Integer int2 = floatList1.getTypeShortForm();
    floatList1.trimToSize();
    org.ccsds.moims.mo.mal.structures.StringList stringList5 = new org.ccsds.moims.mo.mal.structures.StringList(
        36);
    java.lang.Byte[] byteArray10 = new java.lang.Byte[] { (byte) 100, (byte) 0, (byte) 10,
        (byte) 1 };
    java.util.ArrayList<java.lang.Byte> byteList11 = new java.util.ArrayList<java.lang.Byte>();
    boolean boolean12 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Byte>) byteList11, byteArray10);
    java.lang.Integer[] intArray15 = new java.lang.Integer[] { 1, 11111 };
    java.util.ArrayList<java.lang.Integer> intList16 = new java.util.ArrayList<java.lang.Integer>();
    boolean boolean17 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Integer>) intList16, intArray15);
    boolean boolean18 = byteList11.retainAll(intList16);
    int int19 = stringList5.indexOf(intList16);
    boolean boolean21 = intList16.add(24);
    boolean boolean22 = floatList1.retainAll(intList16);
    java.lang.Object obj23 = null;
    boolean boolean24 = floatList1.contains(obj23);
    java.util.Spliterator<java.lang.Float> floatSpliterator25 = floatList1.spliterator();
    java.lang.Integer int26 = floatList1.getTypeShortForm();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState30 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double31 = simulatorSpacecraftState30.getLatitude();
    double double32 = simulatorSpacecraftState30.getLongitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState36 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState36.setLongitude(4);
    int int39 = simulatorSpacecraftState36.getSatsInView();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState43 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double44 = simulatorSpacecraftState43.getLatitude();
    java.lang.String str45 = simulatorSpacecraftState43.getMagField();
    java.lang.String str46 = simulatorSpacecraftState43.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState50 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double51 = simulatorSpacecraftState50.getLatitude();
    java.lang.String str52 = simulatorSpacecraftState50.getMagField();
    java.lang.String str53 = simulatorSpacecraftState50.toString();
    double[] doubleArray54 = simulatorSpacecraftState50.getSunVector();
    simulatorSpacecraftState43.setMagnetometer(doubleArray54);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState59 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double60 = simulatorSpacecraftState59.getLatitude();
    java.lang.String str61 = simulatorSpacecraftState59.getMagField();
    java.lang.String str62 = simulatorSpacecraftState59.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState66 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double67 = simulatorSpacecraftState66.getLatitude();
    java.lang.String str68 = simulatorSpacecraftState66.getMagField();
    java.lang.String str69 = simulatorSpacecraftState66.toString();
    double[] doubleArray70 = simulatorSpacecraftState66.getSunVector();
    simulatorSpacecraftState59.setMagnetometer(doubleArray70);
    simulatorSpacecraftState43.setMagnetometer(doubleArray70);
    simulatorSpacecraftState36.setSunVector(doubleArray70);
    simulatorSpacecraftState30.setMagField(doubleArray70);
    boolean boolean75 = floatList1.remove(simulatorSpacecraftState30);
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-4) + "'", int2.equals((-4)));
    org.junit.Assert.assertNotNull(byteArray10);
    org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12);
    org.junit.Assert.assertNotNull(intArray15);
    org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21);
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertNotNull(floatSpliterator25);
    org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-4) + "'", int26.equals((-4)));
    org.junit.Assert.assertTrue("'" + double31 + "' != '" + 340.0d + "'", double31 == 340.0d);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + (-1.0d) + "'", double32 == (-1.0d));
    org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    org.junit.Assert.assertTrue("'" + double44 + "' != '" + 340.0d + "'", double44 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str45 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str45.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str46 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str46.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double51 + "' != '" + 340.0d + "'", double51 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str52 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str52.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str53 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str53.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray54);
    org.junit.Assert.assertTrue("'" + double60 + "' != '" + 340.0d + "'", double60 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str61 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str61.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str62 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str62.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double67 + "' != '" + 340.0d + "'", double67 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str68 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str68.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str69 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str69.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray70);
    org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", !boolean75);
  }

  @Test
  public void test0972() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0972");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    boolean boolean10 = endlessSingleStreamOperatingBuffer1.preparePath("*74");
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", !boolean10);
  }

  @Test
  public void test0973() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0973");
    try {
      opssat.simulator.orekit.GPSSatInView gPSSatInView2 = new opssat.simulator.orekit.GPSSatInView(
          "2019/05/23-15:10:09", 0.0f);
      org.junit.Assert.fail(
          "Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -1");
    } catch (java.lang.StringIndexOutOfBoundsException e) {
    }
  }

  @Test
  public void test0974() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0974");
    java.lang.Long[] longArray3 = new java.lang.Long[] { 13L, 281475010265070L, 1L };
    java.util.ArrayList<java.lang.Long> longList4 = new java.util.ArrayList<java.lang.Long>();
    boolean boolean5 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Long>) longList4, longArray3);
    boolean boolean7 = longList4.add(281474993487885L);
    boolean boolean8 = longList4.isEmpty();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Date date12 = simulatorData10.getCurrentTime();
    int int13 = simulatorData10.getTimeFactor();
    int int14 = longList4.lastIndexOf(int13);
    boolean boolean15 = longList4.isEmpty();
    longList4.clear();
    opssat.simulator.util.SimulatorData simulatorData19 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date20 = simulatorData19.getCurrentTime();
    int int21 = opssat.simulator.util.DateExtraction.getDayFromDate(date20);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData26 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date27 = simulatorData26.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap28 = opssat.simulator.util.SimulatorData
        .computeDiff(date24, date27);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date20, date27);
    java.util.Date date30 = simulatorHeader29.getEndDate();
    boolean boolean31 = simulatorHeader29.isAutoStartSystem();
    int int32 = simulatorHeader29.getDayStartDate();
    java.lang.String str33 = simulatorHeader29.getOrekitTLE1();
    simulatorHeader29.setTimeFactor(31);
    simulatorHeader29.setOrekitPropagator("Alive");
    boolean boolean38 = simulatorHeader29.checkStartBeforeEnd();
    java.lang.String str39 = simulatorHeader29.toFileString();
    int int40 = simulatorHeader29.getMinuteStartDate();
    int int41 = longList4.indexOf(simulatorHeader29);
    org.junit.Assert.assertNotNull(longArray3);
    org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", !boolean8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(date12);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", !boolean15);
    org.junit.Assert.assertNotNull(date20);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date27);
    org.junit.Assert.assertNotNull(timeUnitMap28);
    org.junit.Assert.assertNotNull(date30);
    org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", !boolean31);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38);
    org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
  }

  @Test
  public void test0975() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0975");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    simulatorHeader12.setOrekitTLE1("");
    java.lang.String str16 = simulatorHeader12.DATE_FORMAT;
    simulatorHeader12.setKeplerElements("");
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str16.equals("yyyy:MM:dd HH:mm:ss z"));
  }

  @Test
  public void test0976() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0976");
    org.ccsds.moims.mo.mal.structures.UShortList uShortList0 = new org.ccsds.moims.mo.mal.structures.UShortList();
    java.lang.Integer int1 = uShortList0.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = uShortList0.getAreaVersion();
    java.lang.Object obj3 = uShortList0.clone();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    int int8 = opssat.simulator.util.DateExtraction.getDayFromDate(date7);
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap15 = opssat.simulator.util.SimulatorData
        .computeDiff(date11, date14);
    opssat.simulator.util.SimulatorHeader simulatorHeader16 = new opssat.simulator.util.SimulatorHeader(
        false, date7, date14);
    java.util.Date date17 = simulatorHeader16.getEndDate();
    int int18 = simulatorHeader16.getMinuteStartDate();
    simulatorHeader16.setUseOrekitPropagator(true);
    java.lang.String str21 = simulatorHeader16.toFileString();
    simulatorHeader16.setAutoStartTime(true);
    boolean boolean24 = uShortList0.equals(simulatorHeader16);
    org.ccsds.moims.mo.mal.structures.UShort uShort25 = uShortList0.getAreaNumber();
    java.util.stream.Stream<org.ccsds.moims.mo.mal.structures.UShort> uShortStream26 = uShortList0
        .parallelStream();
    org.junit.Assert.assertTrue("'" + int1 + "' != '" + (-10) + "'", int1.equals((-10)));
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(obj3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(timeUnitMap15);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", !boolean24);
    org.junit.Assert.assertNotNull(uShort25);
    org.junit.Assert.assertNotNull(uShortStream26);
  }

  @Test
  public void test0977() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0977");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    int int5 = opssat.simulator.util.DateExtraction.getDayFromDate(date4);
    opssat.simulator.util.SimulatorData simulatorData7 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date8 = simulatorData7.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData10 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date11 = simulatorData10.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap12 = opssat.simulator.util.SimulatorData
        .computeDiff(date8, date11);
    opssat.simulator.util.SimulatorHeader simulatorHeader13 = new opssat.simulator.util.SimulatorHeader(
        false, date4, date11);
    java.util.Date date14 = simulatorHeader13.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData15 = new opssat.simulator.util.SimulatorData(
        13, date14);
    simulatorData15.incrementMethods();
    int int17 = simulatorData15.getCounter();
    java.lang.String str18 = simulatorData15.getCurrentDay();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date11);
    org.junit.Assert.assertNotNull(timeUnitMap12);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertTrue("'" + int17 + "' != '" + 13 + "'", int17 == 13);
  }

  @Test
  public void test0978() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0978");
    org.ccsds.moims.mo.mal.structures.StringList stringList0 = new org.ccsds.moims.mo.mal.structures.StringList();
    java.util.Iterator<java.lang.String> strItor1 = stringList0.iterator();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = stringList0.getAreaVersion();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState6 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray9 = new float[] { 28, 8 };
    simulatorSpacecraftState6.setQ(floatArray9);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState14 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double15 = simulatorSpacecraftState14.getLatitude();
    java.lang.String str16 = simulatorSpacecraftState14.getMagField();
    float[] floatArray17 = simulatorSpacecraftState14.getR();
    simulatorSpacecraftState6.setQ(floatArray17);
    java.lang.String str19 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray17);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double24 = simulatorSpacecraftState23.getLatitude();
    double double25 = simulatorSpacecraftState23.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double30 = simulatorSpacecraftState29.getLatitude();
    java.lang.String str31 = simulatorSpacecraftState29.getMagField();
    float[] floatArray32 = simulatorSpacecraftState29.getR();
    simulatorSpacecraftState23.setQ(floatArray32);
    float[] floatArray34 = simulatorSpacecraftState23.getV();
    opssat.simulator.celestia.CelestiaData celestiaData35 = new opssat.simulator.celestia.CelestiaData(
        floatArray17, floatArray34);
    float[] floatArray36 = celestiaData35.getQ();
    opssat.simulator.util.SimulatorData simulatorData40 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date41 = simulatorData40.getCurrentTime();
    int int42 = opssat.simulator.util.DateExtraction.getDayFromDate(date41);
    opssat.simulator.util.SimulatorData simulatorData44 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date45 = simulatorData44.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData47 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date48 = simulatorData47.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap49 = opssat.simulator.util.SimulatorData
        .computeDiff(date45, date48);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date41, date48);
    opssat.simulator.util.SimulatorData simulatorData51 = new opssat.simulator.util.SimulatorData(
        (short) 0, date41);
    celestiaData35.setDate(date41);
    int int53 = celestiaData35.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState57 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray60 = new float[] { 28, 8 };
    simulatorSpacecraftState57.setQ(floatArray60);
    celestiaData35.setQ(floatArray60);
    int int63 = stringList0.lastIndexOf(celestiaData35);
    celestiaData35
        .setDate("{counter=8, methodsExecuted=0, currentTime=Thu May 23 15:09:32 UTC 2019}");
    celestiaData35.setAnx("0");
    int int68 = celestiaData35.getSeconds();
    org.junit.Assert.assertNotNull(strItor1);
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertNotNull(floatArray9);
    org.junit.Assert.assertTrue("'" + double15 + "' != '" + 340.0d + "'", double15 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str16 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str16.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray17);
    org.junit.Assert.assertTrue("'" + str19 + "' != '" + "UnknownGUIData" + "'",
        str19.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + 340.0d + "'", double24 == 340.0d);
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue("'" + double30 + "' != '" + 340.0d + "'", double30 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str31 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str31.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray32);
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertNotNull(floatArray36);
    org.junit.Assert.assertNotNull(date41);
    org.junit.Assert.assertNotNull(date45);
    org.junit.Assert.assertNotNull(date48);
    org.junit.Assert.assertNotNull(timeUnitMap49);
    org.junit.Assert.assertNotNull(floatArray60);
    org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
  }

  @Test
  public void test0979() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0979");
    org.ccsds.moims.mo.mal.structures.Identifier identifier0 = new org.ccsds.moims.mo.mal.structures.Identifier();
    org.ccsds.moims.mo.mal.structures.OctetList octetList1 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int2 = octetList1.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort3 = octetList1.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor4 = octetList1.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor6 = new opssat.simulator.util.ArgumentDescriptor(
        octetList1, "hi!");
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    argumentDescriptor6.restoreArgument();
    java.lang.String str10 = argumentDescriptor6.toString();
    boolean boolean11 = identifier0.equals(str10);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray18 = new float[] { 28, 8 };
    simulatorSpacecraftState15.setQ(floatArray18);
    float[] floatArray20 = simulatorSpacecraftState15.getQ();
    double double21 = simulatorSpacecraftState15.getLongitude();
    boolean boolean22 = identifier0.equals(simulatorSpacecraftState15);
    float[] floatArray23 = simulatorSpacecraftState15.getQ();
    double double24 = simulatorSpacecraftState15.getLongitude();
    double double25 = simulatorSpacecraftState15.getLatitude();
    double double26 = simulatorSpacecraftState15.getLatitude();
    org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-7) + "'", int2.equals((-7)));
    org.junit.Assert.assertNotNull(uShort3);
    org.junit.Assert.assertNotNull(byteItor4);
    org.junit.Assert.assertTrue("'" + str10 + "' != '" + "" + "'", str10.equals(""));
    org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", !boolean11);
    org.junit.Assert.assertNotNull(floatArray18);
    org.junit.Assert.assertNotNull(floatArray20);
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", !boolean22);
    org.junit.Assert.assertNotNull(floatArray23);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    org.junit.Assert.assertTrue("'" + double25 + "' != '" + 340.0d + "'", double25 == 340.0d);
    org.junit.Assert.assertTrue("'" + double26 + "' != '" + 340.0d + "'", double26 == 340.0d);
  }

  @Test
  public void test0980() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0980");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    long long3 = simulatorData2.getCurrentTimeMillis();
    java.lang.String str4 = simulatorData2.getCurrentDay();
    java.lang.String str5 = simulatorData2.getUTCCurrentTime2();
    simulatorData2.toggleSimulatorRunning();
    java.lang.String str7 = simulatorData2.getUTCCurrentTime();
    java.util.Date date8 = simulatorData2.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData12 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date13 = simulatorData12.getCurrentTime();
    java.util.Date date14 = simulatorData12.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData15 = new opssat.simulator.util.SimulatorData(
        17, date14);
    opssat.simulator.util.SimulatorData simulatorData18 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date19 = simulatorData18.getCurrentTime();
    int int20 = opssat.simulator.util.DateExtraction.getDayFromDate(date19);
    opssat.simulator.util.SimulatorData simulatorData22 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date23 = simulatorData22.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData25 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date26 = simulatorData25.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap27 = opssat.simulator.util.SimulatorData
        .computeDiff(date23, date26);
    opssat.simulator.util.SimulatorHeader simulatorHeader28 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date26);
    opssat.simulator.util.SimulatorHeader simulatorHeader29 = new opssat.simulator.util.SimulatorHeader(
        false, date14, date19);
    opssat.simulator.util.SimulatorData simulatorData33 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date34 = simulatorData33.getCurrentTime();
    java.util.Date date35 = simulatorData33.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData36 = new opssat.simulator.util.SimulatorData(
        17, date35);
    opssat.simulator.util.SimulatorData simulatorData39 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date40 = simulatorData39.getCurrentTime();
    int int41 = opssat.simulator.util.DateExtraction.getDayFromDate(date40);
    opssat.simulator.util.SimulatorData simulatorData43 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date44 = simulatorData43.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData46 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date47 = simulatorData46.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap48 = opssat.simulator.util.SimulatorData
        .computeDiff(date44, date47);
    opssat.simulator.util.SimulatorHeader simulatorHeader49 = new opssat.simulator.util.SimulatorHeader(
        false, date40, date47);
    opssat.simulator.util.SimulatorHeader simulatorHeader50 = new opssat.simulator.util.SimulatorHeader(
        false, date35, date40);
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap51 = opssat.simulator.util.SimulatorData
        .computeDiff(date19, date35);
    opssat.simulator.util.SimulatorHeader simulatorHeader52 = new opssat.simulator.util.SimulatorHeader(
        true, date8, date35);
    boolean boolean53 = simulatorHeader52.checkStartBeforeEnd();
    java.lang.String str54 = simulatorHeader52.toString();
    simulatorHeader52.setAutoStartSystem(false);
    java.lang.String str57 = simulatorHeader52.getStartDateString();
    int int58 = simulatorHeader52.getTimeFactor();
    simulatorHeader52.setOrekitPropagator(
        "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=true\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:10:15 UTC\nendDate=2019:05:23 15:10:15 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO");
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
    org.junit.Assert.assertNotNull(date8);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date23);
    org.junit.Assert.assertNotNull(date26);
    org.junit.Assert.assertNotNull(timeUnitMap27);
    org.junit.Assert.assertNotNull(date34);
    org.junit.Assert.assertNotNull(date35);
    org.junit.Assert.assertNotNull(date40);
    org.junit.Assert.assertNotNull(date44);
    org.junit.Assert.assertNotNull(date47);
    org.junit.Assert.assertNotNull(timeUnitMap48);
    org.junit.Assert.assertNotNull(timeUnitMap51);
    org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53);
    org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
  }

  @Test
  public void test0981() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0981");
    opssat.simulator.util.SimulatorData simulatorData1 = new opssat.simulator.util.SimulatorData(
        (-18));
    simulatorData1.setCounter((-1));
    simulatorData1.feedTimeElapsed(21);
    java.lang.String str6 = simulatorData1.getCurrentDay();
    boolean boolean7 = simulatorData1.isTimeRunning();
    simulatorData1.incrementMethods();
    int int9 = simulatorData1.getCounter();
    java.lang.String str10 = simulatorData1.getUTCCurrentTime2();
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", !boolean7);
    org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
  }

  @Test
  public void test0982() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0982");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    int int14 = simulatorHeader12.getMinuteStartDate();
    simulatorHeader12.setUseOrekitPropagator(true);
    java.lang.String str17 = simulatorHeader12.toFileString();
    int int18 = simulatorHeader12.getHourStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
  }

  @Test
  public void test0984() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0984");
    org.ccsds.moims.mo.mal.structures.DoubleList doubleList1 = new org.ccsds.moims.mo.mal.structures.DoubleList(
        (short) 10);
    org.ccsds.moims.mo.mal.structures.UOctet uOctet2 = org.ccsds.moims.mo.mal.structures.StringList.AREA_VERSION;
    int int3 = doubleList1.indexOf(uOctet2);
    java.util.Spliterator<java.lang.Double> doubleSpliterator4 = doubleList1.spliterator();
    org.junit.Assert.assertNotNull(uOctet2);
    org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    org.junit.Assert.assertNotNull(doubleSpliterator4);
  }

  @Test
  public void test0985() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0985");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessSingleStreamOperatingBuffer endlessSingleStreamOperatingBuffer1 = new opssat.simulator.util.EndlessSingleStreamOperatingBuffer(
        logger0);
    byte[] byteArray3 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray('4');
    byte[] byteArray5 = opssat.simulator.peripherals.PFineADCS.FWRefFineADCS.int16_2ByteArray(15);
    endlessSingleStreamOperatingBuffer1.setDataFromByteArray(byteArray5);
    java.lang.String str7 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    java.lang.String str8 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    endlessSingleStreamOperatingBuffer1.setOperatingIndex(33);
    java.lang.String str11 = endlessSingleStreamOperatingBuffer1.getDataBufferAsString();
    try {
      byte[] byteArray13 = endlessSingleStreamOperatingBuffer1.getDataAsByteArray(8);
      org.junit.Assert
          .fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 33");
    } catch (java.lang.ArrayIndexOutOfBoundsException e) {
    }
    org.junit.Assert.assertNotNull(byteArray3);
    org.junit.Assert.assertNotNull(byteArray5);
    org.junit.Assert.assertTrue("'" + str7 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str7.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str8 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str8.equals("byte[] {0x00,0x0F}"));
    org.junit.Assert.assertTrue("'" + str11 + "' != '" + "byte[] {0x00,0x0F}" + "'",
        str11.equals("byte[] {0x00,0x0F}"));
  }

  @Test
  public void test0986() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0986");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    boolean boolean14 = simulatorHeader12.isAutoStartSystem();
    int int15 = simulatorHeader12.getDayStartDate();
    java.lang.String str16 = simulatorHeader12.getOrekitTLE1();
    simulatorHeader12.setTimeFactor(31);
    simulatorHeader12.setOrekitPropagator("Alive");
    simulatorHeader12.setUpdateInternet(true);
    simulatorHeader12.setOrekitPropagator(
        "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]");
    java.util.Date date25 = null;
    simulatorHeader12.setEndDate(date25);
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", !boolean14);
    org.junit.Assert.assertNull(str16);
  }

  @Test
  public void test0987() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0987");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState3.setLongitude(4);
    double[] doubleArray7 = new double[] { (-1.0f) };
    simulatorSpacecraftState3.setMagField(doubleArray7);
    double double9 = simulatorSpacecraftState3.getLongitude();
    simulatorSpacecraftState3.setAltitude(281474993487887L);
    org.junit.Assert.assertNotNull(doubleArray7);
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 4.0d + "'", double9 == 4.0d);
  }

  @Test
  public void test0988() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0988");
    opssat.simulator.util.SimulatorSchedulerPiece simulatorSchedulerPiece3 = new opssat.simulator.util.SimulatorSchedulerPiece(
        42, 11, "");
    int int4 = simulatorSchedulerPiece3.getInternalID();
    simulatorSchedulerPiece3.setExecuted(false);
    org.junit.Assert.assertTrue("'" + int4 + "' != '" + 11 + "'", int4 == 11);
  }

  @Test
  public void test0989() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0989");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        (-30), 64, 7, 281475010265070L, (-1.0f), 281474993487879L, (byte) 1, (short) 100);
    double double9 = gPSSatInViewScience8.getAvgDistance();
    double double10 = gPSSatInViewScience8.getStdDevDistance();
    double double11 = gPSSatInViewScience8.getMaxDistance();
    double double12 = gPSSatInViewScience8.getStdDevElevation();
    double double13 = gPSSatInViewScience8.getMaxElevation();
    double double14 = gPSSatInViewScience8.getMinElevation();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 64.0d + "'", double11 == 64.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.8147501026507E14d + "'",
        double13 == 2.8147501026507E14d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 7.0d + "'", double14 == 7.0d);
  }

  @Test
  public void test0990() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0990");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    simulatorSpacecraftState3.setLongitude(13);
    simulatorSpacecraftState3.setAltitude(66);
    org.ccsds.moims.mo.mal.structures.URI uRI10 = new org.ccsds.moims.mo.mal.structures.URI(
        "0100.0000");
    java.lang.Integer int11 = uRI10.getTypeShortForm();
    java.lang.String str12 = uRI10.toString();
    java.lang.String str13 = uRI10.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet14 = uRI10.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.ShortList shortList16 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.lang.Long long17 = shortList16.getShortForm();
    java.util.stream.Stream<java.lang.Short> shortStream18 = shortList16.stream();
    boolean boolean19 = uOctet14.equals(shortList16);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState23 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray26 = new float[] { 28, 8 };
    simulatorSpacecraftState23.setQ(floatArray26);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState31 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double32 = simulatorSpacecraftState31.getLatitude();
    java.lang.String str33 = simulatorSpacecraftState31.getMagField();
    float[] floatArray34 = simulatorSpacecraftState31.getR();
    simulatorSpacecraftState23.setQ(floatArray34);
    java.lang.String str36 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray34);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState40 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double41 = simulatorSpacecraftState40.getLatitude();
    double double42 = simulatorSpacecraftState40.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState46 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double47 = simulatorSpacecraftState46.getLatitude();
    java.lang.String str48 = simulatorSpacecraftState46.getMagField();
    float[] floatArray49 = simulatorSpacecraftState46.getR();
    simulatorSpacecraftState40.setQ(floatArray49);
    float[] floatArray51 = simulatorSpacecraftState40.getV();
    opssat.simulator.celestia.CelestiaData celestiaData52 = new opssat.simulator.celestia.CelestiaData(
        floatArray34, floatArray51);
    float[] floatArray53 = celestiaData52.getQ();
    opssat.simulator.util.SimulatorData simulatorData57 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date58 = simulatorData57.getCurrentTime();
    int int59 = opssat.simulator.util.DateExtraction.getDayFromDate(date58);
    opssat.simulator.util.SimulatorData simulatorData61 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date62 = simulatorData61.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData64 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date65 = simulatorData64.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap66 = opssat.simulator.util.SimulatorData
        .computeDiff(date62, date65);
    opssat.simulator.util.SimulatorHeader simulatorHeader67 = new opssat.simulator.util.SimulatorHeader(
        false, date58, date65);
    opssat.simulator.util.SimulatorData simulatorData68 = new opssat.simulator.util.SimulatorData(
        (short) 0, date58);
    celestiaData52.setDate(date58);
    int int70 = celestiaData52.getSeconds();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState74 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray77 = new float[] { 28, 8 };
    simulatorSpacecraftState74.setQ(floatArray77);
    celestiaData52.setQ(floatArray77);
    boolean boolean80 = shortList16.contains(celestiaData52);
    int int81 = celestiaData52.getYears();
    celestiaData52.setAos(
        "#Run the processing of internal models\nstartModels=false\n#Increment the simulated time (depends on startModels)\nstartTime=false\n#Speed up of time factor\ntimeFactor=1\n#Kepler elements for orbit A[km];E;i[deg];RAAN[deg];ARG_PER[deg];TRUE_A[deg] 7021.0;0.0;98.05;340.0;0.0;0.0\nkeplerElements=7021.0;0.0;98.05;340.0;0.0;0.0\n#Enable the Orekit library\norekit=false\n#Enable updates from Internet (used for gps constellation TLEs)\nupdateFromInternet=false\n#Configuration of the Celestia server\ncelestia=false\ncelestiaPort=0\n#Start and end dates of simulation\nstartDate=2019:05:23 15:09:41 UTC\nendDate=2019:05:23 15:09:41 UTC\n#Logging level to files found in $USER_HOME/.ops-sat-simulator/\n#Possible values SEVERE,INFO,FINE,FINER,FINEST,ALL\ncentralLogLevel=INFO\nsimulatorLogLevel=INFO\nconsoleLogLevel=INFO");
    int int84 = celestiaData52.getHours();
    int int85 = celestiaData52.getMinutes();
    float[] floatArray86 = celestiaData52.getQ();
    simulatorSpacecraftState3.setRv(floatArray86);
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue("'" + int11 + "' != '" + 18 + "'", int11.equals(18));
    org.junit.Assert.assertTrue("'" + str12 + "' != '" + "0100.0000" + "'",
        str12.equals("0100.0000"));
    org.junit.Assert.assertTrue("'" + str13 + "' != '" + "0100.0000" + "'",
        str13.equals("0100.0000"));
    org.junit.Assert.assertNotNull(uOctet14);
    org.junit.Assert.assertTrue("'" + long17 + "' != '" + 281475010265079L + "'",
        long17.equals(281475010265079L));
    org.junit.Assert.assertNotNull(shortStream18);
    org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", !boolean19);
    org.junit.Assert.assertNotNull(floatArray26);
    org.junit.Assert.assertTrue("'" + double32 + "' != '" + 340.0d + "'", double32 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str33 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str33.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray34);
    org.junit.Assert.assertTrue("'" + str36 + "' != '" + "UnknownGUIData" + "'",
        str36.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double41 + "' != '" + 340.0d + "'", double41 == 340.0d);
    org.junit.Assert.assertTrue("'" + double42 + "' != '" + 340.0d + "'", double42 == 340.0d);
    org.junit.Assert.assertTrue("'" + double47 + "' != '" + 340.0d + "'", double47 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str48 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str48.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray49);
    org.junit.Assert.assertNotNull(floatArray51);
    org.junit.Assert.assertNotNull(floatArray53);
    org.junit.Assert.assertNotNull(date58);
    org.junit.Assert.assertNotNull(date62);
    org.junit.Assert.assertNotNull(date65);
    org.junit.Assert.assertNotNull(timeUnitMap66);
    org.junit.Assert.assertNotNull(floatArray77);
    org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", !boolean80);
    org.junit.Assert.assertNotNull(floatArray86);
  }

  @Test
  public void test0991() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0991");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState11 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double12 = simulatorSpacecraftState11.getLatitude();
    java.lang.String str13 = simulatorSpacecraftState11.getMagField();
    float[] floatArray14 = simulatorSpacecraftState11.getR();
    simulatorSpacecraftState3.setQ(floatArray14);
    java.lang.String str16 = opssat.simulator.util.CommandDescriptor
        .makeConsoleDescriptionForObj(floatArray14);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState20 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double21 = simulatorSpacecraftState20.getLatitude();
    double double22 = simulatorSpacecraftState20.getLatitude();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState26 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double27 = simulatorSpacecraftState26.getLatitude();
    java.lang.String str28 = simulatorSpacecraftState26.getMagField();
    float[] floatArray29 = simulatorSpacecraftState26.getR();
    simulatorSpacecraftState20.setQ(floatArray29);
    float[] floatArray31 = simulatorSpacecraftState20.getV();
    opssat.simulator.celestia.CelestiaData celestiaData32 = new opssat.simulator.celestia.CelestiaData(
        floatArray14, floatArray31);
    java.lang.String str33 = celestiaData32.getInfo();
    java.lang.String str34 = celestiaData32.getAnx();
    java.lang.String str35 = celestiaData32.getLos();
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 340.0d + "'", double12 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str13 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str13.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray14);
    org.junit.Assert.assertTrue("'" + str16 + "' != '" + "UnknownGUIData" + "'",
        str16.equals("UnknownGUIData"));
    org.junit.Assert.assertTrue("'" + double21 + "' != '" + 340.0d + "'", double21 == 340.0d);
    org.junit.Assert.assertTrue("'" + double22 + "' != '" + 340.0d + "'", double22 == 340.0d);
    org.junit.Assert.assertTrue("'" + double27 + "' != '" + 340.0d + "'", double27 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str28 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str28.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray29);
    org.junit.Assert.assertNotNull(floatArray31);
    org.junit.Assert.assertNull(str33);
    org.junit.Assert.assertNull(str34);
    org.junit.Assert.assertNull(str35);
  }

  @Test
  public void test0992() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0992");
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience8 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double9 = gPSSatInViewScience8.getMaxDistance();
    double double10 = gPSSatInViewScience8.getMaxDistance();
    double double11 = gPSSatInViewScience8.getStdDevElevation();
    double double12 = gPSSatInViewScience8.getStdDevElevation();
    double double13 = gPSSatInViewScience8.getAvgElevation();
    double double14 = gPSSatInViewScience8.getMaxDistance();
    org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    org.junit.Assert.assertTrue("'" + double11 + "' != '" + 11111.0d + "'", double11 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double12 + "' != '" + 11111.0d + "'", double12 == 11111.0d);
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 2.81474993487878E14d + "'",
        double13 == 2.81474993487878E14d);
    org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
  }

  @Test
  public void test0994() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0994");
    org.ccsds.moims.mo.mal.structures.UInteger uInteger1 = new org.ccsds.moims.mo.mal.structures.UInteger(
        13);
    org.ccsds.moims.mo.mal.structures.Element element2 = uInteger1.createElement();
    long long3 = uInteger1.getValue();
    long long4 = uInteger1.getValue();
    org.ccsds.moims.mo.mal.structures.UOctet uOctet5 = uInteger1.getAreaVersion();
    org.ccsds.moims.mo.mal.structures.UShort uShort6 = uInteger1.getAreaNumber();
    org.ccsds.moims.mo.mal.structures.OctetList octetList7 = new org.ccsds.moims.mo.mal.structures.OctetList();
    java.lang.Integer int8 = octetList7.getTypeShortForm();
    org.ccsds.moims.mo.mal.structures.UShort uShort9 = octetList7.getServiceNumber();
    java.util.Iterator<java.lang.Byte> byteItor10 = octetList7.iterator();
    opssat.simulator.util.ArgumentDescriptor argumentDescriptor12 = new opssat.simulator.util.ArgumentDescriptor(
        octetList7, "hi!");
    java.lang.Integer int13 = octetList7.getTypeShortForm();
    java.lang.Boolean[] booleanArray16 = new java.lang.Boolean[] { true, true };
    java.util.ArrayList<java.lang.Boolean> booleanList17 = new java.util.ArrayList<java.lang.Boolean>();
    boolean boolean18 = java.util.Collections
        .addAll((java.util.Collection<java.lang.Boolean>) booleanList17, booleanArray16);
    int int20 = booleanList17.indexOf(10);
    java.util.Iterator<java.lang.Boolean> booleanItor21 = booleanList17.iterator();
    boolean boolean23 = booleanList17.remove(10.0f);
    int int24 = octetList7.indexOf(booleanList17);
    octetList7.trimToSize();
    org.ccsds.moims.mo.mal.structures.Element element26 = octetList7.createElement();
    boolean boolean27 = uInteger1.equals(octetList7);
    org.ccsds.moims.mo.mal.structures.UShort uShort28 = octetList7.getServiceNumber();
    org.junit.Assert.assertNotNull(element2);
    org.junit.Assert.assertTrue("'" + long3 + "' != '" + 13L + "'", long3 == 13L);
    org.junit.Assert.assertTrue("'" + long4 + "' != '" + 13L + "'", long4 == 13L);
    org.junit.Assert.assertNotNull(uOctet5);
    org.junit.Assert.assertNotNull(uShort6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-7) + "'", int8.equals((-7)));
    org.junit.Assert.assertNotNull(uShort9);
    org.junit.Assert.assertNotNull(byteItor10);
    org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-7) + "'", int13.equals((-7)));
    org.junit.Assert.assertNotNull(booleanArray16);
    org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18);
    org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    org.junit.Assert.assertNotNull(booleanItor21);
    org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", !boolean23);
    org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    org.junit.Assert.assertNotNull(element26);
    org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", !boolean27);
    org.junit.Assert.assertNotNull(uShort28);
  }

  @Test
  public void test0995() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0995");
    java.util.logging.Logger logger0 = null;
    opssat.simulator.util.EndlessWavStreamOperatingBuffer endlessWavStreamOperatingBuffer1 = new opssat.simulator.util.EndlessWavStreamOperatingBuffer(
        logger0);
    java.lang.Object obj2 = endlessWavStreamOperatingBuffer1.getDataBuffer();
    org.ccsds.moims.mo.mal.structures.StringList stringList3 = new org.ccsds.moims.mo.mal.structures.StringList();
    org.ccsds.moims.mo.mal.structures.ShortList shortList5 = new org.ccsds.moims.mo.mal.structures.ShortList(
        ' ');
    java.util.ListIterator<java.lang.Short> shortItor6 = shortList5.listIterator();
    boolean boolean7 = stringList3.equals(shortList5);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience16 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double17 = gPSSatInViewScience16.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience26 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience35 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double36 = gPSSatInViewScience35.getMaxDistance();
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience45 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    opssat.simulator.orekit.GPSSatInViewScience gPSSatInViewScience54 = new opssat.simulator.orekit.GPSSatInViewScience(
        9, 0.0f, 48, 56, (short) 1, 281474993487878L, 58, 11111);
    double double55 = gPSSatInViewScience54.getStdDevElevation();
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray56 = new opssat.simulator.orekit.GPSSatInViewScience[] {
        gPSSatInViewScience16, gPSSatInViewScience26, gPSSatInViewScience35, gPSSatInViewScience45,
        gPSSatInViewScience54 };
    opssat.simulator.orekit.GPSSatInViewScience[] gPSSatInViewScienceArray57 = shortList5
        .toArray(gPSSatInViewScienceArray56);
    shortList5.ensureCapacity(44);
    int int60 = shortList5.size();
    java.util.stream.Stream<java.lang.Short> shortStream61 = shortList5.parallelStream();
    boolean boolean63 = shortList5.add((short) -1);
    endlessWavStreamOperatingBuffer1.setDataBuffer(shortList5);
    java.util.stream.Stream<java.lang.Short> shortStream65 = shortList5.stream();
    org.junit.Assert.assertNotNull(obj2);
    org.junit.Assert.assertNotNull(shortItor6);
    org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7);
    org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    org.junit.Assert.assertTrue("'" + double55 + "' != '" + 11111.0d + "'", double55 == 11111.0d);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray56);
    org.junit.Assert.assertNotNull(gPSSatInViewScienceArray57);
    org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    org.junit.Assert.assertNotNull(shortStream61);
    org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63);
    org.junit.Assert.assertNotNull(shortStream65);
  }

  @Test
  public void test0996() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0996");
    opssat.simulator.util.SimulatorData simulatorData3 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date4 = simulatorData3.getCurrentTime();
    java.util.Date date5 = simulatorData3.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(17,
        date5);
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    int int11 = opssat.simulator.util.DateExtraction.getDayFromDate(date10);
    opssat.simulator.util.SimulatorData simulatorData13 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date14 = simulatorData13.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData16 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date17 = simulatorData16.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap18 = opssat.simulator.util.SimulatorData
        .computeDiff(date14, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader19 = new opssat.simulator.util.SimulatorHeader(
        false, date10, date17);
    opssat.simulator.util.SimulatorHeader simulatorHeader20 = new opssat.simulator.util.SimulatorHeader(
        false, date5, date10);
    boolean boolean21 = simulatorHeader20.isAutoStartTime();
    simulatorHeader20.setUseCelestia(false);
    simulatorHeader20.setKeplerElements("-1300.0000000");
    java.lang.String str26 = simulatorHeader20.toString();
    org.junit.Assert.assertNotNull(date4);
    org.junit.Assert.assertNotNull(date5);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(date14);
    org.junit.Assert.assertNotNull(date17);
    org.junit.Assert.assertNotNull(timeUnitMap18);
    org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", !boolean21);
  }

  @Test
  public void test0997() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0997");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    float[] floatArray6 = new float[] { 28, 8 };
    simulatorSpacecraftState3.setQ(floatArray6);
    int int8 = simulatorSpacecraftState3.getSatsInView();
    simulatorSpacecraftState3.setAltitude((-5));
    java.lang.String str11 = simulatorSpacecraftState3.getSunVectorAsString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState15 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double16 = simulatorSpacecraftState15.getLatitude();
    java.lang.String str17 = simulatorSpacecraftState15.getMagField();
    java.lang.String str18 = simulatorSpacecraftState15.toString();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState22 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double23 = simulatorSpacecraftState22.getLatitude();
    double double24 = simulatorSpacecraftState22.getLongitude();
    java.lang.String str25 = simulatorSpacecraftState22.getModeOperation();
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState29 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    simulatorSpacecraftState29.setLongitude(4);
    double[] doubleArray33 = new double[] { (-1.0f) };
    simulatorSpacecraftState29.setMagField(doubleArray33);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState38 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double39 = simulatorSpacecraftState38.getLatitude();
    java.lang.String str40 = simulatorSpacecraftState38.getMagField();
    java.lang.String str41 = simulatorSpacecraftState38.toString();
    double[] doubleArray42 = simulatorSpacecraftState38.getSunVector();
    simulatorSpacecraftState29.setMagnetometer(doubleArray42);
    simulatorSpacecraftState22.setMagField(doubleArray42);
    simulatorSpacecraftState15.setMagField(doubleArray42);
    simulatorSpacecraftState3.setMagField(doubleArray42);
    org.junit.Assert.assertNotNull(floatArray6);
    org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    org.junit.Assert.assertTrue(
        "'" + str11 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str11.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double16 + "' != '" + 340.0d + "'", double16 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str17 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str17.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str18 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str18.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertTrue("'" + double23 + "' != '" + 340.0d + "'", double23 == 340.0d);
    org.junit.Assert.assertTrue("'" + double24 + "' != '" + (-1.0d) + "'", double24 == (-1.0d));
    org.junit.Assert.assertNull(str25);
    org.junit.Assert.assertNotNull(doubleArray33);
    org.junit.Assert.assertTrue("'" + double39 + "' != '" + 340.0d + "'", double39 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str40 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str40.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str41 + "' != '"
            + "SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}" + "'",
        str41.equals("SimulatorSpacecraftState{latitude=340.0, longitude=-1.0, altitude=14.0}"));
    org.junit.Assert.assertNotNull(doubleArray42);
  }

  @Test
  public void test0999() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test0999");
    opssat.simulator.util.SimulatorData simulatorData2 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date3 = simulatorData2.getCurrentTime();
    int int4 = opssat.simulator.util.DateExtraction.getDayFromDate(date3);
    opssat.simulator.util.SimulatorData simulatorData6 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date7 = simulatorData6.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData9 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date10 = simulatorData9.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap11 = opssat.simulator.util.SimulatorData
        .computeDiff(date7, date10);
    opssat.simulator.util.SimulatorHeader simulatorHeader12 = new opssat.simulator.util.SimulatorHeader(
        false, date3, date10);
    java.util.Date date13 = simulatorHeader12.getEndDate();
    opssat.simulator.util.SimulatorData simulatorData17 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date18 = simulatorData17.getCurrentTime();
    java.util.Date date19 = simulatorData17.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData20 = new opssat.simulator.util.SimulatorData(
        17, date19);
    opssat.simulator.util.SimulatorData simulatorData23 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date24 = simulatorData23.getCurrentTime();
    int int25 = opssat.simulator.util.DateExtraction.getDayFromDate(date24);
    opssat.simulator.util.SimulatorData simulatorData27 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date28 = simulatorData27.getCurrentTime();
    opssat.simulator.util.SimulatorData simulatorData30 = new opssat.simulator.util.SimulatorData(
        (-18));
    java.util.Date date31 = simulatorData30.getCurrentTime();
    java.util.Map<java.util.concurrent.TimeUnit, java.lang.Long> timeUnitMap32 = opssat.simulator.util.SimulatorData
        .computeDiff(date28, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader33 = new opssat.simulator.util.SimulatorHeader(
        false, date24, date31);
    opssat.simulator.util.SimulatorHeader simulatorHeader34 = new opssat.simulator.util.SimulatorHeader(
        false, date19, date24);
    simulatorHeader12.setEndDate(date19);
    simulatorHeader12.setUseCelestia(true);
    java.lang.String str38 = simulatorHeader12.DATE_FORMAT;
    boolean boolean39 = simulatorHeader12.isUpdateInternet();
    int int40 = simulatorHeader12.getYearStartDate();
    org.junit.Assert.assertNotNull(date3);
    org.junit.Assert.assertNotNull(date7);
    org.junit.Assert.assertNotNull(date10);
    org.junit.Assert.assertNotNull(timeUnitMap11);
    org.junit.Assert.assertNotNull(date13);
    org.junit.Assert.assertNotNull(date18);
    org.junit.Assert.assertNotNull(date19);
    org.junit.Assert.assertNotNull(date24);
    org.junit.Assert.assertNotNull(date28);
    org.junit.Assert.assertNotNull(date31);
    org.junit.Assert.assertNotNull(timeUnitMap32);
    org.junit.Assert.assertTrue("'" + str38 + "' != '" + "yyyy:MM:dd HH:mm:ss z" + "'",
        str38.equals("yyyy:MM:dd HH:mm:ss z"));
    org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", !boolean39);
  }

  @Test
  public void test1000() throws Throwable {
    if (debug)
      System.out.format("%n%s%n", "RegressionTest1.test1000");
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState3 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double4 = simulatorSpacecraftState3.getLatitude();
    java.lang.String str5 = simulatorSpacecraftState3.getMagField();
    java.lang.String str6 = simulatorSpacecraftState3.getSunVectorAsString();
    simulatorSpacecraftState3.setSatsInView(13);
    opssat.simulator.util.SimulatorSpacecraftState simulatorSpacecraftState12 = new opssat.simulator.util.SimulatorSpacecraftState(
        340.0d, (-1.0f), 14);
    double double13 = simulatorSpacecraftState12.getLatitude();
    java.lang.String str14 = simulatorSpacecraftState12.getMagField();
    float[] floatArray15 = simulatorSpacecraftState12.getR();
    simulatorSpacecraftState3.setRv(floatArray15);
    java.lang.String str17 = simulatorSpacecraftState3.getMagField();
    org.junit.Assert.assertTrue("'" + double4 + "' != '" + 340.0d + "'", double4 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str5 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str5.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertTrue(
        "'" + str6 + "' != '" + "X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]" + "'",
        str6.equals("X:[+.00000] ; Y:[+.00000] ; Z: [+.00000] units [N/A]"));
    org.junit.Assert.assertTrue("'" + double13 + "' != '" + 340.0d + "'", double13 == 340.0d);
    org.junit.Assert.assertTrue(
        "'" + str14 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str14.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
    org.junit.Assert.assertNotNull(floatArray15);
    org.junit.Assert.assertTrue(
        "'" + str17 + "' != '"
            + "North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]" + "'",
        str17.equals("North:[+00000.00] ; East:[+00000.00] ; Vertical: [+00000.00] units [nT]"));
  }
}
